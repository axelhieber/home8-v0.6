

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Aug 10 23:51:31 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 1.43
    84                           ; Generated 25/07/2017 GMT
    85                           ; 
    86                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F45K22 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  002450                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for uart_receiv_isr@F7298
   123  002450  53                 	db	83
   124  002451  54                 	db	84
   125  002452  47                 	db	71
   126                           
   127                           ;initializer for uart_receiv_isr@F7296
   128  002453  53                 	db	83
   129  002454  54                 	db	84
   130  002455  57                 	db	87
   131                           
   132                           	psect	mediumconst
   133  007EEE                     __pmediumconst:
   134                           	opt stack 0
   135  007EEE  00                 	db	0
   136  007EEF                     uart_receiv_isr@F7286:
   137                           	opt stack 0
   138  007EEF  00                 	db	0
   139  007EF0  00                 	db	0
   140  007EF1  00                 	db	0
   141  007EF2  00                 	db	0
   142  007EF3  00                 	db	0
   143  007EF4  00                 	db	0
   144  007EF5  00                 	db	0
   145  007EF6  00                 	db	0
   146  007EF7  00                 	db	0
   147  007EF8  00                 	db	0
   148  007EF9  00                 	db	0
   149  007EFA  00                 	db	0
   150  007EFB  00                 	db	0
   151  007EFC  00                 	db	0
   152  007EFD  00                 	db	0
   153  007EFE  00                 	db	0
   154  007EFF  00                 	db	0
   155  007F00  00                 	db	0
   156  007F01  00                 	db	0
   157  007F02  00                 	db	0
   158  007F03                     __end_ofuart_receiv_isr@F7286:
   159                           	opt stack 0
   160  007F03                     _moninit:
   161                           	opt stack 0
   162  007F03  1F                 	db	31
   163  007F04  1C                 	db	28
   164  007F05  1F                 	db	31
   165  007F06  1E                 	db	30
   166  007F07  1F                 	db	31
   167  007F08  1E                 	db	30
   168  007F09  1F                 	db	31
   169  007F0A  1F                 	db	31
   170  007F0B  1E                 	db	30
   171  007F0C  1F                 	db	31
   172  007F0D  1E                 	db	30
   173  007F0E  1F                 	db	31
   174  007F0F                     __end_of_moninit:
   175                           	opt stack 0
   176  0000                     _ANSELA	set	3896
   177  0000                     _ANSELE	set	3900
   178  0000                     _ANSELD	set	3899
   179  0000                     _ANSELB	set	3897
   180  0000                     _ANSELC	set	3898
   181  0000                     _OSCCONbits	set	4051
   182  0000                     _BAUDCON2bits	set	3952
   183  0000                     _TXSTA2bits	set	3954
   184  0000                     _PIR3	set	4004
   185  0000                     _PIR2	set	4001
   186  0000                     _PIR1	set	3998
   187  0000                     _IPR3bits	set	4005
   188  0000                     _IPR1bits	set	3999
   189  0000                     _TRISEbits	set	3990
   190  0000                     _TRISDbits	set	3989
   191  0000                     _TRISCbits	set	3988
   192  0000                     _TRISAbits	set	3986
   193  0000                     _RCSTA2bits	set	3953
   194  0000                     _TXREG2	set	3955
   195  0000                     _SPBRGH2	set	3958
   196  0000                     _SPBRG2	set	3957
   197  0000                     _TXSTA2	set	3954
   198  0000                     _RCSTA2	set	3953
   199  0000                     _BAUDCON2	set	3952
   200  0000                     _INTCON2bits	set	4081
   201  0000                     _WPUB	set	3937
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISC	set	3988
   204  0000                     _TRISB	set	3987
   205  0000                     _TRISA	set	3986
   206  0000                     _TRISE	set	3990
   207  0000                     _LATC	set	3979
   208  0000                     _LATB	set	3978
   209  0000                     _LATA	set	3977
   210  0000                     _LATD	set	3980
   211  0000                     _LATE	set	3981
   212  0000                     _T2CONbits	set	4026
   213  0000                     _TMR2	set	4028
   214  0000                     _PR2	set	4027
   215  0000                     _T2CON	set	4026
   216  0000                     _T0CONbits	set	4053
   217  0000                     _TMR0L	set	4054
   218  0000                     _TMR0H	set	4055
   219  0000                     _T0CON	set	4053
   220  0000                     _PIR1bits	set	3998
   221  0000                     _PIE3bits	set	4003
   222  0000                     _RCONbits	set	4048
   223  0000                     _OSCTUNE	set	3995
   224  0000                     _OSCCON2	set	4050
   225  0000                     _OSCCON	set	4051
   226  0000                     _PIR3bits	set	4004
   227  0000                     _LATEbits	set	3981
   228  0000                     _PIE1bits	set	3997
   229  0000                     _INTCONbits	set	4082
   230  0000                     _RCREG2	set	3956
   231  0000                     _RCREG1	set	4014
   232  0000                     _PORTEbits	set	3972
   233  0000                     _PORTDbits	set	3971
   234  0000                     _PORTCbits	set	3970
   235  0000                     _PORTBbits	set	3969
   236  0000                     _PORTAbits	set	3968
   237  0000                     _PORTE	set	3972
   238  0000                     _PORTD	set	3971
   239  0000                     _PORTC	set	3970
   240  0000                     _PORTB	set	3969
   241  0000                     _PORTA	set	3968
   242  0000                     _PLLRDY	set	32407
   243  007F0F                     STR_38:
   244  007F0F  4A                 	db	74	;'J'
   245  007F10  61                 	db	97	;'a'
   246  007F11  6E                 	db	110	;'n'
   247  007F12  46                 	db	70	;'F'
   248  007F13  65                 	db	101	;'e'
   249  007F14  62                 	db	98	;'b'
   250  007F15  4D                 	db	77	;'M'
   251  007F16  61                 	db	97	;'a'
   252  007F17  72                 	db	114	;'r'
   253  007F18  41                 	db	65	;'A'
   254  007F19  70                 	db	112	;'p'
   255  007F1A  72                 	db	114	;'r'
   256  007F1B  4D                 	db	77	;'M'
   257  007F1C  61                 	db	97	;'a'
   258  007F1D  79                 	db	121	;'y'
   259  007F1E  4A                 	db	74	;'J'
   260  007F1F  75                 	db	117	;'u'
   261  007F20  6E                 	db	110	;'n'
   262  007F21  4A                 	db	74	;'J'
   263  007F22  75                 	db	117	;'u'
   264  007F23  6C                 	db	108	;'l'
   265  007F24  41                 	db	65	;'A'
   266  007F25  75                 	db	117	;'u'
   267  007F26  67                 	db	103	;'g'
   268  007F27  53                 	db	83	;'S'
   269  007F28  65                 	db	101	;'e'
   270  007F29  70                 	db	112	;'p'
   271  007F2A  4F                 	db	79	;'O'
   272  007F2B  63                 	db	99	;'c'
   273  007F2C  74                 	db	116	;'t'
   274  007F2D  4E                 	db	78	;'N'
   275  007F2E  6F                 	db	111	;'o'
   276  007F2F  76                 	db	118	;'v'
   277  007F30  44                 	db	68	;'D'
   278  007F31  65                 	db	101	;'e'
   279  007F32  63                 	db	99	;'c'
   280  007F33  00                 	db	0
   281  007F34                     STR_37:
   282  007F34  53                 	db	83	;'S'
   283  007F35  75                 	db	117	;'u'
   284  007F36  6E                 	db	110	;'n'
   285  007F37  4D                 	db	77	;'M'
   286  007F38  6F                 	db	111	;'o'
   287  007F39  6E                 	db	110	;'n'
   288  007F3A  54                 	db	84	;'T'
   289  007F3B  75                 	db	117	;'u'
   290  007F3C  65                 	db	101	;'e'
   291  007F3D  57                 	db	87	;'W'
   292  007F3E  65                 	db	101	;'e'
   293  007F3F  64                 	db	100	;'d'
   294  007F40  54                 	db	84	;'T'
   295  007F41  68                 	db	104	;'h'
   296  007F42  75                 	db	117	;'u'
   297  007F43  46                 	db	70	;'F'
   298  007F44  72                 	db	114	;'r'
   299  007F45  69                 	db	105	;'i'
   300  007F46  53                 	db	83	;'S'
   301  007F47  61                 	db	97	;'a'
   302  007F48  74                 	db	116	;'t'
   303  007F49  00                 	db	0
   304  007F4A                     STR_34:
   305  007F4A  20                 	db	32
   306  007F4B  48                 	db	72	;'H'
   307  007F4C  69                 	db	105	;'i'
   308  007F4D  65                 	db	101	;'e'
   309  007F4E  20                 	db	32
   310  007F4F  25                 	db	37
   311  007F50  73                 	db	115	;'s'
   312  007F51  20                 	db	32
   313  007F52  61                 	db	97	;'a'
   314  007F53  78                 	db	120	;'x'
   315  007F54  65                 	db	101	;'e'
   316  007F55  6C                 	db	108	;'l'
   317  007F56  00                 	db	0
   318  007F57                     STR_21:
   319  007F57  21                 	db	33
   320  007F58  54                 	db	84	;'T'
   321  007F59  45                 	db	69	;'E'
   322  007F5A  52                 	db	82	;'R'
   323  007F5B  7E                 	db	126
   324  007F5C  30                 	db	48	;'0'
   325  007F5D  30                 	db	48	;'0'
   326  007F5E  5F                 	db	95	;'_'
   327  007F5F  00                 	db	0
   328  007F60                     STR_25:
   329  007F60  21                 	db	33
   330  007F61  54                 	db	84	;'T'
   331  007F62  45                 	db	69	;'E'
   332  007F63  52                 	db	82	;'R'
   333  007F64  7E                 	db	126
   334  007F65  31                 	db	49	;'1'
   335  007F66  30                 	db	48	;'0'
   336  007F67  5F                 	db	95	;'_'
   337  007F68  00                 	db	0
   338  007F69                     STR_17:
   339  007F69  21                 	db	33
   340  007F6A  54                 	db	84	;'T'
   341  007F6B  45                 	db	69	;'E'
   342  007F6C  52                 	db	82	;'R'
   343  007F6D  7E                 	db	126
   344  007F6E  32                 	db	50	;'2'
   345  007F6F  30                 	db	48	;'0'
   346  007F70  5F                 	db	95	;'_'
   347  007F71  00                 	db	0
   348  007F72                     STR_13:
   349  007F72  21                 	db	33
   350  007F73  54                 	db	84	;'T'
   351  007F74  45                 	db	69	;'E'
   352  007F75  52                 	db	82	;'R'
   353  007F76  7E                 	db	126
   354  007F77  33                 	db	51	;'3'
   355  007F78  30                 	db	48	;'0'
   356  007F79  5F                 	db	95	;'_'
   357  007F7A  00                 	db	0
   358  007F7B                     STR_3:
   359  007F7B  21                 	db	33
   360  007F7C  54                 	db	84	;'T'
   361  007F7D  45                 	db	69	;'E'
   362  007F7E  52                 	db	82	;'R'
   363  007F7F  7E                 	db	126
   364  007F80  34                 	db	52	;'4'
   365  007F81  30                 	db	48	;'0'
   366  007F82  5F                 	db	95	;'_'
   367  007F83  00                 	db	0
   368  007F84                     STR_9:
   369  007F84  21                 	db	33
   370  007F85  54                 	db	84	;'T'
   371  007F86  45                 	db	69	;'E'
   372  007F87  52                 	db	82	;'R'
   373  007F88  7E                 	db	126
   374  007F89  37                 	db	55	;'7'
   375  007F8A  30                 	db	48	;'0'
   376  007F8B  5F                 	db	95	;'_'
   377  007F8C  00                 	db	0
   378  007F8D                     STR_19:
   379  007F8D  21                 	db	33
   380  007F8E  54                 	db	84	;'T'
   381  007F8F  45                 	db	69	;'E'
   382  007F90  52                 	db	82	;'R'
   383  007F91  7E                 	db	126
   384  007F92  30                 	db	48	;'0'
   385  007F93  31                 	db	49	;'1'
   386  007F94  5F                 	db	95	;'_'
   387  007F95  00                 	db	0
   388  007F96                     STR_23:
   389  007F96  21                 	db	33
   390  007F97  54                 	db	84	;'T'
   391  007F98  45                 	db	69	;'E'
   392  007F99  52                 	db	82	;'R'
   393  007F9A  7E                 	db	126
   394  007F9B  31                 	db	49	;'1'
   395  007F9C  31                 	db	49	;'1'
   396  007F9D  5F                 	db	95	;'_'
   397  007F9E  00                 	db	0
   398  007F9F                     STR_15:
   399  007F9F  21                 	db	33
   400  007FA0  54                 	db	84	;'T'
   401  007FA1  45                 	db	69	;'E'
   402  007FA2  52                 	db	82	;'R'
   403  007FA3  7E                 	db	126
   404  007FA4  32                 	db	50	;'2'
   405  007FA5  31                 	db	49	;'1'
   406  007FA6  5F                 	db	95	;'_'
   407  007FA7  00                 	db	0
   408  007FA8                     STR_11:
   409  007FA8  21                 	db	33
   410  007FA9  54                 	db	84	;'T'
   411  007FAA  45                 	db	69	;'E'
   412  007FAB  52                 	db	82	;'R'
   413  007FAC  7E                 	db	126
   414  007FAD  33                 	db	51	;'3'
   415  007FAE  31                 	db	49	;'1'
   416  007FAF  5F                 	db	95	;'_'
   417  007FB0  00                 	db	0
   418  007FB1                     STR_1:
   419  007FB1  21                 	db	33
   420  007FB2  54                 	db	84	;'T'
   421  007FB3  45                 	db	69	;'E'
   422  007FB4  52                 	db	82	;'R'
   423  007FB5  7E                 	db	126
   424  007FB6  34                 	db	52	;'4'
   425  007FB7  31                 	db	49	;'1'
   426  007FB8  5F                 	db	95	;'_'
   427  007FB9  00                 	db	0
   428  007FBA                     STR_7:
   429  007FBA  21                 	db	33
   430  007FBB  54                 	db	84	;'T'
   431  007FBC  45                 	db	69	;'E'
   432  007FBD  52                 	db	82	;'R'
   433  007FBE  7E                 	db	126
   434  007FBF  37                 	db	55	;'7'
   435  007FC0  31                 	db	49	;'1'
   436  007FC1  5F                 	db	95	;'_'
   437  007FC2  00                 	db	0
   438  007FC3                     STR_36:
   439  007FC3  28                 	db	40
   440  007FC4  6E                 	db	110	;'n'
   441  007FC5  75                 	db	117	;'u'
   442  007FC6  6C                 	db	108	;'l'
   443  007FC7  6C                 	db	108	;'l'
   444  007FC8  29                 	db	41
   445  007FC9  00                 	db	0
   446  007FCA                     STR_31:
   447  007FCA  21                 	db	33
   448  007FCB  53                 	db	83	;'S'
   449  007FCC  54                 	db	84	;'T'
   450  007FCD  42                 	db	66	;'B'
   451  007FCE  7E                 	db	126
   452  007FCF  00                 	db	0
   453  007FD0                     STR_30:
   454  007FD0  21                 	db	33
   455  007FD1  53                 	db	83	;'S'
   456  007FD2  54                 	db	84	;'T'
   457  007FD3  47                 	db	71	;'G'
   458  007FD4  7E                 	db	126
   459  007FD5  00                 	db	0
   460  007FD6                     STR_33:
   461  007FD6  21                 	db	33
   462  007FD7  54                 	db	84	;'T'
   463  007FD8  4D                 	db	77	;'M'
   464  007FD9  52                 	db	82	;'R'
   465  007FDA  7E                 	db	126
   466  007FDB  00                 	db	0
   467  007FDC                     STR_28:
   468  007FDC  21                 	db	33
   469  007FDD  47                 	db	71	;'G'
   470  007FDE  54                 	db	84	;'T'
   471  007FDF  52                 	db	82	;'R'
   472  007FE0  7E                 	db	126
   473  007FE1  00                 	db	0
   474  007FE2                     STR_26:
   475  007FE2  21                 	db	33
   476  007FE3  53                 	db	83	;'S'
   477  007FE4  54                 	db	84	;'T'
   478  007FE5  52                 	db	82	;'R'
   479  007FE6  7E                 	db	126
   480  007FE7  00                 	db	0
   481  007FE8                     STR_35:
   482  007FE8  21                 	db	33
   483  007FE9  54                 	db	84	;'T'
   484  007FEA  4D                 	db	77	;'M'
   485  007FEB  53                 	db	83	;'S'
   486  007FEC  7E                 	db	126
   487  007FED  00                 	db	0
   488  007FEE                     STR_32:
   489  007FEE  21                 	db	33
   490  007FEF  53                 	db	83	;'S'
   491  007FF0  54                 	db	84	;'T'
   492  007FF1  57                 	db	87	;'W'
   493  007FF2  7E                 	db	126
   494  007FF3  00                 	db	0
   495  007FF4                     STR_29:
   496  007FF4  21                 	db	33
   497  007FF5  47                 	db	71	;'G'
   498  007FF6  41                 	db	65	;'A'
   499  007FF7  52                 	db	82	;'R'
   500  007FF8  00                 	db	0
   501  007FF9                     STR_27:
   502  007FF9  21                 	db	33
   503  007FFA  53                 	db	83	;'S'
   504  007FFB  41                 	db	65	;'A'
   505  007FFC  52                 	db	82	;'R'
   506  007FFD  00                 	db	0
   507  0000                     
   508                           ; #config settings
   509  007FFE  00                 	db	0	; dummy byte at the end
   510  0000                     
   511                           	psect	cinit
   512  001F7C                     __pcinit:
   513                           	opt stack 0
   514  001F7C                     start_initialization:
   515                           	opt stack 0
   516  001F7C                     __initialization:
   517                           	opt stack 0
   518                           
   519                           ; Initialize objects allocated to BANK0 (6 bytes)
   520                           ; load TBLPTR registers with __pidataBANK0
   521  001F7C  0E50               	movlw	low __pidataBANK0
   522  001F7E  6EF6               	movwf	tblptrl,c
   523  001F80  0E24               	movlw	high __pidataBANK0
   524  001F82  6EF7               	movwf	tblptrh,c
   525  001F84  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   526  001F86  6EF8               	movwf	tblptru,c
   527  001F88  EE00  F0F5         	lfsr	0,__pdataBANK0
   528  001F8C  EE10 F006          	lfsr	1,6
   529  001F90                     copy_data0:
   530  001F90  0009               	tblrd		*+
   531  001F92  CFF5 FFEE          	movff	tablat,postinc0
   532  001F96  50E5               	movf	postdec1,w,c
   533  001F98  50E1               	movf	fsr1l,w,c
   534  001F9A  E1FA               	bnz	copy_data0
   535                           
   536                           ; Clear objects allocated to BANK2 (104 bytes)
   537  001F9C  EE02  F000         	lfsr	0,__pbssBANK2
   538  001FA0  0E68               	movlw	104
   539  001FA2                     clear_0:
   540  001FA2  6AEE               	clrf	postinc0,c
   541  001FA4  06E8               	decf	wreg,f,c
   542  001FA6  E1FD               	bnz	clear_0
   543                           
   544                           ; Clear objects allocated to BANK1 (204 bytes)
   545  001FA8  EE01  F000         	lfsr	0,__pbssBANK1
   546  001FAC  0ECC               	movlw	204
   547  001FAE                     clear_1:
   548  001FAE  6AEE               	clrf	postinc0,c
   549  001FB0  06E8               	decf	wreg,f,c
   550  001FB2  E1FD               	bnz	clear_1
   551                           
   552                           ; Clear objects allocated to BANK0 (66 bytes)
   553  001FB4  EE00  F0B3         	lfsr	0,__pbssBANK0
   554  001FB8  0E42               	movlw	66
   555  001FBA                     clear_2:
   556  001FBA  6AEE               	clrf	postinc0,c
   557  001FBC  06E8               	decf	wreg,f,c
   558  001FBE  E1FD               	bnz	clear_2
   559                           
   560                           ; Clear objects allocated to COMRAM (16 bytes)
   561  001FC0  EE00  F04F         	lfsr	0,__pbssCOMRAM
   562  001FC4  0E10               	movlw	16
   563  001FC6                     clear_3:
   564  001FC6  6AEE               	clrf	postinc0,c
   565  001FC8  06E8               	decf	wreg,f,c
   566  001FCA  E1FD               	bnz	clear_3
   567  001FCC                     end_of_initialization:
   568                           	opt stack 0
   569  001FCC                     __end_of__initialization:
   570                           	opt stack 0
   571  001FCC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   572  001FCE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   573  001FD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   574  001FD2  6EF8               	movwf	tblptru,c
   575  001FD4  0100               	movlb	0
   576  001FD6  EFB1  F00A         	goto	_main	;jump to C main() function
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           postdec1	equ	0xFE5
   584                           fsr1l	equ	0xFE1
   585                           
   586                           	psect	bssCOMRAM
   587  00004F                     __pbssCOMRAM:
   588                           	opt stack 0
   589  00004F                     _TMR2_InterruptHandler:
   590                           	opt stack 0
   591  00004F                     	ds	2
   592  000051                     _time_zone:
   593                           	opt stack 0
   594  000051                     	ds	2
   595  000053                     _eusart2RxCount:
   596                           	opt stack 0
   597  000053                     	ds	1
   598  000054                     _eusart2RxTail:
   599                           	opt stack 0
   600  000054                     	ds	1
   601  000055                     _eusart2RxHead:
   602                           	opt stack 0
   603  000055                     	ds	1
   604  000056                     _eusart2TxBufferRemaining:
   605                           	opt stack 0
   606  000056                     	ds	1
   607  000057                     _eusart2TxTail:
   608                           	opt stack 0
   609  000057                     	ds	1
   610  000058                     _eusart2TxHead:
   611                           	opt stack 0
   612  000058                     	ds	1
   613  000059                     _IN_PulsCounter:
   614                           	opt stack 0
   615  000059                     	ds	1
   616  00005A                     combineIO_TEST@count:
   617                           	opt stack 0
   618  00005A                     	ds	1
   619  00005B                     combineIO_TEST@out:
   620                           	opt stack 0
   621  00005B                     	ds	1
   622  00005C                     combineIO_TEST@INPUT_OLD:
   623                           	opt stack 0
   624  00005C                     	ds	1
   625  00005D                     combineIO_KG@Input_Old_Stored:
   626                           	opt stack 0
   627  00005D                     	ds	1
   628  00005E                     combineIO_KG@Uart_Old_Stored:
   629                           	opt stack 0
   630  00005E                     	ds	1
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           postdec1	equ	0xFE5
   638                           fsr1l	equ	0xFE1
   639                           
   640                           	psect	bssBANK0
   641  0000B3                     __pbssBANK0:
   642                           	opt stack 0
   643  0000B3                     _IN_ChanelOutputBuffer:
   644                           	opt stack 0
   645  0000B3                     	ds	8
   646  0000BB                     __channel_pulses:
   647                           	opt stack 0
   648  0000BB                     	ds	8
   649  0000C3                     _timezone:
   650                           	opt stack 0
   651  0000C3                     	ds	4
   652  0000C7                     _timestamp:
   653                           	opt stack 0
   654  0000C7                     	ds	4
   655  0000CB                     uart_receiv_isr@buff_len:
   656                           	opt stack 0
   657  0000CB                     	ds	2
   658  0000CD                     uart_receiv_isr@len:
   659                           	opt stack 0
   660  0000CD                     	ds	2
   661  0000CF                     uart_receiv_isr@in_buff:
   662                           	opt stack 0
   663  0000CF                     	ds	20
   664  0000E3                     gmtime@tim:
   665                           	opt stack 0
   666  0000E3                     	ds	18
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           
   676                           	psect	dataBANK0
   677  0000F5                     __pdataBANK0:
   678                           	opt stack 0
   679  0000F5                     uart_receiv_isr@F7298:
   680                           	opt stack 0
   681  0000F5                     	ds	3
   682  0000F8                     uart_receiv_isr@F7296:
   683                           	opt stack 0
   684  0000F8                     	ds	3
   685                           tblptru	equ	0xFF8
   686                           tblptrh	equ	0xFF7
   687                           tblptrl	equ	0xFF6
   688                           tablat	equ	0xFF5
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           postdec1	equ	0xFE5
   692                           fsr1l	equ	0xFE1
   693                           
   694                           	psect	bssBANK1
   695  000100                     __pbssBANK1:
   696                           	opt stack 0
   697  000100                     _timerUartBufferGlobal:
   698                           	opt stack 0
   699  000100                     	ds	20
   700  000114                     _timerInputBufferGlobal:
   701                           	opt stack 0
   702  000114                     	ds	20
   703  000128                     _outBufferGlobal_new:
   704                           	opt stack 0
   705  000128                     	ds	20
   706  00013C                     _t:
   707                           	opt stack 0
   708  00013C                     	ds	18
   709  00014E                     _eusart2RxBuffer:
   710                           	opt stack 0
   711  00014E                     	ds	8
   712  000156                     _IN_ChanelAktivated:
   713                           	opt stack 0
   714  000156                     	ds	8
   715  00015E                     _IN_ChanelCyclesCounterDown:
   716                           	opt stack 0
   717  00015E                     	ds	8
   718  000166                     _IN_ChanelCyclesCounterUp:
   719                           	opt stack 0
   720  000166                     	ds	8
   721  00016E                     _timer0ReloadVal:
   722                           	opt stack 0
   723  00016E                     	ds	2
   724  000170                     _TMR0_InterruptHandler:
   725                           	opt stack 0
   726  000170                     	ds	2
   727  000172                     combineIO_KG_TEST@tOutput:
   728                           	opt stack 0
   729  000172                     	ds	1
   730  000173                     combineIO_KG_TEST@Input_Old_Stored:
   731                           	opt stack 0
   732  000173                     	ds	1
   733  000174                     combineIO_KG_TEST@Uart_Old_Stored:
   734                           	opt stack 0
   735  000174                     	ds	1
   736  000175                     asctime@buf:
   737                           	opt stack 0
   738  000175                     	ds	27
   739  000190                     _netBufferGlobal_new:
   740                           	opt stack 0
   741  000190                     	ds	20
   742  0001A4                     _netBufferGlobal:
   743                           	opt stack 0
   744  0001A4                     	ds	20
   745  0001B8                     _outBufferGlobal:
   746                           	opt stack 0
   747  0001B8                     	ds	20
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           postinc0	equ	0xFEE
   753                           wreg	equ	0xFE8
   754                           postdec1	equ	0xFE5
   755                           fsr1l	equ	0xFE1
   756                           
   757                           	psect	bssBANK2
   758  000200                     __pbssBANK2:
   759                           	opt stack 0
   760  000200                     _eusart2TxBuffer:
   761                           	opt stack 0
   762  000200                     	ds	64
   763  000240                     uart_receiv_isr@F7300:
   764                           	opt stack 0
   765  000240                     	ds	40
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           postinc0	equ	0xFEE
   771                           wreg	equ	0xFE8
   772                           postdec1	equ	0xFE5
   773                           fsr1l	equ	0xFE1
   774                           
   775                           	psect	cstackBANK1
   776  0001CC                     __pcstackBANK1:
   777                           	opt stack 0
   778  0001CC                     pushOutput@change:
   779                           	opt stack 0
   780  0001CC                     EUSART2_Write@txData:
   781                           	opt stack 0
   782  0001CC                     array2char@array:
   783                           	opt stack 0
   784  0001CC                     TMR0_SetInterruptHandler@InterruptHandler:
   785                           	opt stack 0
   786  0001CC                     TMR2_SetInterruptHandler@InterruptHandler:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x0
   790  0001CC                     	ds	1
   791  0001CD                     pushOutput@OUT:
   792                           	opt stack 0
   793  0001CD                     putUartStrings@text:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x1
   797  0001CD                     	ds	1
   798  0001CE                     ??_TMR0_Initialize:
   799  0001CE                     ??_array2char:
   800  0001CE                     pushOutput@tOut:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x2
   804  0001CE                     	ds	1
   805  0001CF                     array2char@b2b:
   806                           	opt stack 0
   807  0001CF                     putUartStrings@len:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x3
   811  0001CF                     	ds	1
   812  0001D0                     
   813                           ; 1 bytes @ 0x4
   814  0001D0                     	ds	1
   815  0001D1                     ??_putUartStrings:
   816                           
   817                           ; 1 bytes @ 0x5
   818  0001D1                     	ds	5
   819  0001D6                     putUartStrings@i:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0xA
   823  0001D6                     	ds	2
   824  0001D8                     combineIO_KG_TEST@UART_NEW:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0xC
   828  0001D8                     	ds	1
   829  0001D9                     combineIO_KG_TEST@INPUT:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0xD
   833  0001D9                     	ds	1
   834  0001DA                     combineIO_KG_TEST@INPUT_CHANGED:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0xE
   838  0001DA                     	ds	1
   839  0001DB                     combineIO_KG_TEST@BLOCKED:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0xF
   843  0001DB                     	ds	1
   844  0001DC                     combineIO_KG_TEST@FORCED:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x10
   848  0001DC                     	ds	1
   849  0001DD                     ??_combineIO_KG_TEST:
   850                           
   851                           ; 1 bytes @ 0x11
   852  0001DD                     	ds	2
   853  0001DF                     combineIO_KG_TEST@tInput:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x13
   857  0001DF                     	ds	1
   858  0001E0                     combineIO_KG_TEST@tUart_Changed:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x14
   862  0001E0                     	ds	1
   863  0001E1                     combineIO_KG_TEST@tInput_Changed:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x15
   867  0001E1                     	ds	1
   868  0001E2                     combineIO_KG_TEST@tTimerUart:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x16
   872  0001E2                     	ds	1
   873  0001E3                     combineIO_KG_TEST@UART:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x17
   877  0001E3                     	ds	1
   878  0001E4                     combineIO_KG_TEST@tTimerInput:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x18
   882  0001E4                     	ds	1
   883  0001E5                     combineIO_KG_TEST@tUart:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x19
   887  0001E5                     	ds	1
   888  0001E6                     combineIO_KG_TEST@tChanged:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x1A
   892  0001E6                     	ds	1
   893  0001E7                     combineIO_KG_TEST@tUart_New:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x1B
   897  0001E7                     	ds	1
   898  0001E8                     main@Data_Out_compare:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x1C
   902  0001E8                     	ds	1
   903  0001E9                     main@UART_Input_compare:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x1D
   907  0001E9                     	ds	1
   908  0001EA                     main@Data_Blocked:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x1E
   912  0001EA                     	ds	1
   913  0001EB                     main@Data_Forced:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x1F
   917  0001EB                     	ds	1
   918  0001EC                     main@Uart_New:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x20
   922  0001EC                     	ds	1
   923  0001ED                     main@Data_Input_compare:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x21
   927  0001ED                     	ds	1
   928  0001EE                     main@Data_Input_old:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x22
   932  0001EE                     	ds	1
   933  0001EF                     main@UART_Input_old:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x23
   937  0001EF                     	ds	1
   938  0001F0                     main@Data_Out_old:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x24
   942  0001F0                     	ds	1
   943  0001F1                     main@Uart_Input:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x25
   947  0001F1                     	ds	1
   948  0001F2                     main@Data_Input:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x26
   952  0001F2                     	ds	1
   953  0001F3                     main@Data_Out:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x27
   957  0001F3                     	ds	1
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           postinc0	equ	0xFEE
   963                           wreg	equ	0xFE8
   964                           postdec1	equ	0xFE5
   965                           fsr1l	equ	0xFE1
   966                           
   967                           	psect	cstackBANK0
   968  000060                     __pcstackBANK0:
   969                           	opt stack 0
   970  000060                     uart_receiv_isr@emty_buff:
   971                           	opt stack 0
   972                           
   973                           ; 20 bytes @ 0x0
   974  000060                     	ds	20
   975  000074                     uart_receiv_isr@text:
   976                           	opt stack 0
   977                           
   978                           ; 40 bytes @ 0x14
   979  000074                     	ds	40
   980  00009C                     uart_receiv_isr@BEFEHL_SET_WHITE:
   981                           	opt stack 0
   982                           
   983                           ; 3 bytes @ 0x3C
   984  00009C                     	ds	3
   985  00009F                     uart_receiv_isr@BEFEHL_SET_GREEN:
   986                           	opt stack 0
   987                           
   988                           ; 3 bytes @ 0x3F
   989  00009F                     	ds	3
   990  0000A2                     uart_receiv_isr@SEPERATOR:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x42
   994  0000A2                     	ds	1
   995  0000A3                     uart_receiv_isr@aa_1749:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x43
   999  0000A3                     	ds	2
  1000  0000A5                     uart_receiv_isr@aa:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x45
  1004  0000A5                     	ds	4
  1005  0000A9                     uart_receiv_isr@number:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x49
  1009  0000A9                     	ds	4
  1010  0000AD                     uart_receiv_isr@STX:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x4D
  1014  0000AD                     	ds	1
  1015  0000AE                     uart_receiv_isr@ETX:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x4E
  1019  0000AE                     	ds	1
  1020  0000AF                     uart_receiv_isr@buff_ended:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x4F
  1024  0000AF                     	ds	2
  1025  0000B1                     uart_receiv_isr@buff:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x51
  1029  0000B1                     	ds	2
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           fsr1l	equ	0xFE1
  1038                           
  1039                           	psect	cstackCOMRAM
  1040  000001                     __pcstackCOMRAM:
  1041                           	opt stack 0
  1042  000001                     ??_isspace:
  1043  000001                     ??_isdigit:
  1044  000001                     ??_isupper:
  1045  000001                     ?_strncmp:
  1046                           	opt stack 0
  1047  000001                     ?___wmul:
  1048                           	opt stack 0
  1049  000001                     ?___awdiv:
  1050                           	opt stack 0
  1051  000001                     ?___awmod:
  1052                           	opt stack 0
  1053  000001                     ?___lwmod:
  1054                           	opt stack 0
  1055  000001                     ?_getTimeStemp:
  1056                           	opt stack 0
  1057  000001                     ?___lmul:
  1058                           	opt stack 0
  1059  000001                     ?___aldiv:
  1060                           	opt stack 0
  1061  000001                     ?___almod:
  1062                           	opt stack 0
  1063  000001                     readPort@Port:
  1064                           	opt stack 0
  1065  000001                     ___lbdiv@divisor:
  1066                           	opt stack 0
  1067  000001                     toupper@c:
  1068                           	opt stack 0
  1069  000001                     i2EUSART2_Write@txData:
  1070                           	opt stack 0
  1071  000001                     ___wmul@multiplier:
  1072                           	opt stack 0
  1073  000001                     ___awdiv@dividend:
  1074                           	opt stack 0
  1075  000001                     ___awmod@dividend:
  1076                           	opt stack 0
  1077  000001                     ___lwmod@dividend:
  1078                           	opt stack 0
  1079  000001                     memset@p1:
  1080                           	opt stack 0
  1081  000001                     strncmp@s1:
  1082                           	opt stack 0
  1083  000001                     setTimeStemp@time:
  1084                           	opt stack 0
  1085  000001                     ___lmul@multiplier:
  1086                           	opt stack 0
  1087  000001                     ___aldiv@dividend:
  1088                           	opt stack 0
  1089  000001                     ___almod@dividend:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x0
  1093  000001                     	ds	1
  1094  000002                     readPortPin@Pin:
  1095                           	opt stack 0
  1096  000002                     ___lbdiv@dividend:
  1097                           	opt stack 0
  1098  000002                     _isdigit$3653:
  1099                           	opt stack 0
  1100  000002                     _isspace$3656:
  1101                           	opt stack 0
  1102  000002                     _isupper$3659:
  1103                           	opt stack 0
  1104  000002                     i2putUartStrings@text:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x1
  1108  000002                     	ds	1
  1109  000003                     readPortPin@Port:
  1110                           	opt stack 0
  1111  000003                     ___lbdiv@counter:
  1112                           	opt stack 0
  1113  000003                     isdigit@c:
  1114                           	opt stack 0
  1115  000003                     isspace@c:
  1116                           	opt stack 0
  1117  000003                     isupper@c:
  1118                           	opt stack 0
  1119  000003                     ___wmul@multiplicand:
  1120                           	opt stack 0
  1121  000003                     ___awdiv@divisor:
  1122                           	opt stack 0
  1123  000003                     ___awmod@divisor:
  1124                           	opt stack 0
  1125  000003                     ___lwmod@divisor:
  1126                           	opt stack 0
  1127  000003                     memset@c:
  1128                           	opt stack 0
  1129  000003                     strncmp@s2:
  1130                           	opt stack 0
  1131                           
  1132                           ; 2 bytes @ 0x2
  1133  000003                     	ds	1
  1134  000004                     ??_isalpha:
  1135  000004                     readPortPin@data:
  1136                           	opt stack 0
  1137  000004                     ___lbdiv@quotient:
  1138                           	opt stack 0
  1139  000004                     i2putUartStrings@len:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x3
  1143  000004                     	ds	1
  1144  000005                     getInputPin@in:
  1145                           	opt stack 0
  1146  000005                     ___awdiv@counter:
  1147                           	opt stack 0
  1148  000005                     ___awmod@counter:
  1149                           	opt stack 0
  1150  000005                     ___lwmod@counter:
  1151                           	opt stack 0
  1152  000005                     _isalpha$3650:
  1153                           	opt stack 0
  1154  000005                     ___wmul@product:
  1155                           	opt stack 0
  1156  000005                     memset@n:
  1157                           	opt stack 0
  1158  000005                     strncmp@len:
  1159                           	opt stack 0
  1160  000005                     ___lmul@multiplicand:
  1161                           	opt stack 0
  1162  000005                     ___aldiv@divisor:
  1163                           	opt stack 0
  1164  000005                     ___almod@divisor:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x4
  1168  000005                     	ds	1
  1169  000006                     ??i2_putUartStrings:
  1170  000006                     ?_dylen:
  1171                           	opt stack 0
  1172  000006                     ___awdiv@sign:
  1173                           	opt stack 0
  1174  000006                     ___awmod@sign:
  1175                           	opt stack 0
  1176  000006                     isalpha@c:
  1177                           	opt stack 0
  1178  000006                     dylen@yr:
  1179                           	opt stack 0
  1180                           
  1181                           ; 2 bytes @ 0x5
  1182  000006                     	ds	1
  1183  000007                     ??_strncmp:
  1184  000007                     button_input_isr@x:
  1185                           	opt stack 0
  1186  000007                     ___awdiv@quotient:
  1187                           	opt stack 0
  1188  000007                     memset@p:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x6
  1192  000007                     	ds	1
  1193  000008                     ??_dylen:
  1194                           
  1195                           ; 1 bytes @ 0x7
  1196  000008                     	ds	1
  1197  000009                     ___aldiv@counter:
  1198                           	opt stack 0
  1199  000009                     ___almod@counter:
  1200                           	opt stack 0
  1201  000009                     put2d@cp:
  1202                           	opt stack 0
  1203  000009                     ___lmul@product:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x8
  1207  000009                     	ds	1
  1208  00000A                     ___aldiv@sign:
  1209                           	opt stack 0
  1210  00000A                     ___almod@sign:
  1211                           	opt stack 0
  1212                           
  1213                           ; 1 bytes @ 0x9
  1214  00000A                     	ds	1
  1215  00000B                     put2d@i:
  1216                           	opt stack 0
  1217  00000B                     i2putUartStrings@i:
  1218                           	opt stack 0
  1219  00000B                     ___aldiv@quotient:
  1220                           	opt stack 0
  1221                           
  1222                           ; 4 bytes @ 0xA
  1223  00000B                     	ds	1
  1224  00000C                     put2d@cl:
  1225                           	opt stack 0
  1226                           
  1227                           ; 1 bytes @ 0xB
  1228  00000C                     	ds	1
  1229  00000D                     ?_strtol:
  1230                           	opt stack 0
  1231  00000D                     put2d@ct:
  1232                           	opt stack 0
  1233  00000D                     strtol@s:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0xC
  1237  00000D                     	ds	1
  1238  00000E                     
  1239                           ; 1 bytes @ 0xD
  1240  00000E                     	ds	1
  1241  00000F                     ?_gmtime:
  1242                           	opt stack 0
  1243  00000F                     gmtime@tp:
  1244                           	opt stack 0
  1245  00000F                     strtol@endptr:
  1246                           	opt stack 0
  1247                           
  1248                           ; 2 bytes @ 0xE
  1249  00000F                     	ds	2
  1250  000011                     ??_gmtime:
  1251  000011                     strtol@base:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x10
  1255  000011                     	ds	2
  1256  000013                     ??_strtol:
  1257                           
  1258                           ; 1 bytes @ 0x12
  1259  000013                     	ds	1
  1260  000014                     gmtime@tc:
  1261                           	opt stack 0
  1262                           
  1263                           ; 4 bytes @ 0x13
  1264  000014                     	ds	3
  1265  000017                     strtol@sign:
  1266                           	opt stack 0
  1267                           
  1268                           ; 1 bytes @ 0x16
  1269  000017                     	ds	1
  1270  000018                     ?_localtime:
  1271                           	opt stack 0
  1272  000018                     localtime@tp:
  1273                           	opt stack 0
  1274  000018                     strtol@a:
  1275                           	opt stack 0
  1276                           
  1277                           ; 4 bytes @ 0x17
  1278  000018                     	ds	2
  1279  00001A                     ??_localtime:
  1280                           
  1281                           ; 1 bytes @ 0x19
  1282  00001A                     	ds	2
  1283  00001C                     strtol@c:
  1284                           	opt stack 0
  1285                           
  1286                           ; 1 bytes @ 0x1B
  1287  00001C                     	ds	2
  1288  00001E                     localtime@t:
  1289                           	opt stack 0
  1290                           
  1291                           ; 4 bytes @ 0x1D
  1292  00001E                     	ds	4
  1293  000022                     ?_asctime:
  1294                           	opt stack 0
  1295  000022                     asctime@tim:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0x21
  1299  000022                     	ds	2
  1300  000024                     _asctime$3948:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x23
  1304  000024                     	ds	1
  1305  000025                     asctime@s:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x24
  1309  000025                     	ds	2
  1310  000027                     asctime@cp:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x26
  1314  000027                     	ds	2
  1315  000029                     ?_sprintf:
  1316                           	opt stack 0
  1317  000029                     sprintf@sp:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x28
  1321  000029                     	ds	2
  1322  00002B                     sprintf@f:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x2A
  1326  00002B                     	ds	4
  1327  00002F                     sprintf@flag:
  1328                           	opt stack 0
  1329                           
  1330                           ; 1 bytes @ 0x2E
  1331  00002F                     	ds	1
  1332  000030                     sprintf@ap:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x2F
  1336  000030                     	ds	2
  1337  000032                     sprintf@c:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x31
  1341  000032                     	ds	1
  1342  000033                     sprintf@cp:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x32
  1346  000033                     	ds	2
  1347  000035                     ??_uart_receiv_isr:
  1348                           
  1349                           ; 1 bytes @ 0x34
  1350  000035                     	ds	8
  1351  00003D                     ??_INTERRUPT_InterruptManager:
  1352                           
  1353                           ; 1 bytes @ 0x3C
  1354  00003D                     	ds	18
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1l	equ	0xFE1
  1363                           
  1364 ;;
  1365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1366 ;;
  1367 ;; *************** function _main *****************
  1368 ;; Defined at:
  1369 ;;		line 51 in file "app_h8_kg_main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  Data_Out        1   39[BANK1 ] unsigned char 
  1374 ;;  Data_Input      1   38[BANK1 ] unsigned char 
  1375 ;;  Uart_Input      1   37[BANK1 ] unsigned char 
  1376 ;;  Data_Out_old    1   36[BANK1 ] unsigned char 
  1377 ;;  UART_Input_o    1   35[BANK1 ] unsigned char 
  1378 ;;  Data_Input_o    1   34[BANK1 ] unsigned char 
  1379 ;;  Data_Input_c    1   33[BANK1 ] unsigned char 
  1380 ;;  Uart_New        1   32[BANK1 ] unsigned char 
  1381 ;;  Data_Forced     1   31[BANK1 ] unsigned char 
  1382 ;;  Data_Blocked    1   30[BANK1 ] unsigned char 
  1383 ;;  UART_Input_c    1   29[BANK1 ] unsigned char 
  1384 ;;  Data_Out_com    1   28[BANK1 ] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1394 ;;      Params:         0       0       0       0       0       0       0
  1395 ;;      Locals:         0       0      12       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0
  1397 ;;      Totals:         0       0      12       0       0       0       0
  1398 ;;Total ram usage:       12 bytes
  1399 ;; Hardware stack levels required when called:    9
  1400 ;; This function calls:
  1401 ;;		_EUSART2_Initialize
  1402 ;;		_INTERRUPT_Initialize
  1403 ;;		_InitApp
  1404 ;;		_OSCILLATOR_Initialize
  1405 ;;		_SYSTEM_Initialize
  1406 ;;		_TMR0_Initialize
  1407 ;;		_TMR0_SetInterruptHandler
  1408 ;;		_TMR2_Initialize
  1409 ;;		_TMR2_SetInterruptHandler
  1410 ;;		_WNOP
  1411 ;;		_array2char
  1412 ;;		_combineIO_KG_TEST
  1413 ;;		_pushOutput
  1414 ;;		_timeInit
  1415 ;; This function is called by:
  1416 ;;		Startup code after reset
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text0
  1421  001562                     __ptext0:
  1422                           	opt stack 0
  1423  001562                     _main:
  1424                           	opt stack 22
  1425                           
  1426                           ;app_h8_kg_main.c: 53: char Uart_Input=0;
  1427                           
  1428                           ;incstack = 0
  1429  001562  0E00               	movlw	0
  1430  001564  0101               	movlb	1	; () banked
  1431  001566  6FF1               	movwf	main@Uart_Input& (0+255),b
  1432                           
  1433                           ;app_h8_kg_main.c: 54: char Uart_New=0;
  1434  001568  0E00               	movlw	0
  1435  00156A  0101               	movlb	1	; () banked
  1436  00156C  6FEC               	movwf	main@Uart_New& (0+255),b
  1437                           
  1438                           ;app_h8_kg_main.c: 55: char Data_Input=0;
  1439  00156E  0E00               	movlw	0
  1440  001570  0101               	movlb	1	; () banked
  1441  001572  6FF2               	movwf	main@Data_Input& (0+255),b
  1442                           
  1443                           ;app_h8_kg_main.c: 56: char Data_Out=0;
  1444  001574  0E00               	movlw	0
  1445  001576  0101               	movlb	1	; () banked
  1446  001578  6FF3               	movwf	main@Data_Out& (0+255),b
  1447                           
  1448                           ;app_h8_kg_main.c: 57: char Data_Out_old=0;
  1449  00157A  0E00               	movlw	0
  1450  00157C  0101               	movlb	1	; () banked
  1451  00157E  6FF0               	movwf	main@Data_Out_old& (0+255),b
  1452                           
  1453                           ;app_h8_kg_main.c: 58: char Data_Out_compare=0;
  1454  001580  0E00               	movlw	0
  1455  001582  0101               	movlb	1	; () banked
  1456  001584  6FE8               	movwf	main@Data_Out_compare& (0+255),b
  1457                           
  1458                           ;app_h8_kg_main.c: 59: char Data_Input_compare=0;
  1459  001586  0E00               	movlw	0
  1460  001588  0101               	movlb	1	; () banked
  1461  00158A  6FED               	movwf	main@Data_Input_compare& (0+255),b
  1462                           
  1463                           ;app_h8_kg_main.c: 60: char Data_Input_old=0;
  1464  00158C  0E00               	movlw	0
  1465  00158E  0101               	movlb	1	; () banked
  1466  001590  6FEE               	movwf	main@Data_Input_old& (0+255),b
  1467                           
  1468                           ;app_h8_kg_main.c: 62: char UART_Input_compare=0;
  1469  001592  0E00               	movlw	0
  1470  001594  0101               	movlb	1	; () banked
  1471  001596  6FE9               	movwf	main@UART_Input_compare& (0+255),b
  1472                           
  1473                           ;app_h8_kg_main.c: 63: char UART_Input_old=0;
  1474  001598  0E00               	movlw	0
  1475  00159A  0101               	movlb	1	; () banked
  1476  00159C  6FEF               	movwf	main@UART_Input_old& (0+255),b
  1477                           
  1478                           ;app_h8_kg_main.c: 65: char Data_Blocked=0;
  1479  00159E  0E00               	movlw	0
  1480  0015A0  0101               	movlb	1	; () banked
  1481  0015A2  6FEA               	movwf	main@Data_Blocked& (0+255),b
  1482                           
  1483                           ;app_h8_kg_main.c: 66: char Data_Forced=0;
  1484  0015A4  0E00               	movlw	0
  1485  0015A6  0101               	movlb	1	; () banked
  1486  0015A8  6FEB               	movwf	main@Data_Forced& (0+255),b
  1487                           
  1488                           ; BSR set to: 1
  1489                           ;app_h8_kg_main.c: 69: SYSTEM_Initialize();
  1490  0015AA  ECCC  F011         	call	_SYSTEM_Initialize	;wreg free
  1491                           
  1492                           ;app_h8_kg_main.c: 71: timeInit();
  1493  0015AE  ECD9  F011         	call	_timeInit	;wreg free
  1494                           
  1495                           ;app_h8_kg_main.c: 72: time_zone=-120;
  1496  0015B2  0EFF               	movlw	255
  1497  0015B4  6E52               	movwf	_time_zone+1,c
  1498  0015B6  0E88               	movlw	136
  1499  0015B8  6E51               	movwf	_time_zone,c
  1500                           
  1501                           ;app_h8_kg_main.c: 75: InitApp();
  1502  0015BA  EC2B  F012         	call	_InitApp	;wreg free
  1503                           
  1504                           ;app_h8_kg_main.c: 77: INTERRUPT_Initialize();
  1505  0015BE  EC34  F012         	call	_INTERRUPT_Initialize	;wreg free
  1506                           
  1507                           ;app_h8_kg_main.c: 78: OSCILLATOR_Initialize();
  1508  0015C2  ECED  F011         	call	_OSCILLATOR_Initialize	;wreg free
  1509                           
  1510                           ;app_h8_kg_main.c: 79: TMR2_Initialize();
  1511  0015C6  EC51  F011         	call	_TMR2_Initialize	;wreg free
  1512                           
  1513                           ;app_h8_kg_main.c: 80: TMR0_Initialize();
  1514  0015CA  EC18  F010         	call	_TMR0_Initialize	;wreg free
  1515                           
  1516                           ;app_h8_kg_main.c: 81: EUSART2_Initialize();
  1517  0015CE  ECF6  F010         	call	_EUSART2_Initialize	;wreg free
  1518                           
  1519                           ;app_h8_kg_main.c: 84: INTCONbits.PEIE = 1;
  1520  0015D2  8CF2               	bsf	intcon,6,c	;volatile
  1521                           
  1522                           ;app_h8_kg_main.c: 85: PIE1bits.TMR2IE = 1;
  1523  0015D4  829D               	bsf	3997,1,c	;volatile
  1524                           
  1525                           ;app_h8_kg_main.c: 87: (INTCONbits.GIE = 1);
  1526  0015D6  8EF2               	bsf	intcon,7,c	;volatile
  1527                           
  1528                           ;app_h8_kg_main.c: 88: (INTCONbits.PEIE = 1);
  1529  0015D8  8CF2               	bsf	intcon,6,c	;volatile
  1530                           
  1531                           ;app_h8_kg_main.c: 91: TMR2_SetInterruptHandler(button_input_isr);
  1532  0015DA  0E8A               	movlw	low _button_input_isr
  1533  0015DC  0101               	movlb	1	; () banked
  1534  0015DE  6FCC               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  1535  0015E0  0E10               	movlw	high _button_input_isr
  1536  0015E2  0101               	movlb	1	; () banked
  1537  0015E4  6FCD               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1538  0015E6  EC19  F012         	call	_TMR2_SetInterruptHandler	;wreg free
  1539                           
  1540                           ;app_h8_kg_main.c: 92: TMR0_SetInterruptHandler(timer_mult_isr);
  1541  0015EA  0E46               	movlw	low _timer_mult_isr
  1542  0015EC  0101               	movlb	1	; () banked
  1543  0015EE  6FCC               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1544  0015F0  0E24               	movlw	high _timer_mult_isr
  1545  0015F2  0101               	movlb	1	; () banked
  1546  0015F4  6FCD               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1547  0015F6  EC1E  F012         	call	_TMR0_SetInterruptHandler	;wreg free
  1548                           
  1549                           ;app_h8_kg_main.c: 95: LATEbits.LATE1=1;
  1550  0015FA  828D               	bsf	3981,1,c	;volatile
  1551                           
  1552                           ;app_h8_kg_main.c: 101: __nop();
  1553  0015FC  F000               	nop	
  1554  0015FE                     
  1555                           ;app_h8_kg_main.c: 106: {
  1556                           ;app_h8_kg_main.c: 110: (INTCONbits.GIE = 0);
  1557  0015FE  9EF2               	bcf	intcon,7,c	;volatile
  1558                           
  1559                           ;app_h8_kg_main.c: 111: __nop();
  1560  001600  F000               	nop	
  1561                           
  1562                           ;app_h8_kg_main.c: 112: __nop();
  1563  001602  F000               	nop	
  1564                           
  1565                           ;app_h8_kg_main.c: 113: Data_Input=array2char(outBufferGlobal);
  1566  001604  0EB8               	movlw	low _outBufferGlobal
  1567  001606  0101               	movlb	1	; () banked
  1568  001608  6FCC               	movwf	array2char@array& (0+255),b
  1569  00160A  0E01               	movlw	high _outBufferGlobal
  1570  00160C  0101               	movlb	1	; () banked
  1571  00160E  6FCD               	movwf	(array2char@array+1)& (0+255),b
  1572  001610  EC0C  F00A         	call	_array2char	;wreg free
  1573  001614  0101               	movlb	1	; () banked
  1574  001616  6FF2               	movwf	main@Data_Input& (0+255),b
  1575                           
  1576                           ; BSR set to: 1
  1577                           ;app_h8_kg_main.c: 114: Uart_Input=array2char(netBufferGlobal);
  1578  001618  0EA4               	movlw	low _netBufferGlobal
  1579  00161A  0101               	movlb	1	; () banked
  1580  00161C  6FCC               	movwf	array2char@array& (0+255),b
  1581  00161E  0E01               	movlw	high _netBufferGlobal
  1582  001620  0101               	movlb	1	; () banked
  1583  001622  6FCD               	movwf	(array2char@array+1)& (0+255),b
  1584  001624  EC0C  F00A         	call	_array2char	;wreg free
  1585  001628  0101               	movlb	1	; () banked
  1586  00162A  6FF1               	movwf	main@Uart_Input& (0+255),b
  1587                           
  1588                           ; BSR set to: 1
  1589                           ;app_h8_kg_main.c: 115: Uart_New =array2char(netBufferGlobal_new);
  1590  00162C  0E90               	movlw	low _netBufferGlobal_new
  1591  00162E  0101               	movlb	1	; () banked
  1592  001630  6FCC               	movwf	array2char@array& (0+255),b
  1593  001632  0E01               	movlw	high _netBufferGlobal_new
  1594  001634  0101               	movlb	1	; () banked
  1595  001636  6FCD               	movwf	(array2char@array+1)& (0+255),b
  1596  001638  EC0C  F00A         	call	_array2char	;wreg free
  1597  00163C  0101               	movlb	1	; () banked
  1598  00163E  6FEC               	movwf	main@Uart_New& (0+255),b
  1599                           
  1600                           ; BSR set to: 1
  1601                           ;app_h8_kg_main.c: 116: (INTCONbits.GIE = 1);
  1602  001640  8EF2               	bsf	intcon,7,c	;volatile
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;app_h8_kg_main.c: 118: Data_Out_compare = Data_Out ^ Data_Out_old;
  1606  001642  0101               	movlb	1	; () banked
  1607  001644  51F3               	movf	main@Data_Out& (0+255),w,b
  1608  001646  0101               	movlb	1	; () banked
  1609  001648  19F0               	xorwf	main@Data_Out_old& (0+255),w,b
  1610  00164A  0101               	movlb	1	; () banked
  1611  00164C  6FE8               	movwf	main@Data_Out_compare& (0+255),b
  1612                           
  1613                           ; BSR set to: 1
  1614                           ;app_h8_kg_main.c: 119: Data_Input_compare=Data_Input ^ Data_Input_old;
  1615  00164E  0101               	movlb	1	; () banked
  1616  001650  51F2               	movf	main@Data_Input& (0+255),w,b
  1617  001652  0101               	movlb	1	; () banked
  1618  001654  19EE               	xorwf	main@Data_Input_old& (0+255),w,b
  1619  001656  0101               	movlb	1	; () banked
  1620  001658  6FED               	movwf	main@Data_Input_compare& (0+255),b
  1621                           
  1622                           ; BSR set to: 1
  1623                           ;app_h8_kg_main.c: 120: UART_Input_compare=Uart_Input ^ UART_Input_old;
  1624  00165A  0101               	movlb	1	; () banked
  1625  00165C  51F1               	movf	main@Uart_Input& (0+255),w,b
  1626  00165E  0101               	movlb	1	; () banked
  1627  001660  19EF               	xorwf	main@UART_Input_old& (0+255),w,b
  1628  001662  0101               	movlb	1	; () banked
  1629  001664  6FE9               	movwf	main@UART_Input_compare& (0+255),b
  1630                           
  1631                           ; BSR set to: 1
  1632                           ;app_h8_kg_main.c: 123: Data_Out=combineIO_KG_TEST( Uart_Input, Uart_New, Data_Input, Da
      +                          ta_Input_compare, Data_Blocked, Data_Forced);
  1633  001666  C1EC  F1D8         	movff	main@Uart_New,combineIO_KG_TEST@UART_NEW
  1634  00166A  C1F2  F1D9         	movff	main@Data_Input,combineIO_KG_TEST@INPUT
  1635  00166E  C1ED  F1DA         	movff	main@Data_Input_compare,combineIO_KG_TEST@INPUT_CHANGED
  1636  001672  C1EA  F1DB         	movff	main@Data_Blocked,combineIO_KG_TEST@BLOCKED
  1637  001676  C1EB  F1DC         	movff	main@Data_Forced,combineIO_KG_TEST@FORCED
  1638  00167A  0101               	movlb	1	; () banked
  1639  00167C  51F1               	movf	main@Uart_Input& (0+255),w,b
  1640  00167E  EC6E  F000         	call	_combineIO_KG_TEST
  1641  001682  0101               	movlb	1	; () banked
  1642  001684  6FF3               	movwf	main@Data_Out& (0+255),b
  1643                           
  1644                           ; BSR set to: 1
  1645                           ;app_h8_kg_main.c: 124: pushOutput(Data_Out,Data_Out_old);
  1646  001686  C1F0  F1CC         	movff	main@Data_Out_old,pushOutput@change
  1647  00168A  0101               	movlb	1	; () banked
  1648  00168C  51F3               	movf	main@Data_Out& (0+255),w,b
  1649  00168E  EC57  F00F         	call	_pushOutput
  1650                           
  1651                           ;app_h8_kg_main.c: 126: Data_Out_old=Data_Out;
  1652  001692  C1F3  F1F0         	movff	main@Data_Out,main@Data_Out_old
  1653                           
  1654                           ;app_h8_kg_main.c: 127: Data_Input_old=Data_Input;
  1655  001696  C1F2  F1EE         	movff	main@Data_Input,main@Data_Input_old
  1656                           
  1657                           ;app_h8_kg_main.c: 128: Uart_Input = UART_Input_old;
  1658  00169A  C1EF  F1F1         	movff	main@UART_Input_old,main@Uart_Input
  1659                           
  1660                           ;app_h8_kg_main.c: 133: WNOP();
  1661  00169E  EC2E  F012         	call	_WNOP	;wreg free
  1662  0016A2  D7AD               	goto	l462
  1663  0016A4                     __end_of_main:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           intcon	equ	0xFF2
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           fsr1l	equ	0xFE1
  1674                           
  1675 ;; *************** function _timeInit *****************
  1676 ;; Defined at:
  1677 ;;		line 21 in file "timeStemp.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1691 ;;      Params:         0       0       0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    6
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text1
  1706  0023B2                     __ptext1:
  1707                           	opt stack 0
  1708  0023B2                     _timeInit:
  1709                           	opt stack 24
  1710                           
  1711                           ;timeStemp.c: 23: timestamp=1502383929;
  1712                           
  1713                           ;incstack = 0
  1714  0023B2  0E39               	movlw	57
  1715  0023B4  0100               	movlb	0	; () banked
  1716  0023B6  6FC7               	movwf	_timestamp& (0+255),b
  1717  0023B8  0E8F               	movlw	143
  1718  0023BA  6FC8               	movwf	(_timestamp+1)& (0+255),b
  1719  0023BC  0E8C               	movlw	140
  1720  0023BE  6FC9               	movwf	(_timestamp+2)& (0+255),b
  1721  0023C0  0E59               	movlw	89
  1722  0023C2  6FCA               	movwf	(_timestamp+3)& (0+255),b
  1723                           
  1724                           ; BSR set to: 0
  1725  0023C4  0012               	return		;funcret
  1726  0023C6                     __end_of_timeInit:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           intcon	equ	0xFF2
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           postdec1	equ	0xFE5
  1736                           fsr1l	equ	0xFE1
  1737                           
  1738 ;; *************** function _pushOutput *****************
  1739 ;; Defined at:
  1740 ;;		line 6 in file "board_interface.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  OUT             1    wreg     unsigned char 
  1743 ;;  change          1    0[BANK1 ] unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  OUT             1    1[BANK1 ] unsigned char 
  1746 ;;  tOut            1    2[BANK1 ] struct bit_byte
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1756 ;;      Params:         0       0       1       0       0       0       0
  1757 ;;      Locals:         0       0       2       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0
  1759 ;;      Totals:         0       0       3       0       0       0       0
  1760 ;;Total ram usage:        3 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    6
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;;		_old_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text2
  1772  001EAE                     __ptext2:
  1773                           	opt stack 0
  1774  001EAE                     _pushOutput:
  1775                           	opt stack 24
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;incstack = 0
  1779                           ;pushOutput@OUT stored from wreg
  1780  001EAE  0101               	movlb	1	; () banked
  1781  001EB0  6FCD               	movwf	pushOutput@OUT& (0+255),b
  1782                           
  1783                           ;board_interface.c: 10: union bit_byte tOut;
  1784                           ;board_interface.c: 12: tOut.byte=OUT;
  1785  001EB2  C1CD  F1CE         	movff	pushOutput@OUT,pushOutput@tOut
  1786                           
  1787                           ;board_interface.c: 14: PORTCbits.RC0=tOut.u.bit0;
  1788  001EB6  0101               	movlb	1	; () banked
  1789  001EB8  A1CE               	btfss	pushOutput@tOut& (0+255),0,b
  1790  001EBA  D002               	bra	u4345
  1791  001EBC  8082               	bsf	3970,0,c	;volatile
  1792  001EBE  D001               	bra	u4347
  1793  001EC0                     u4345:
  1794  001EC0  9082               	bcf	3970,0,c	;volatile
  1795  001EC2                     u4347:
  1796                           
  1797                           ;board_interface.c: 15: PORTCbits.RC1=tOut.u.bit1;
  1798  001EC2  0101               	movlb	1	; () banked
  1799  001EC4  A3CE               	btfss	pushOutput@tOut& (0+255),1,b
  1800  001EC6  D002               	bra	u4355
  1801  001EC8  8282               	bsf	3970,1,c	;volatile
  1802  001ECA  D001               	bra	u4357
  1803  001ECC                     u4355:
  1804  001ECC  9282               	bcf	3970,1,c	;volatile
  1805  001ECE                     u4357:
  1806                           
  1807                           ;board_interface.c: 16: PORTCbits.RC2=tOut.u.bit2;
  1808  001ECE  0101               	movlb	1	; () banked
  1809  001ED0  A5CE               	btfss	pushOutput@tOut& (0+255),2,b
  1810  001ED2  D002               	bra	u4365
  1811  001ED4  8482               	bsf	3970,2,c	;volatile
  1812  001ED6  D001               	bra	u4367
  1813  001ED8                     u4365:
  1814  001ED8  9482               	bcf	3970,2,c	;volatile
  1815  001EDA                     u4367:
  1816                           
  1817                           ;board_interface.c: 17: PORTCbits.RC3=tOut.u.bit3;
  1818  001EDA  0101               	movlb	1	; () banked
  1819  001EDC  A7CE               	btfss	pushOutput@tOut& (0+255),3,b
  1820  001EDE  D002               	bra	u4375
  1821  001EE0  8682               	bsf	3970,3,c	;volatile
  1822  001EE2  D001               	bra	u4377
  1823  001EE4                     u4375:
  1824  001EE4  9682               	bcf	3970,3,c	;volatile
  1825  001EE6                     u4377:
  1826                           
  1827                           ;board_interface.c: 19: PORTDbits.RD0=tOut.u.bit4;
  1828  001EE6  0101               	movlb	1	; () banked
  1829  001EE8  A9CE               	btfss	pushOutput@tOut& (0+255),4,b
  1830  001EEA  D002               	bra	u4385
  1831  001EEC  8083               	bsf	3971,0,c	;volatile
  1832  001EEE  D001               	bra	u4387
  1833  001EF0                     u4385:
  1834  001EF0  9083               	bcf	3971,0,c	;volatile
  1835  001EF2                     u4387:
  1836                           
  1837                           ;board_interface.c: 20: PORTDbits.RD1=tOut.u.bit5;
  1838  001EF2  0101               	movlb	1	; () banked
  1839  001EF4  ABCE               	btfss	pushOutput@tOut& (0+255),5,b
  1840  001EF6  D002               	bra	u4395
  1841  001EF8  8283               	bsf	3971,1,c	;volatile
  1842  001EFA  D001               	bra	u4397
  1843  001EFC                     u4395:
  1844  001EFC  9283               	bcf	3971,1,c	;volatile
  1845  001EFE                     u4397:
  1846                           
  1847                           ;board_interface.c: 21: PORTDbits.RD2=tOut.u.bit6;
  1848  001EFE  0101               	movlb	1	; () banked
  1849  001F00  ADCE               	btfss	pushOutput@tOut& (0+255),6,b
  1850  001F02  D002               	bra	u4405
  1851  001F04  8483               	bsf	3971,2,c	;volatile
  1852  001F06  D001               	bra	u4407
  1853  001F08                     u4405:
  1854  001F08  9483               	bcf	3971,2,c	;volatile
  1855  001F0A                     u4407:
  1856                           
  1857                           ;board_interface.c: 22: PORTDbits.RD3=tOut.u.bit7;
  1858  001F0A  0101               	movlb	1	; () banked
  1859  001F0C  AFCE               	btfss	pushOutput@tOut& (0+255),7,b
  1860  001F0E  D002               	bra	u4415
  1861  001F10  8683               	bsf	3971,3,c	;volatile
  1862  001F12  D001               	bra	u4417
  1863  001F14                     u4415:
  1864  001F14  9683               	bcf	3971,3,c	;volatile
  1865  001F16                     u4417:
  1866  001F16  0012               	return		;funcret
  1867  001F18                     __end_of_pushOutput:
  1868                           	opt stack 0
  1869                           tblptru	equ	0xFF8
  1870                           tblptrh	equ	0xFF7
  1871                           tblptrl	equ	0xFF6
  1872                           tablat	equ	0xFF5
  1873                           intcon	equ	0xFF2
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           postdec1	equ	0xFE5
  1877                           fsr1l	equ	0xFE1
  1878                           
  1879 ;; *************** function _combineIO_KG_TEST *****************
  1880 ;; Defined at:
  1881 ;;		line 164 in file "app_h8_kg_mapIO.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  UART            1    wreg     unsigned char 
  1884 ;;  UART_NEW        1   12[BANK1 ] unsigned char 
  1885 ;;  INPUT           1   13[BANK1 ] unsigned char 
  1886 ;;  INPUT_CHANGE    1   14[BANK1 ] unsigned char 
  1887 ;;  BLOCKED         1   15[BANK1 ] unsigned char 
  1888 ;;  FORCED          1   16[BANK1 ] unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  UART            1   23[BANK1 ] unsigned char 
  1891 ;;  tUart_New       1   27[BANK1 ] struct bit_byte
  1892 ;;  tChanged        1   26[BANK1 ] struct bit_byte
  1893 ;;  tUart           1   25[BANK1 ] struct bit_byte
  1894 ;;  tTimerInput     1   24[BANK1 ] struct bit_byte
  1895 ;;  tTimerUart      1   22[BANK1 ] struct bit_byte
  1896 ;;  tInput_Chang    1   21[BANK1 ] struct bit_byte
  1897 ;;  tUart_Change    1   20[BANK1 ] struct bit_byte
  1898 ;;  tInput          1   19[BANK1 ] struct bit_byte
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      unsigned char 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1908 ;;      Params:         0       0       5       0       0       0       0
  1909 ;;      Locals:         0       0       9       0       0       0       0
  1910 ;;      Temps:          0       0       2       0       0       0       0
  1911 ;;      Totals:         0       0      16       0       0       0       0
  1912 ;;Total ram usage:       16 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    8
  1915 ;; This function calls:
  1916 ;;		_putUartStrings
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;;		_old_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text3
  1924  0000DC                     __ptext3:
  1925                           	opt stack 0
  1926  0000DC                     _combineIO_KG_TEST:
  1927                           	opt stack 22
  1928                           
  1929                           ;incstack = 0
  1930                           ;combineIO_KG_TEST@UART stored from wreg
  1931  0000DC  0101               	movlb	1	; () banked
  1932  0000DE  6FE3               	movwf	combineIO_KG_TEST@UART& (0+255),b
  1933                           
  1934                           ;app_h8_kg_mapIO.c: 166: static char Uart_Old_Stored;
  1935                           ;app_h8_kg_mapIO.c: 167: static char Input_Old_Stored;
  1936                           ;app_h8_kg_mapIO.c: 169: union bit_byte tUart;
  1937                           ;app_h8_kg_mapIO.c: 170: union bit_byte tInput;
  1938                           ;app_h8_kg_mapIO.c: 171: union bit_byte tUart_New;
  1939                           ;app_h8_kg_mapIO.c: 172: union bit_byte tUart_Changed;
  1940                           ;app_h8_kg_mapIO.c: 173: union bit_byte tInput_Changed;
  1941                           ;app_h8_kg_mapIO.c: 175: static union bit_byte tOutput;
  1942                           ;app_h8_kg_mapIO.c: 177: union bit_byte tChanged;
  1943                           ;app_h8_kg_mapIO.c: 178: union bit_byte tTimerInput;
  1944  0000E0  C1E3  F1E5         	movff	combineIO_KG_TEST@UART,combineIO_KG_TEST@tUart
  1945                           
  1946                           ;app_h8_kg_mapIO.c: 183: tInput.byte=INPUT;
  1947  0000E4  C1D9  F1DF         	movff	combineIO_KG_TEST@INPUT,combineIO_KG_TEST@tInput
  1948                           
  1949                           ;app_h8_kg_mapIO.c: 184: tChanged.byte=INPUT_CHANGED;
  1950  0000E8  C1DA  F1E6         	movff	combineIO_KG_TEST@INPUT_CHANGED,combineIO_KG_TEST@tChanged
  1951                           
  1952                           ;app_h8_kg_mapIO.c: 185: tUart_New.byte=UART_NEW;
  1953  0000EC  C1D8  F1E7         	movff	combineIO_KG_TEST@UART_NEW,combineIO_KG_TEST@tUart_New
  1954                           
  1955                           ;app_h8_kg_mapIO.c: 187: tUart_Changed.byte=Uart_Old_Stored^UART;
  1956  0000F0  0101               	movlb	1	; () banked
  1957  0000F2  5174               	movf	combineIO_KG_TEST@Uart_Old_Stored& (0+255),w,b
  1958  0000F4  0101               	movlb	1	; () banked
  1959  0000F6  19E3               	xorwf	combineIO_KG_TEST@UART& (0+255),w,b
  1960  0000F8  0101               	movlb	1	; () banked
  1961  0000FA  6FE0               	movwf	combineIO_KG_TEST@tUart_Changed& (0+255),b
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;app_h8_kg_mapIO.c: 188: tInput_Changed.byte=Input_Old_Stored^INPUT;
  1965  0000FC  0101               	movlb	1	; () banked
  1966  0000FE  5173               	movf	combineIO_KG_TEST@Input_Old_Stored& (0+255),w,b
  1967  000100  0101               	movlb	1	; () banked
  1968  000102  19D9               	xorwf	combineIO_KG_TEST@INPUT& (0+255),w,b
  1969  000104  0101               	movlb	1	; () banked
  1970  000106  6FE1               	movwf	combineIO_KG_TEST@tInput_Changed& (0+255),b
  1971                           
  1972                           ; BSR set to: 1
  1973                           ;app_h8_kg_mapIO.c: 191: tTimerInput.byte=0x00;
  1974  000108  0E00               	movlw	0
  1975  00010A  0101               	movlb	1	; () banked
  1976  00010C  6FE4               	movwf	combineIO_KG_TEST@tTimerInput& (0+255),b
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;app_h8_kg_mapIO.c: 196: tChanged.u.bit4==1?timerInputBufferGlobal[4]=60*5:1;
  1980  00010E  0101               	movlb	1	; () banked
  1981  000110  A9E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),4,b
  1982  000112  D005               	goto	l331
  1983                           
  1984                           ; BSR set to: 1
  1985  000114  0E01               	movlw	1
  1986  000116  0101               	movlb	1	; () banked
  1987  000118  6F1D               	movwf	(_timerInputBufferGlobal+9)& (0+255),b
  1988  00011A  0E2C               	movlw	44
  1989  00011C  6F1C               	movwf	(_timerInputBufferGlobal+8)& (0+255),b
  1990  00011E                     l331:
  1991                           
  1992                           ; BSR set to: 1
  1993                           ;app_h8_kg_mapIO.c: 197: tChanged.u.bit5==1?timerInputBufferGlobal[5]=60*5:1;
  1994                           
  1995                           ; BSR set to: 1
  1996  00011E  0101               	movlb	1	; () banked
  1997  000120  ABE6               	btfss	combineIO_KG_TEST@tChanged& (0+255),5,b
  1998  000122  D005               	goto	l335
  1999                           
  2000                           ; BSR set to: 1
  2001  000124  0E01               	movlw	1
  2002  000126  0101               	movlb	1	; () banked
  2003  000128  6F1F               	movwf	(_timerInputBufferGlobal+11)& (0+255),b
  2004  00012A  0E2C               	movlw	44
  2005  00012C  6F1E               	movwf	(_timerInputBufferGlobal+10)& (0+255),b
  2006  00012E                     l335:
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;app_h8_kg_mapIO.c: 199: tUart_New.u.bit4==1?timerUartBufferGlobal[4]=60*5:1;
  2010                           
  2011                           ; BSR set to: 1
  2012  00012E  0101               	movlb	1	; () banked
  2013  000130  A9E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),4,b
  2014  000132  D005               	goto	l339
  2015                           
  2016                           ; BSR set to: 1
  2017  000134  0E01               	movlw	1
  2018  000136  0101               	movlb	1	; () banked
  2019  000138  6F09               	movwf	(_timerUartBufferGlobal+9)& (0+255),b
  2020  00013A  0E2C               	movlw	44
  2021  00013C  6F08               	movwf	(_timerUartBufferGlobal+8)& (0+255),b
  2022  00013E                     l339:
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;app_h8_kg_mapIO.c: 203: (timerInputBufferGlobal[4]>0)?tTimerInput.u.bit4=1:tTimerInput.
      +                          u.bit4=0;
  2026                           
  2027                           ; BSR set to: 1
  2028                           
  2029                           ; BSR set to: 1
  2030  00013E  0101               	movlb	1	; () banked
  2031  000140  BF1D               	btfsc	(_timerInputBufferGlobal+9)& (0+255),7,b
  2032  000142  D00A               	goto	l343
  2033  000144  0101               	movlb	1	; () banked
  2034  000146  511D               	movf	(_timerInputBufferGlobal+9)& (0+255),w,b
  2035  000148  E104               	bnz	u4450
  2036  00014A  0101               	movlb	1	; () banked
  2037  00014C  051C               	decf	(_timerInputBufferGlobal+8)& (0+255),w,b
  2038  00014E  A0D8               	btfss	status,0,c
  2039  000150  D003               	goto	l343
  2040  000152                     u4450:
  2041                           
  2042                           ; BSR set to: 1
  2043  000152  0101               	movlb	1	; () banked
  2044  000154  89E4               	bsf	combineIO_KG_TEST@tTimerInput& (0+255),4,b
  2045  000156  D002               	goto	l345
  2046  000158                     l343:
  2047                           
  2048                           ; BSR set to: 1
  2049  000158  0101               	movlb	1	; () banked
  2050  00015A  99E4               	bcf	combineIO_KG_TEST@tTimerInput& (0+255),4,b
  2051  00015C                     l345:
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;app_h8_kg_mapIO.c: 204: (timerInputBufferGlobal[5]>0)?tTimerInput.u.bit5=1:tTimerInput.
      +                          u.bit5=0;
  2055                           
  2056                           ; BSR set to: 1
  2057  00015C  0101               	movlb	1	; () banked
  2058  00015E  BF1F               	btfsc	(_timerInputBufferGlobal+11)& (0+255),7,b
  2059  000160  D00A               	goto	l347
  2060  000162  0101               	movlb	1	; () banked
  2061  000164  511F               	movf	(_timerInputBufferGlobal+11)& (0+255),w,b
  2062  000166  E104               	bnz	u4460
  2063  000168  0101               	movlb	1	; () banked
  2064  00016A  051E               	decf	(_timerInputBufferGlobal+10)& (0+255),w,b
  2065  00016C  A0D8               	btfss	status,0,c
  2066  00016E  D003               	goto	l347
  2067  000170                     u4460:
  2068                           
  2069                           ; BSR set to: 1
  2070  000170  0101               	movlb	1	; () banked
  2071  000172  8BE4               	bsf	combineIO_KG_TEST@tTimerInput& (0+255),5,b
  2072  000174  D002               	goto	l349
  2073  000176                     l347:
  2074                           
  2075                           ; BSR set to: 1
  2076  000176  0101               	movlb	1	; () banked
  2077  000178  9BE4               	bcf	combineIO_KG_TEST@tTimerInput& (0+255),5,b
  2078  00017A                     l349:
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;app_h8_kg_mapIO.c: 206: (timerUartBufferGlobal[4]>0)?tTimerUart.u.bit4=1:tTimerUart.u.b
      +                          it4=0;
  2082                           
  2083                           ; BSR set to: 1
  2084  00017A  0101               	movlb	1	; () banked
  2085  00017C  BF09               	btfsc	(_timerUartBufferGlobal+9)& (0+255),7,b
  2086  00017E  D00A               	goto	l351
  2087  000180  0101               	movlb	1	; () banked
  2088  000182  5109               	movf	(_timerUartBufferGlobal+9)& (0+255),w,b
  2089  000184  E104               	bnz	u4470
  2090  000186  0101               	movlb	1	; () banked
  2091  000188  0508               	decf	(_timerUartBufferGlobal+8)& (0+255),w,b
  2092  00018A  A0D8               	btfss	status,0,c
  2093  00018C  D003               	goto	l351
  2094  00018E                     u4470:
  2095                           
  2096                           ; BSR set to: 1
  2097  00018E  0101               	movlb	1	; () banked
  2098  000190  89E2               	bsf	combineIO_KG_TEST@tTimerUart& (0+255),4,b
  2099  000192  D002               	goto	l353
  2100  000194                     l351:
  2101                           
  2102                           ; BSR set to: 1
  2103  000194  0101               	movlb	1	; () banked
  2104  000196  99E2               	bcf	combineIO_KG_TEST@tTimerUart& (0+255),4,b
  2105  000198                     l353:
  2106                           
  2107                           ; BSR set to: 1
  2108                           ;app_h8_kg_mapIO.c: 212: tOutput.u.bit0 = 0;
  2109  000198  0101               	movlb	1	; () banked
  2110  00019A  9172               	bcf	combineIO_KG_TEST@tOutput& (0+255),0,b
  2111                           
  2112                           ;app_h8_kg_mapIO.c: 213: tOutput.u.bit2 = 0;
  2113  00019C  0101               	movlb	1	; () banked
  2114  00019E  9572               	bcf	combineIO_KG_TEST@tOutput& (0+255),2,b
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;app_h8_kg_mapIO.c: 216: if ((tChanged.u.bit4|tChanged.u.bit5)&(tOutput.u.bit3==0) || tU
      +                          art_New.u.bit4&tUart.u.bit4)
  2118  0001A0  0101               	movlb	1	; () banked
  2119  0001A2  B772               	btfsc	combineIO_KG_TEST@tOutput& (0+255),3,b
  2120  0001A4  D004               	goto	u4480
  2121  0001A6  0101               	movlb	1	; () banked
  2122  0001A8  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2123  0001AA  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2124  0001AC  D002               	goto	u4498
  2125  0001AE                     u4480:
  2126  0001AE  0101               	movlb	1	; () banked
  2127  0001B0  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2128  0001B2                     u4498:
  2129  0001B2  0101               	movlb	1	; () banked
  2130  0001B4  ABE6               	btfss	combineIO_KG_TEST@tChanged& (0+255),5,b
  2131  0001B6  D004               	goto	u4500
  2132  0001B8  0101               	movlb	1	; () banked
  2133  0001BA  6BDE               	clrf	(??_combineIO_KG_TEST+1)& (0+255),b
  2134  0001BC  2BDE               	incf	(??_combineIO_KG_TEST+1)& (0+255),f,b
  2135  0001BE  D002               	goto	u4508
  2136  0001C0                     u4500:
  2137  0001C0  0101               	movlb	1	; () banked
  2138  0001C2  6BDE               	clrf	(??_combineIO_KG_TEST+1)& (0+255),b
  2139  0001C4                     u4508:
  2140  0001C4  0101               	movlb	1	; () banked
  2141  0001C6  A9E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),4,b
  2142  0001C8  D002               	goto	u4510
  2143  0001CA  0E01               	movlw	1
  2144  0001CC  D001               	goto	u4516
  2145  0001CE                     u4510:
  2146  0001CE  0E00               	movlw	0
  2147  0001D0                     u4516:
  2148  0001D0  0101               	movlb	1	; () banked
  2149  0001D2  11DE               	iorwf	(??_combineIO_KG_TEST+1)& (0+255),w,b
  2150  0001D4  0101               	movlb	1	; () banked
  2151  0001D6  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2152  0001D8  0900               	iorlw	0
  2153  0001DA  A4D8               	btfss	status,2,c
  2154  0001DC  D013               	goto	u4540
  2155                           
  2156                           ; BSR set to: 1
  2157  0001DE  0E01               	movlw	1
  2158  0001E0  0101               	movlb	1	; () banked
  2159  0001E2  A9E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),4,b
  2160  0001E4  0E00               	movlw	0
  2161  0001E6  0101               	movlb	1	; () banked
  2162  0001E8  A9E5               	btfss	combineIO_KG_TEST@tUart& (0+255),4,b
  2163  0001EA  0E00               	movlw	0
  2164  0001EC  A0E8               	btfss	wreg,0,c
  2165  0001EE  D004               	goto	u4530
  2166  0001F0  0101               	movlb	1	; () banked
  2167  0001F2  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2168  0001F4  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2169  0001F6  D002               	goto	u4538
  2170  0001F8                     u4530:
  2171  0001F8  0101               	movlb	1	; () banked
  2172  0001FA  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2173  0001FC                     u4538:
  2174  0001FC  0101               	movlb	1	; () banked
  2175  0001FE  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2176  000200  B4D8               	btfsc	status,2,c
  2177  000202  D010               	goto	l354
  2178  000204                     u4540:
  2179                           
  2180                           ; BSR set to: 1
  2181                           ;app_h8_kg_mapIO.c: 217: {
  2182                           ;app_h8_kg_mapIO.c: 218: tOutput.u.bit3 =1;
  2183  000204  0101               	movlb	1	; () banked
  2184  000206  8772               	bsf	combineIO_KG_TEST@tOutput& (0+255),3,b
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;app_h8_kg_mapIO.c: 219: putUartStrings("!TER~41_",sizeof("!TER~41_"));
  2188  000208  0EB1               	movlw	low STR_1
  2189  00020A  0101               	movlb	1	; () banked
  2190  00020C  6FCD               	movwf	putUartStrings@text& (0+255),b
  2191  00020E  0E7F               	movlw	high STR_1
  2192  000210  0101               	movlb	1	; () banked
  2193  000212  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2194  000214  0E00               	movlw	0
  2195  000216  0101               	movlb	1	; () banked
  2196  000218  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2197  00021A  0E09               	movlw	9
  2198  00021C  6FCF               	movwf	putUartStrings@len& (0+255),b
  2199  00021E  EC2B  F00D         	call	_putUartStrings	;wreg free
  2200                           
  2201                           ;app_h8_kg_mapIO.c: 220: }
  2202  000222  D042               	goto	l358
  2203  000224                     l354:
  2204                           
  2205                           ;app_h8_kg_mapIO.c: 221: else if((tChanged.u.bit4|tChanged.u.bit5)&(tOutput.u.bit3==1) |
      +                          | tUart_New.u.bit4&(!tUart.u.bit4))
  2206  000224  0101               	movlb	1	; () banked
  2207  000226  A772               	btfss	combineIO_KG_TEST@tOutput& (0+255),3,b
  2208  000228  D004               	goto	u4550
  2209  00022A  0101               	movlb	1	; () banked
  2210  00022C  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2211  00022E  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2212  000230  D002               	goto	u4558
  2213  000232                     u4550:
  2214  000232  0101               	movlb	1	; () banked
  2215  000234  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2216  000236                     u4558:
  2217  000236  0101               	movlb	1	; () banked
  2218  000238  ABE6               	btfss	combineIO_KG_TEST@tChanged& (0+255),5,b
  2219  00023A  D004               	goto	u4560
  2220  00023C  0101               	movlb	1	; () banked
  2221  00023E  6BDE               	clrf	(??_combineIO_KG_TEST+1)& (0+255),b
  2222  000240  2BDE               	incf	(??_combineIO_KG_TEST+1)& (0+255),f,b
  2223  000242  D002               	goto	u4568
  2224  000244                     u4560:
  2225  000244  0101               	movlb	1	; () banked
  2226  000246  6BDE               	clrf	(??_combineIO_KG_TEST+1)& (0+255),b
  2227  000248                     u4568:
  2228  000248  0101               	movlb	1	; () banked
  2229  00024A  A9E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),4,b
  2230  00024C  D002               	goto	u4570
  2231  00024E  0E01               	movlw	1
  2232  000250  D001               	goto	u4576
  2233  000252                     u4570:
  2234  000252  0E00               	movlw	0
  2235  000254                     u4576:
  2236  000254  0101               	movlb	1	; () banked
  2237  000256  11DE               	iorwf	(??_combineIO_KG_TEST+1)& (0+255),w,b
  2238  000258  0101               	movlb	1	; () banked
  2239  00025A  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2240  00025C  0900               	iorlw	0
  2241  00025E  A4D8               	btfss	status,2,c
  2242  000260  D014               	goto	u4620
  2243                           
  2244                           ; BSR set to: 1
  2245  000262  0101               	movlb	1	; () banked
  2246  000264  A9E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),4,b
  2247  000266  D004               	goto	u4590
  2248  000268  0101               	movlb	1	; () banked
  2249  00026A  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2250  00026C  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2251  00026E  D002               	goto	u4598
  2252  000270                     u4590:
  2253  000270  0101               	movlb	1	; () banked
  2254  000272  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2255  000274                     u4598:
  2256  000274  0101               	movlb	1	; () banked
  2257  000276  B9E5               	btfsc	combineIO_KG_TEST@tUart& (0+255),4,b
  2258  000278  D002               	goto	u4600
  2259  00027A  0E01               	movlw	1
  2260  00027C  D001               	goto	u4610
  2261  00027E                     u4600:
  2262  00027E  0E00               	movlw	0
  2263  000280                     u4610:
  2264  000280  0101               	movlb	1	; () banked
  2265  000282  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2266  000284  0900               	iorlw	0
  2267  000286  B4D8               	btfsc	status,2,c
  2268  000288  D00F               	goto	l358
  2269  00028A                     u4620:
  2270                           
  2271                           ; BSR set to: 1
  2272                           ;app_h8_kg_mapIO.c: 222: {
  2273                           ;app_h8_kg_mapIO.c: 223: tOutput.u.bit3 =0;
  2274  00028A  0101               	movlb	1	; () banked
  2275  00028C  9772               	bcf	combineIO_KG_TEST@tOutput& (0+255),3,b
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;app_h8_kg_mapIO.c: 224: putUartStrings("!TER~40_",sizeof("!TER~40_"));
  2279  00028E  0E7B               	movlw	low STR_3
  2280  000290  0101               	movlb	1	; () banked
  2281  000292  6FCD               	movwf	putUartStrings@text& (0+255),b
  2282  000294  0E7F               	movlw	high STR_3
  2283  000296  0101               	movlb	1	; () banked
  2284  000298  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2285  00029A  0E00               	movlw	0
  2286  00029C  0101               	movlb	1	; () banked
  2287  00029E  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2288  0002A0  0E09               	movlw	9
  2289  0002A2  6FCF               	movwf	putUartStrings@len& (0+255),b
  2290  0002A4  EC2B  F00D         	call	_putUartStrings	;wreg free
  2291  0002A8                     l358:
  2292                           
  2293                           ;app_h8_kg_mapIO.c: 225: }
  2294                           ;app_h8_kg_mapIO.c: 226: if((tTimerInput.u.bit4==0&&tTimerInput.u.bit5==0&&tTimerUart.u.
      +                          bit4==0)&&tOutput.u.bit3==1)
  2295  0002A8  0101               	movlb	1	; () banked
  2296  0002AA  B9E4               	btfsc	combineIO_KG_TEST@tTimerInput& (0+255),4,b
  2297  0002AC  D018               	goto	l361
  2298                           
  2299                           ; BSR set to: 1
  2300  0002AE  0101               	movlb	1	; () banked
  2301  0002B0  BBE4               	btfsc	combineIO_KG_TEST@tTimerInput& (0+255),5,b
  2302  0002B2  D015               	goto	l361
  2303                           
  2304                           ; BSR set to: 1
  2305  0002B4  0101               	movlb	1	; () banked
  2306  0002B6  B9E2               	btfsc	combineIO_KG_TEST@tTimerUart& (0+255),4,b
  2307  0002B8  D012               	goto	l361
  2308                           
  2309                           ; BSR set to: 1
  2310  0002BA  0101               	movlb	1	; () banked
  2311  0002BC  A772               	btfss	combineIO_KG_TEST@tOutput& (0+255),3,b
  2312  0002BE  D00F               	goto	l361
  2313                           
  2314                           ; BSR set to: 1
  2315                           ;app_h8_kg_mapIO.c: 227: {
  2316                           ;app_h8_kg_mapIO.c: 228: tOutput.u.bit3=0;
  2317  0002C0  0101               	movlb	1	; () banked
  2318  0002C2  9772               	bcf	combineIO_KG_TEST@tOutput& (0+255),3,b
  2319                           
  2320                           ; BSR set to: 1
  2321                           ;app_h8_kg_mapIO.c: 229: putUartStrings("!TER~40_",sizeof("!TER~40_"));
  2322  0002C4  0E7B               	movlw	low STR_3
  2323  0002C6  0101               	movlb	1	; () banked
  2324  0002C8  6FCD               	movwf	putUartStrings@text& (0+255),b
  2325  0002CA  0E7F               	movlw	high STR_3
  2326  0002CC  0101               	movlb	1	; () banked
  2327  0002CE  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2328  0002D0  0E00               	movlw	0
  2329  0002D2  0101               	movlb	1	; () banked
  2330  0002D4  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2331  0002D6  0E09               	movlw	9
  2332  0002D8  6FCF               	movwf	putUartStrings@len& (0+255),b
  2333  0002DA  EC2B  F00D         	call	_putUartStrings	;wreg free
  2334  0002DE                     l361:
  2335                           
  2336                           ;app_h8_kg_mapIO.c: 230: }
  2337                           ;app_h8_kg_mapIO.c: 233: if( tChanged.u.bit7&(tOutput.u.bit1==0) || tUart_New.u.bit7&tUa
      +                          rt.u.bit7)
  2338  0002DE  0101               	movlb	1	; () banked
  2339  0002E0  AFE6               	btfss	combineIO_KG_TEST@tChanged& (0+255),7,b
  2340  0002E2  D004               	goto	u4670
  2341  0002E4  0101               	movlb	1	; () banked
  2342  0002E6  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2343  0002E8  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2344  0002EA  D002               	goto	u4678
  2345  0002EC                     u4670:
  2346  0002EC  0101               	movlb	1	; () banked
  2347  0002EE  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2348  0002F0                     u4678:
  2349  0002F0  0101               	movlb	1	; () banked
  2350  0002F2  B372               	btfsc	combineIO_KG_TEST@tOutput& (0+255),1,b
  2351  0002F4  D002               	goto	u4680
  2352  0002F6  0E01               	movlw	1
  2353  0002F8  D001               	goto	u4690
  2354  0002FA                     u4680:
  2355  0002FA  0E00               	movlw	0
  2356  0002FC                     u4690:
  2357  0002FC  0101               	movlb	1	; () banked
  2358  0002FE  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2359  000300  0900               	iorlw	0
  2360  000302  A4D8               	btfss	status,2,c
  2361  000304  D013               	goto	u4720
  2362                           
  2363                           ; BSR set to: 1
  2364  000306  0E01               	movlw	1
  2365  000308  0101               	movlb	1	; () banked
  2366  00030A  AFE7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),7,b
  2367  00030C  0E00               	movlw	0
  2368  00030E  0101               	movlb	1	; () banked
  2369  000310  AFE5               	btfss	combineIO_KG_TEST@tUart& (0+255),7,b
  2370  000312  0E00               	movlw	0
  2371  000314  A0E8               	btfss	wreg,0,c
  2372  000316  D004               	goto	u4710
  2373  000318  0101               	movlb	1	; () banked
  2374  00031A  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2375  00031C  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2376  00031E  D002               	goto	u4718
  2377  000320                     u4710:
  2378  000320  0101               	movlb	1	; () banked
  2379  000322  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2380  000324                     u4718:
  2381  000324  0101               	movlb	1	; () banked
  2382  000326  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2383  000328  B4D8               	btfsc	status,2,c
  2384  00032A  D010               	goto	l362
  2385  00032C                     u4720:
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;app_h8_kg_mapIO.c: 234: {
  2389                           ;app_h8_kg_mapIO.c: 235: tOutput.u.bit1 = 1;
  2390  00032C  0101               	movlb	1	; () banked
  2391  00032E  8372               	bsf	combineIO_KG_TEST@tOutput& (0+255),1,b
  2392                           
  2393                           ; BSR set to: 1
  2394                           ;app_h8_kg_mapIO.c: 236: putUartStrings("!TER~71_",sizeof("!TER~71_"));
  2395  000330  0EBA               	movlw	low STR_7
  2396  000332  0101               	movlb	1	; () banked
  2397  000334  6FCD               	movwf	putUartStrings@text& (0+255),b
  2398  000336  0E7F               	movlw	high STR_7
  2399  000338  0101               	movlb	1	; () banked
  2400  00033A  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2401  00033C  0E00               	movlw	0
  2402  00033E  0101               	movlb	1	; () banked
  2403  000340  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2404  000342  0E09               	movlw	9
  2405  000344  6FCF               	movwf	putUartStrings@len& (0+255),b
  2406  000346  EC2B  F00D         	call	_putUartStrings	;wreg free
  2407                           
  2408                           ;app_h8_kg_mapIO.c: 237: }
  2409  00034A  D036               	goto	l366
  2410  00034C                     l362:
  2411                           
  2412                           ;app_h8_kg_mapIO.c: 238: else if(tChanged.u.bit7&(tOutput.u.bit1==1) || tUart_New.u.bit7
      +                          &(!tUart.u.bit7))
  2413  00034C  0E01               	movlw	1
  2414  00034E  0101               	movlb	1	; () banked
  2415  000350  AFE6               	btfss	combineIO_KG_TEST@tChanged& (0+255),7,b
  2416  000352  0E00               	movlw	0
  2417  000354  0101               	movlb	1	; () banked
  2418  000356  A372               	btfss	combineIO_KG_TEST@tOutput& (0+255),1,b
  2419  000358  0E00               	movlw	0
  2420  00035A  A0E8               	btfss	wreg,0,c
  2421  00035C  D004               	goto	u4730
  2422  00035E  0101               	movlb	1	; () banked
  2423  000360  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2424  000362  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2425  000364  D002               	goto	u4738
  2426  000366                     u4730:
  2427  000366  0101               	movlb	1	; () banked
  2428  000368  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2429  00036A                     u4738:
  2430  00036A  0101               	movlb	1	; () banked
  2431  00036C  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2432  00036E  A4D8               	btfss	status,2,c
  2433  000370  D014               	goto	u4780
  2434                           
  2435                           ; BSR set to: 1
  2436  000372  0101               	movlb	1	; () banked
  2437  000374  AFE7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),7,b
  2438  000376  D004               	goto	u4750
  2439  000378  0101               	movlb	1	; () banked
  2440  00037A  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2441  00037C  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2442  00037E  D002               	goto	u4758
  2443  000380                     u4750:
  2444  000380  0101               	movlb	1	; () banked
  2445  000382  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2446  000384                     u4758:
  2447  000384  0101               	movlb	1	; () banked
  2448  000386  BFE5               	btfsc	combineIO_KG_TEST@tUart& (0+255),7,b
  2449  000388  D002               	goto	u4760
  2450  00038A  0E01               	movlw	1
  2451  00038C  D001               	goto	u4770
  2452  00038E                     u4760:
  2453  00038E  0E00               	movlw	0
  2454  000390                     u4770:
  2455  000390  0101               	movlb	1	; () banked
  2456  000392  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2457  000394  0900               	iorlw	0
  2458  000396  B4D8               	btfsc	status,2,c
  2459  000398  D00F               	goto	l366
  2460  00039A                     u4780:
  2461                           
  2462                           ; BSR set to: 1
  2463                           ;app_h8_kg_mapIO.c: 239: {
  2464                           ;app_h8_kg_mapIO.c: 240: tOutput.u.bit1 =0;
  2465  00039A  0101               	movlb	1	; () banked
  2466  00039C  9372               	bcf	combineIO_KG_TEST@tOutput& (0+255),1,b
  2467                           
  2468                           ; BSR set to: 1
  2469                           ;app_h8_kg_mapIO.c: 241: putUartStrings("!TER~70_",sizeof("!TER~70_"));
  2470  00039E  0E84               	movlw	low STR_9
  2471  0003A0  0101               	movlb	1	; () banked
  2472  0003A2  6FCD               	movwf	putUartStrings@text& (0+255),b
  2473  0003A4  0E7F               	movlw	high STR_9
  2474  0003A6  0101               	movlb	1	; () banked
  2475  0003A8  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2476  0003AA  0E00               	movlw	0
  2477  0003AC  0101               	movlb	1	; () banked
  2478  0003AE  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2479  0003B0  0E09               	movlw	9
  2480  0003B2  6FCF               	movwf	putUartStrings@len& (0+255),b
  2481  0003B4  EC2B  F00D         	call	_putUartStrings	;wreg free
  2482  0003B8                     l366:
  2483                           
  2484                           ;app_h8_kg_mapIO.c: 242: }
  2485                           ;app_h8_kg_mapIO.c: 245: if( tChanged.u.bit3&(tOutput.u.bit4==0) || tUart_New.u.bit3&tUa
      +                          rt.u.bit3)
  2486  0003B8  0101               	movlb	1	; () banked
  2487  0003BA  A7E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),3,b
  2488  0003BC  D004               	goto	u4790
  2489  0003BE  0101               	movlb	1	; () banked
  2490  0003C0  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2491  0003C2  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2492  0003C4  D002               	goto	u4798
  2493  0003C6                     u4790:
  2494  0003C6  0101               	movlb	1	; () banked
  2495  0003C8  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2496  0003CA                     u4798:
  2497  0003CA  0101               	movlb	1	; () banked
  2498  0003CC  B972               	btfsc	combineIO_KG_TEST@tOutput& (0+255),4,b
  2499  0003CE  D002               	goto	u4800
  2500  0003D0  0E01               	movlw	1
  2501  0003D2  D001               	goto	u4810
  2502  0003D4                     u4800:
  2503  0003D4  0E00               	movlw	0
  2504  0003D6                     u4810:
  2505  0003D6  0101               	movlb	1	; () banked
  2506  0003D8  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2507  0003DA  0900               	iorlw	0
  2508  0003DC  A4D8               	btfss	status,2,c
  2509  0003DE  D013               	goto	u4840
  2510                           
  2511                           ; BSR set to: 1
  2512  0003E0  0E01               	movlw	1
  2513  0003E2  0101               	movlb	1	; () banked
  2514  0003E4  A7E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),3,b
  2515  0003E6  0E00               	movlw	0
  2516  0003E8  0101               	movlb	1	; () banked
  2517  0003EA  A7E5               	btfss	combineIO_KG_TEST@tUart& (0+255),3,b
  2518  0003EC  0E00               	movlw	0
  2519  0003EE  A0E8               	btfss	wreg,0,c
  2520  0003F0  D004               	goto	u4830
  2521  0003F2  0101               	movlb	1	; () banked
  2522  0003F4  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2523  0003F6  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2524  0003F8  D002               	goto	u4838
  2525  0003FA                     u4830:
  2526  0003FA  0101               	movlb	1	; () banked
  2527  0003FC  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2528  0003FE                     u4838:
  2529  0003FE  0101               	movlb	1	; () banked
  2530  000400  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2531  000402  B4D8               	btfsc	status,2,c
  2532  000404  D010               	goto	l369
  2533  000406                     u4840:
  2534                           
  2535                           ; BSR set to: 1
  2536                           ;app_h8_kg_mapIO.c: 246: {
  2537                           ;app_h8_kg_mapIO.c: 247: tOutput.u.bit4 = 1;
  2538  000406  0101               	movlb	1	; () banked
  2539  000408  8972               	bsf	combineIO_KG_TEST@tOutput& (0+255),4,b
  2540                           
  2541                           ; BSR set to: 1
  2542                           ;app_h8_kg_mapIO.c: 248: putUartStrings("!TER~31_",sizeof("!TER~31_"));
  2543  00040A  0EA8               	movlw	low STR_11
  2544  00040C  0101               	movlb	1	; () banked
  2545  00040E  6FCD               	movwf	putUartStrings@text& (0+255),b
  2546  000410  0E7F               	movlw	high STR_11
  2547  000412  0101               	movlb	1	; () banked
  2548  000414  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2549  000416  0E00               	movlw	0
  2550  000418  0101               	movlb	1	; () banked
  2551  00041A  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2552  00041C  0E09               	movlw	9
  2553  00041E  6FCF               	movwf	putUartStrings@len& (0+255),b
  2554  000420  EC2B  F00D         	call	_putUartStrings	;wreg free
  2555                           
  2556                           ;app_h8_kg_mapIO.c: 249: }
  2557  000424  D036               	goto	l373
  2558  000426                     l369:
  2559                           
  2560                           ;app_h8_kg_mapIO.c: 250: else if(tChanged.u.bit3&(tOutput.u.bit4==1) || tUart_New.u.bit3
      +                          &(!tUart.u.bit3))
  2561  000426  0E01               	movlw	1
  2562  000428  0101               	movlb	1	; () banked
  2563  00042A  A7E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),3,b
  2564  00042C  0E00               	movlw	0
  2565  00042E  0101               	movlb	1	; () banked
  2566  000430  A972               	btfss	combineIO_KG_TEST@tOutput& (0+255),4,b
  2567  000432  0E00               	movlw	0
  2568  000434  A0E8               	btfss	wreg,0,c
  2569  000436  D004               	goto	u4850
  2570  000438  0101               	movlb	1	; () banked
  2571  00043A  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2572  00043C  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2573  00043E  D002               	goto	u4858
  2574  000440                     u4850:
  2575  000440  0101               	movlb	1	; () banked
  2576  000442  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2577  000444                     u4858:
  2578  000444  0101               	movlb	1	; () banked
  2579  000446  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2580  000448  A4D8               	btfss	status,2,c
  2581  00044A  D014               	goto	u4900
  2582                           
  2583                           ; BSR set to: 1
  2584  00044C  0101               	movlb	1	; () banked
  2585  00044E  A7E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),3,b
  2586  000450  D004               	goto	u4870
  2587  000452  0101               	movlb	1	; () banked
  2588  000454  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2589  000456  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2590  000458  D002               	goto	u4878
  2591  00045A                     u4870:
  2592  00045A  0101               	movlb	1	; () banked
  2593  00045C  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2594  00045E                     u4878:
  2595  00045E  0101               	movlb	1	; () banked
  2596  000460  B7E5               	btfsc	combineIO_KG_TEST@tUart& (0+255),3,b
  2597  000462  D002               	goto	u4880
  2598  000464  0E01               	movlw	1
  2599  000466  D001               	goto	u4890
  2600  000468                     u4880:
  2601  000468  0E00               	movlw	0
  2602  00046A                     u4890:
  2603  00046A  0101               	movlb	1	; () banked
  2604  00046C  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2605  00046E  0900               	iorlw	0
  2606  000470  B4D8               	btfsc	status,2,c
  2607  000472  D00F               	goto	l373
  2608  000474                     u4900:
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;app_h8_kg_mapIO.c: 251: {
  2612                           ;app_h8_kg_mapIO.c: 252: tOutput.u.bit4 =0;
  2613  000474  0101               	movlb	1	; () banked
  2614  000476  9972               	bcf	combineIO_KG_TEST@tOutput& (0+255),4,b
  2615                           
  2616                           ; BSR set to: 1
  2617                           ;app_h8_kg_mapIO.c: 253: putUartStrings("!TER~30_",sizeof("!TER~30_"));
  2618  000478  0E72               	movlw	low STR_13
  2619  00047A  0101               	movlb	1	; () banked
  2620  00047C  6FCD               	movwf	putUartStrings@text& (0+255),b
  2621  00047E  0E7F               	movlw	high STR_13
  2622  000480  0101               	movlb	1	; () banked
  2623  000482  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2624  000484  0E00               	movlw	0
  2625  000486  0101               	movlb	1	; () banked
  2626  000488  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2627  00048A  0E09               	movlw	9
  2628  00048C  6FCF               	movwf	putUartStrings@len& (0+255),b
  2629  00048E  EC2B  F00D         	call	_putUartStrings	;wreg free
  2630  000492                     l373:
  2631                           
  2632                           ;app_h8_kg_mapIO.c: 254: }
  2633                           ;app_h8_kg_mapIO.c: 257: if( tChanged.u.bit2&(tOutput.u.bit5==0) || tUart_New.u.bit2&tUa
      +                          rt.u.bit2)
  2634  000492  0101               	movlb	1	; () banked
  2635  000494  A5E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),2,b
  2636  000496  D004               	goto	u4910
  2637  000498  0101               	movlb	1	; () banked
  2638  00049A  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2639  00049C  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2640  00049E  D002               	goto	u4918
  2641  0004A0                     u4910:
  2642  0004A0  0101               	movlb	1	; () banked
  2643  0004A2  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2644  0004A4                     u4918:
  2645  0004A4  0101               	movlb	1	; () banked
  2646  0004A6  BB72               	btfsc	combineIO_KG_TEST@tOutput& (0+255),5,b
  2647  0004A8  D002               	goto	u4920
  2648  0004AA  0E01               	movlw	1
  2649  0004AC  D001               	goto	u4930
  2650  0004AE                     u4920:
  2651  0004AE  0E00               	movlw	0
  2652  0004B0                     u4930:
  2653  0004B0  0101               	movlb	1	; () banked
  2654  0004B2  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2655  0004B4  0900               	iorlw	0
  2656  0004B6  A4D8               	btfss	status,2,c
  2657  0004B8  D013               	goto	u4960
  2658                           
  2659                           ; BSR set to: 1
  2660  0004BA  0E01               	movlw	1
  2661  0004BC  0101               	movlb	1	; () banked
  2662  0004BE  A5E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),2,b
  2663  0004C0  0E00               	movlw	0
  2664  0004C2  0101               	movlb	1	; () banked
  2665  0004C4  A5E5               	btfss	combineIO_KG_TEST@tUart& (0+255),2,b
  2666  0004C6  0E00               	movlw	0
  2667  0004C8  A0E8               	btfss	wreg,0,c
  2668  0004CA  D004               	goto	u4950
  2669  0004CC  0101               	movlb	1	; () banked
  2670  0004CE  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2671  0004D0  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2672  0004D2  D002               	goto	u4958
  2673  0004D4                     u4950:
  2674  0004D4  0101               	movlb	1	; () banked
  2675  0004D6  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2676  0004D8                     u4958:
  2677  0004D8  0101               	movlb	1	; () banked
  2678  0004DA  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2679  0004DC  B4D8               	btfsc	status,2,c
  2680  0004DE  D010               	goto	l376
  2681  0004E0                     u4960:
  2682                           
  2683                           ; BSR set to: 1
  2684                           ;app_h8_kg_mapIO.c: 258: {
  2685                           ;app_h8_kg_mapIO.c: 259: tOutput.u.bit5 = 1;
  2686  0004E0  0101               	movlb	1	; () banked
  2687  0004E2  8B72               	bsf	combineIO_KG_TEST@tOutput& (0+255),5,b
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;app_h8_kg_mapIO.c: 260: putUartStrings("!TER~21_",sizeof("!TER~21_"));
  2691  0004E4  0E9F               	movlw	low STR_15
  2692  0004E6  0101               	movlb	1	; () banked
  2693  0004E8  6FCD               	movwf	putUartStrings@text& (0+255),b
  2694  0004EA  0E7F               	movlw	high STR_15
  2695  0004EC  0101               	movlb	1	; () banked
  2696  0004EE  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2697  0004F0  0E00               	movlw	0
  2698  0004F2  0101               	movlb	1	; () banked
  2699  0004F4  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2700  0004F6  0E09               	movlw	9
  2701  0004F8  6FCF               	movwf	putUartStrings@len& (0+255),b
  2702  0004FA  EC2B  F00D         	call	_putUartStrings	;wreg free
  2703                           
  2704                           ;app_h8_kg_mapIO.c: 261: }
  2705  0004FE  D036               	goto	l380
  2706  000500                     l376:
  2707                           
  2708                           ;app_h8_kg_mapIO.c: 262: else if(tChanged.u.bit2&(tOutput.u.bit5==1) || tUart_New.u.bit2
      +                          &(!tUart.u.bit2))
  2709  000500  0E01               	movlw	1
  2710  000502  0101               	movlb	1	; () banked
  2711  000504  A5E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),2,b
  2712  000506  0E00               	movlw	0
  2713  000508  0101               	movlb	1	; () banked
  2714  00050A  AB72               	btfss	combineIO_KG_TEST@tOutput& (0+255),5,b
  2715  00050C  0E00               	movlw	0
  2716  00050E  A0E8               	btfss	wreg,0,c
  2717  000510  D004               	goto	u4970
  2718  000512  0101               	movlb	1	; () banked
  2719  000514  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2720  000516  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2721  000518  D002               	goto	u4978
  2722  00051A                     u4970:
  2723  00051A  0101               	movlb	1	; () banked
  2724  00051C  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2725  00051E                     u4978:
  2726  00051E  0101               	movlb	1	; () banked
  2727  000520  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2728  000522  A4D8               	btfss	status,2,c
  2729  000524  D014               	goto	u5020
  2730                           
  2731                           ; BSR set to: 1
  2732  000526  0101               	movlb	1	; () banked
  2733  000528  A5E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),2,b
  2734  00052A  D004               	goto	u4990
  2735  00052C  0101               	movlb	1	; () banked
  2736  00052E  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2737  000530  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2738  000532  D002               	goto	u4998
  2739  000534                     u4990:
  2740  000534  0101               	movlb	1	; () banked
  2741  000536  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2742  000538                     u4998:
  2743  000538  0101               	movlb	1	; () banked
  2744  00053A  B5E5               	btfsc	combineIO_KG_TEST@tUart& (0+255),2,b
  2745  00053C  D002               	goto	u5000
  2746  00053E  0E01               	movlw	1
  2747  000540  D001               	goto	u5010
  2748  000542                     u5000:
  2749  000542  0E00               	movlw	0
  2750  000544                     u5010:
  2751  000544  0101               	movlb	1	; () banked
  2752  000546  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2753  000548  0900               	iorlw	0
  2754  00054A  B4D8               	btfsc	status,2,c
  2755  00054C  D00F               	goto	l380
  2756  00054E                     u5020:
  2757                           
  2758                           ; BSR set to: 1
  2759                           ;app_h8_kg_mapIO.c: 263: {
  2760                           ;app_h8_kg_mapIO.c: 264: tOutput.u.bit5 =0;
  2761  00054E  0101               	movlb	1	; () banked
  2762  000550  9B72               	bcf	combineIO_KG_TEST@tOutput& (0+255),5,b
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;app_h8_kg_mapIO.c: 265: putUartStrings("!TER~20_",sizeof("!TER~20_"));
  2766  000552  0E69               	movlw	low STR_17
  2767  000554  0101               	movlb	1	; () banked
  2768  000556  6FCD               	movwf	putUartStrings@text& (0+255),b
  2769  000558  0E7F               	movlw	high STR_17
  2770  00055A  0101               	movlb	1	; () banked
  2771  00055C  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2772  00055E  0E00               	movlw	0
  2773  000560  0101               	movlb	1	; () banked
  2774  000562  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2775  000564  0E09               	movlw	9
  2776  000566  6FCF               	movwf	putUartStrings@len& (0+255),b
  2777  000568  EC2B  F00D         	call	_putUartStrings	;wreg free
  2778  00056C                     l380:
  2779                           
  2780                           ;app_h8_kg_mapIO.c: 266: }
  2781                           ;app_h8_kg_mapIO.c: 269: if( tChanged.u.bit0&(tOutput.u.bit6==0) || tUart_New.u.bit0&tUa
      +                          rt.u.bit0)
  2782  00056C  0101               	movlb	1	; () banked
  2783  00056E  A1E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),0,b
  2784  000570  D004               	goto	u5030
  2785  000572  0101               	movlb	1	; () banked
  2786  000574  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2787  000576  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2788  000578  D002               	goto	u5038
  2789  00057A                     u5030:
  2790  00057A  0101               	movlb	1	; () banked
  2791  00057C  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2792  00057E                     u5038:
  2793  00057E  0101               	movlb	1	; () banked
  2794  000580  BD72               	btfsc	combineIO_KG_TEST@tOutput& (0+255),6,b
  2795  000582  D002               	goto	u5040
  2796  000584  0E01               	movlw	1
  2797  000586  D001               	goto	u5050
  2798  000588                     u5040:
  2799  000588  0E00               	movlw	0
  2800  00058A                     u5050:
  2801  00058A  0101               	movlb	1	; () banked
  2802  00058C  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2803  00058E  0900               	iorlw	0
  2804  000590  A4D8               	btfss	status,2,c
  2805  000592  D013               	goto	u5080
  2806                           
  2807                           ; BSR set to: 1
  2808  000594  0E01               	movlw	1
  2809  000596  0101               	movlb	1	; () banked
  2810  000598  A1E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),0,b
  2811  00059A  0E00               	movlw	0
  2812  00059C  0101               	movlb	1	; () banked
  2813  00059E  A1E5               	btfss	combineIO_KG_TEST@tUart& (0+255),0,b
  2814  0005A0  0E00               	movlw	0
  2815  0005A2  A0E8               	btfss	wreg,0,c
  2816  0005A4  D004               	goto	u5070
  2817  0005A6  0101               	movlb	1	; () banked
  2818  0005A8  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2819  0005AA  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2820  0005AC  D002               	goto	u5078
  2821  0005AE                     u5070:
  2822  0005AE  0101               	movlb	1	; () banked
  2823  0005B0  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2824  0005B2                     u5078:
  2825  0005B2  0101               	movlb	1	; () banked
  2826  0005B4  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2827  0005B6  B4D8               	btfsc	status,2,c
  2828  0005B8  D010               	goto	l383
  2829  0005BA                     u5080:
  2830                           
  2831                           ; BSR set to: 1
  2832                           ;app_h8_kg_mapIO.c: 270: {
  2833                           ;app_h8_kg_mapIO.c: 271: tOutput.u.bit6 = 1;
  2834  0005BA  0101               	movlb	1	; () banked
  2835  0005BC  8D72               	bsf	combineIO_KG_TEST@tOutput& (0+255),6,b
  2836                           
  2837                           ; BSR set to: 1
  2838                           ;app_h8_kg_mapIO.c: 272: putUartStrings("!TER~01_",sizeof("!TER~01_"));
  2839  0005BE  0E8D               	movlw	low STR_19
  2840  0005C0  0101               	movlb	1	; () banked
  2841  0005C2  6FCD               	movwf	putUartStrings@text& (0+255),b
  2842  0005C4  0E7F               	movlw	high STR_19
  2843  0005C6  0101               	movlb	1	; () banked
  2844  0005C8  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2845  0005CA  0E00               	movlw	0
  2846  0005CC  0101               	movlb	1	; () banked
  2847  0005CE  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2848  0005D0  0E09               	movlw	9
  2849  0005D2  6FCF               	movwf	putUartStrings@len& (0+255),b
  2850  0005D4  EC2B  F00D         	call	_putUartStrings	;wreg free
  2851                           
  2852                           ;app_h8_kg_mapIO.c: 273: }
  2853  0005D8  D036               	goto	l387
  2854  0005DA                     l383:
  2855                           
  2856                           ;app_h8_kg_mapIO.c: 274: else if(tChanged.u.bit0&(tOutput.u.bit6==1) || tUart_New.u.bit0
      +                          &(!tUart.u.bit0))
  2857  0005DA  0E01               	movlw	1
  2858  0005DC  0101               	movlb	1	; () banked
  2859  0005DE  A1E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),0,b
  2860  0005E0  0E00               	movlw	0
  2861  0005E2  0101               	movlb	1	; () banked
  2862  0005E4  AD72               	btfss	combineIO_KG_TEST@tOutput& (0+255),6,b
  2863  0005E6  0E00               	movlw	0
  2864  0005E8  A0E8               	btfss	wreg,0,c
  2865  0005EA  D004               	goto	u5090
  2866  0005EC  0101               	movlb	1	; () banked
  2867  0005EE  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2868  0005F0  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2869  0005F2  D002               	goto	u5098
  2870  0005F4                     u5090:
  2871  0005F4  0101               	movlb	1	; () banked
  2872  0005F6  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2873  0005F8                     u5098:
  2874  0005F8  0101               	movlb	1	; () banked
  2875  0005FA  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2876  0005FC  A4D8               	btfss	status,2,c
  2877  0005FE  D014               	goto	u5140
  2878                           
  2879                           ; BSR set to: 1
  2880  000600  0101               	movlb	1	; () banked
  2881  000602  A1E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),0,b
  2882  000604  D004               	goto	u5110
  2883  000606  0101               	movlb	1	; () banked
  2884  000608  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2885  00060A  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2886  00060C  D002               	goto	u5118
  2887  00060E                     u5110:
  2888  00060E  0101               	movlb	1	; () banked
  2889  000610  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2890  000612                     u5118:
  2891  000612  0101               	movlb	1	; () banked
  2892  000614  B1E5               	btfsc	combineIO_KG_TEST@tUart& (0+255),0,b
  2893  000616  D002               	goto	u5120
  2894  000618  0E01               	movlw	1
  2895  00061A  D001               	goto	u5130
  2896  00061C                     u5120:
  2897  00061C  0E00               	movlw	0
  2898  00061E                     u5130:
  2899  00061E  0101               	movlb	1	; () banked
  2900  000620  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2901  000622  0900               	iorlw	0
  2902  000624  B4D8               	btfsc	status,2,c
  2903  000626  D00F               	goto	l387
  2904  000628                     u5140:
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;app_h8_kg_mapIO.c: 275: {
  2908                           ;app_h8_kg_mapIO.c: 276: tOutput.u.bit6 =0;
  2909  000628  0101               	movlb	1	; () banked
  2910  00062A  9D72               	bcf	combineIO_KG_TEST@tOutput& (0+255),6,b
  2911                           
  2912                           ; BSR set to: 1
  2913                           ;app_h8_kg_mapIO.c: 277: putUartStrings("!TER~00_",sizeof("!TER~00_"));
  2914  00062C  0E57               	movlw	low STR_21
  2915  00062E  0101               	movlb	1	; () banked
  2916  000630  6FCD               	movwf	putUartStrings@text& (0+255),b
  2917  000632  0E7F               	movlw	high STR_21
  2918  000634  0101               	movlb	1	; () banked
  2919  000636  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2920  000638  0E00               	movlw	0
  2921  00063A  0101               	movlb	1	; () banked
  2922  00063C  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2923  00063E  0E09               	movlw	9
  2924  000640  6FCF               	movwf	putUartStrings@len& (0+255),b
  2925  000642  EC2B  F00D         	call	_putUartStrings	;wreg free
  2926  000646                     l387:
  2927                           
  2928                           ;app_h8_kg_mapIO.c: 278: }
  2929                           ;app_h8_kg_mapIO.c: 281: if( tChanged.u.bit1&(tOutput.u.bit7==0) || tUart_New.u.bit1&tUa
      +                          rt.u.bit1)
  2930  000646  0101               	movlb	1	; () banked
  2931  000648  A3E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),1,b
  2932  00064A  D004               	goto	u5150
  2933  00064C  0101               	movlb	1	; () banked
  2934  00064E  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2935  000650  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2936  000652  D002               	goto	u5158
  2937  000654                     u5150:
  2938  000654  0101               	movlb	1	; () banked
  2939  000656  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2940  000658                     u5158:
  2941  000658  0101               	movlb	1	; () banked
  2942  00065A  BF72               	btfsc	combineIO_KG_TEST@tOutput& (0+255),7,b
  2943  00065C  D002               	goto	u5160
  2944  00065E  0E01               	movlw	1
  2945  000660  D001               	goto	u5170
  2946  000662                     u5160:
  2947  000662  0E00               	movlw	0
  2948  000664                     u5170:
  2949  000664  0101               	movlb	1	; () banked
  2950  000666  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  2951  000668  0900               	iorlw	0
  2952  00066A  A4D8               	btfss	status,2,c
  2953  00066C  D013               	goto	u5200
  2954                           
  2955                           ; BSR set to: 1
  2956  00066E  0E01               	movlw	1
  2957  000670  0101               	movlb	1	; () banked
  2958  000672  A3E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),1,b
  2959  000674  0E00               	movlw	0
  2960  000676  0101               	movlb	1	; () banked
  2961  000678  A3E5               	btfss	combineIO_KG_TEST@tUart& (0+255),1,b
  2962  00067A  0E00               	movlw	0
  2963  00067C  A0E8               	btfss	wreg,0,c
  2964  00067E  D004               	goto	u5190
  2965  000680  0101               	movlb	1	; () banked
  2966  000682  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2967  000684  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  2968  000686  D002               	goto	u5198
  2969  000688                     u5190:
  2970  000688  0101               	movlb	1	; () banked
  2971  00068A  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  2972  00068C                     u5198:
  2973  00068C  0101               	movlb	1	; () banked
  2974  00068E  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  2975  000690  B4D8               	btfsc	status,2,c
  2976  000692  D010               	goto	l390
  2977  000694                     u5200:
  2978                           
  2979                           ; BSR set to: 1
  2980                           ;app_h8_kg_mapIO.c: 282: {
  2981                           ;app_h8_kg_mapIO.c: 283: tOutput.u.bit7 =1;
  2982  000694  0101               	movlb	1	; () banked
  2983  000696  8F72               	bsf	combineIO_KG_TEST@tOutput& (0+255),7,b
  2984                           
  2985                           ; BSR set to: 1
  2986                           ;app_h8_kg_mapIO.c: 284: putUartStrings("!TER~11_",sizeof("!TER~11_"));
  2987  000698  0E96               	movlw	low STR_23
  2988  00069A  0101               	movlb	1	; () banked
  2989  00069C  6FCD               	movwf	putUartStrings@text& (0+255),b
  2990  00069E  0E7F               	movlw	high STR_23
  2991  0006A0  0101               	movlb	1	; () banked
  2992  0006A2  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  2993  0006A4  0E00               	movlw	0
  2994  0006A6  0101               	movlb	1	; () banked
  2995  0006A8  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  2996  0006AA  0E09               	movlw	9
  2997  0006AC  6FCF               	movwf	putUartStrings@len& (0+255),b
  2998  0006AE  EC2B  F00D         	call	_putUartStrings	;wreg free
  2999                           
  3000                           ;app_h8_kg_mapIO.c: 285: }
  3001  0006B2  D036               	goto	l394
  3002  0006B4                     l390:
  3003                           
  3004                           ;app_h8_kg_mapIO.c: 286: else if(tChanged.u.bit1&(tOutput.u.bit7==1) || tUart_New.u.bit1
      +                          &(!tUart.u.bit1))
  3005  0006B4  0E01               	movlw	1
  3006  0006B6  0101               	movlb	1	; () banked
  3007  0006B8  A3E6               	btfss	combineIO_KG_TEST@tChanged& (0+255),1,b
  3008  0006BA  0E00               	movlw	0
  3009  0006BC  0101               	movlb	1	; () banked
  3010  0006BE  AF72               	btfss	combineIO_KG_TEST@tOutput& (0+255),7,b
  3011  0006C0  0E00               	movlw	0
  3012  0006C2  A0E8               	btfss	wreg,0,c
  3013  0006C4  D004               	goto	u5210
  3014  0006C6  0101               	movlb	1	; () banked
  3015  0006C8  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  3016  0006CA  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  3017  0006CC  D002               	goto	u5218
  3018  0006CE                     u5210:
  3019  0006CE  0101               	movlb	1	; () banked
  3020  0006D0  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  3021  0006D2                     u5218:
  3022  0006D2  0101               	movlb	1	; () banked
  3023  0006D4  51DD               	movf	??_combineIO_KG_TEST& (0+255),w,b
  3024  0006D6  A4D8               	btfss	status,2,c
  3025  0006D8  D014               	goto	u5260
  3026                           
  3027                           ; BSR set to: 1
  3028  0006DA  0101               	movlb	1	; () banked
  3029  0006DC  A3E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),1,b
  3030  0006DE  D004               	goto	u5230
  3031  0006E0  0101               	movlb	1	; () banked
  3032  0006E2  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  3033  0006E4  2BDD               	incf	??_combineIO_KG_TEST& (0+255),f,b
  3034  0006E6  D002               	goto	u5238
  3035  0006E8                     u5230:
  3036  0006E8  0101               	movlb	1	; () banked
  3037  0006EA  6BDD               	clrf	??_combineIO_KG_TEST& (0+255),b
  3038  0006EC                     u5238:
  3039  0006EC  0101               	movlb	1	; () banked
  3040  0006EE  B3E5               	btfsc	combineIO_KG_TEST@tUart& (0+255),1,b
  3041  0006F0  D002               	goto	u5240
  3042  0006F2  0E01               	movlw	1
  3043  0006F4  D001               	goto	u5250
  3044  0006F6                     u5240:
  3045  0006F6  0E00               	movlw	0
  3046  0006F8                     u5250:
  3047  0006F8  0101               	movlb	1	; () banked
  3048  0006FA  15DD               	andwf	??_combineIO_KG_TEST& (0+255),w,b
  3049  0006FC  0900               	iorlw	0
  3050  0006FE  B4D8               	btfsc	status,2,c
  3051  000700  D00F               	goto	l394
  3052  000702                     u5260:
  3053                           
  3054                           ; BSR set to: 1
  3055                           ;app_h8_kg_mapIO.c: 287: {
  3056                           ;app_h8_kg_mapIO.c: 288: tOutput.u.bit7 =0;
  3057  000702  0101               	movlb	1	; () banked
  3058  000704  9F72               	bcf	combineIO_KG_TEST@tOutput& (0+255),7,b
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;app_h8_kg_mapIO.c: 289: putUartStrings("!TER~10_",sizeof("!TER~10_"));
  3062  000706  0E60               	movlw	low STR_25
  3063  000708  0101               	movlb	1	; () banked
  3064  00070A  6FCD               	movwf	putUartStrings@text& (0+255),b
  3065  00070C  0E7F               	movlw	high STR_25
  3066  00070E  0101               	movlb	1	; () banked
  3067  000710  6FCE               	movwf	(putUartStrings@text+1)& (0+255),b
  3068  000712  0E00               	movlw	0
  3069  000714  0101               	movlb	1	; () banked
  3070  000716  6FD0               	movwf	(putUartStrings@len+1)& (0+255),b
  3071  000718  0E09               	movlw	9
  3072  00071A  6FCF               	movwf	putUartStrings@len& (0+255),b
  3073  00071C  EC2B  F00D         	call	_putUartStrings	;wreg free
  3074  000720                     l394:
  3075                           
  3076                           ;app_h8_kg_mapIO.c: 290: }
  3077                           ;app_h8_kg_mapIO.c: 296: if (tUart_New.u.bit0==1)
  3078  000720  0101               	movlb	1	; () banked
  3079  000722  A1E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),0,b
  3080  000724  D005               	goto	l397
  3081                           
  3082                           ; BSR set to: 1
  3083                           ;app_h8_kg_mapIO.c: 297: netBufferGlobal_new[0]=0;
  3084  000726  0E00               	movlw	0
  3085  000728  0101               	movlb	1	; () banked
  3086  00072A  6F91               	movwf	(_netBufferGlobal_new+1)& (0+255),b
  3087  00072C  0E00               	movlw	0
  3088  00072E  6F90               	movwf	_netBufferGlobal_new& (0+255),b
  3089  000730                     l397:
  3090                           
  3091                           ; BSR set to: 1
  3092                           ;app_h8_kg_mapIO.c: 298: if (tUart_New.u.bit1==1)
  3093                           
  3094                           ; BSR set to: 1
  3095  000730  0101               	movlb	1	; () banked
  3096  000732  A3E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),1,b
  3097  000734  D005               	goto	l398
  3098                           
  3099                           ; BSR set to: 1
  3100                           ;app_h8_kg_mapIO.c: 299: netBufferGlobal_new[1]=0;
  3101  000736  0E00               	movlw	0
  3102  000738  0101               	movlb	1	; () banked
  3103  00073A  6F93               	movwf	(_netBufferGlobal_new+3)& (0+255),b
  3104  00073C  0E00               	movlw	0
  3105  00073E  6F92               	movwf	(_netBufferGlobal_new+2)& (0+255),b
  3106  000740                     l398:
  3107                           
  3108                           ; BSR set to: 1
  3109                           ;app_h8_kg_mapIO.c: 300: if (tUart_New.u.bit2==1)
  3110                           
  3111                           ; BSR set to: 1
  3112  000740  0101               	movlb	1	; () banked
  3113  000742  A5E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),2,b
  3114  000744  D005               	goto	l399
  3115                           
  3116                           ; BSR set to: 1
  3117                           ;app_h8_kg_mapIO.c: 301: netBufferGlobal_new[2]=0;
  3118  000746  0E00               	movlw	0
  3119  000748  0101               	movlb	1	; () banked
  3120  00074A  6F95               	movwf	(_netBufferGlobal_new+5)& (0+255),b
  3121  00074C  0E00               	movlw	0
  3122  00074E  6F94               	movwf	(_netBufferGlobal_new+4)& (0+255),b
  3123  000750                     l399:
  3124                           
  3125                           ; BSR set to: 1
  3126                           ;app_h8_kg_mapIO.c: 302: if (tUart_New.u.bit3==1)
  3127                           
  3128                           ; BSR set to: 1
  3129  000750  0101               	movlb	1	; () banked
  3130  000752  A7E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),3,b
  3131  000754  D005               	goto	l400
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;app_h8_kg_mapIO.c: 303: netBufferGlobal_new[3]=0;
  3135  000756  0E00               	movlw	0
  3136  000758  0101               	movlb	1	; () banked
  3137  00075A  6F97               	movwf	(_netBufferGlobal_new+7)& (0+255),b
  3138  00075C  0E00               	movlw	0
  3139  00075E  6F96               	movwf	(_netBufferGlobal_new+6)& (0+255),b
  3140  000760                     l400:
  3141                           
  3142                           ; BSR set to: 1
  3143                           ;app_h8_kg_mapIO.c: 304: if (tUart_New.u.bit4==1)
  3144                           
  3145                           ; BSR set to: 1
  3146  000760  0101               	movlb	1	; () banked
  3147  000762  A9E7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),4,b
  3148  000764  D005               	goto	l401
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;app_h8_kg_mapIO.c: 305: netBufferGlobal_new[4]=0;
  3152  000766  0E00               	movlw	0
  3153  000768  0101               	movlb	1	; () banked
  3154  00076A  6F99               	movwf	(_netBufferGlobal_new+9)& (0+255),b
  3155  00076C  0E00               	movlw	0
  3156  00076E  6F98               	movwf	(_netBufferGlobal_new+8)& (0+255),b
  3157  000770                     l401:
  3158                           
  3159                           ; BSR set to: 1
  3160                           ;app_h8_kg_mapIO.c: 306: if (tUart_New.u.bit5==1)
  3161                           
  3162                           ; BSR set to: 1
  3163  000770  0101               	movlb	1	; () banked
  3164  000772  ABE7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),5,b
  3165  000774  D005               	goto	l402
  3166                           
  3167                           ; BSR set to: 1
  3168                           ;app_h8_kg_mapIO.c: 307: netBufferGlobal_new[5]=0;
  3169  000776  0E00               	movlw	0
  3170  000778  0101               	movlb	1	; () banked
  3171  00077A  6F9B               	movwf	(_netBufferGlobal_new+11)& (0+255),b
  3172  00077C  0E00               	movlw	0
  3173  00077E  6F9A               	movwf	(_netBufferGlobal_new+10)& (0+255),b
  3174  000780                     l402:
  3175                           
  3176                           ; BSR set to: 1
  3177                           ;app_h8_kg_mapIO.c: 308: if (tUart_New.u.bit6==1)
  3178                           
  3179                           ; BSR set to: 1
  3180  000780  0101               	movlb	1	; () banked
  3181  000782  ADE7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),6,b
  3182  000784  D005               	goto	l403
  3183                           
  3184                           ; BSR set to: 1
  3185                           ;app_h8_kg_mapIO.c: 309: netBufferGlobal_new[6]=0;
  3186  000786  0E00               	movlw	0
  3187  000788  0101               	movlb	1	; () banked
  3188  00078A  6F9D               	movwf	(_netBufferGlobal_new+13)& (0+255),b
  3189  00078C  0E00               	movlw	0
  3190  00078E  6F9C               	movwf	(_netBufferGlobal_new+12)& (0+255),b
  3191  000790                     l403:
  3192                           
  3193                           ; BSR set to: 1
  3194                           ;app_h8_kg_mapIO.c: 310: if (tUart_New.u.bit7==1)
  3195                           
  3196                           ; BSR set to: 1
  3197  000790  0101               	movlb	1	; () banked
  3198  000792  AFE7               	btfss	combineIO_KG_TEST@tUart_New& (0+255),7,b
  3199  000794  D005               	goto	l404
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;app_h8_kg_mapIO.c: 311: netBufferGlobal_new[7]=0;
  3203  000796  0E00               	movlw	0
  3204  000798  0101               	movlb	1	; () banked
  3205  00079A  6F9F               	movwf	(_netBufferGlobal_new+15)& (0+255),b
  3206  00079C  0E00               	movlw	0
  3207  00079E  6F9E               	movwf	(_netBufferGlobal_new+14)& (0+255),b
  3208  0007A0                     l404:
  3209                           
  3210                           ; BSR set to: 1
  3211                           ;app_h8_kg_mapIO.c: 322: Uart_Old_Stored=UART;
  3212                           
  3213                           ; BSR set to: 1
  3214  0007A0  C1E3  F174         	movff	combineIO_KG_TEST@UART,combineIO_KG_TEST@Uart_Old_Stored
  3215                           
  3216                           ; BSR set to: 1
  3217                           ;app_h8_kg_mapIO.c: 323: Input_Old_Stored=INPUT;
  3218  0007A4  C1D9  F173         	movff	combineIO_KG_TEST@INPUT,combineIO_KG_TEST@Input_Old_Stored
  3219                           
  3220                           ;app_h8_kg_mapIO.c: 326: return(tOutput.byte);
  3221  0007A8  0101               	movlb	1	; () banked
  3222  0007AA  5172               	movf	combineIO_KG_TEST@tOutput& (0+255),w,b
  3223  0007AC  0012               	return	
  3224  0007AE                     __end_of_combineIO_KG_TEST:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           intcon	equ	0xFF2
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           postdec1	equ	0xFE5
  3234                           fsr1l	equ	0xFE1
  3235                           status	equ	0xFD8
  3236                           
  3237 ;; *************** function _putUartStrings *****************
  3238 ;; Defined at:
  3239 ;;		line 4 in file "uartString.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  text            2    1[BANK1 ] PTR unsigned char 
  3242 ;;		 -> uart_receiv_isr@text(40), STR_25(9), STR_23(9), STR_21(9), 
  3243 ;;		 -> STR_19(9), STR_17(9), STR_15(9), STR_13(9), 
  3244 ;;		 -> STR_11(9), STR_9(9), STR_7(9), STR_5(9), 
  3245 ;;		 -> STR_3(9), STR_1(9), 
  3246 ;;  len             2    3[BANK1 ] int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  i               2   10[BANK1 ] int 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3258 ;;      Params:         0       0       4       0       0       0       0
  3259 ;;      Locals:         0       0       2       0       0       0       0
  3260 ;;      Temps:          0       0       5       0       0       0       0
  3261 ;;      Totals:         0       0      11       0       0       0       0
  3262 ;;Total ram usage:       11 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    7
  3265 ;; This function calls:
  3266 ;;		_EUSART2_Write
  3267 ;; This function is called by:
  3268 ;;		_combineIO_KG_TEST
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text4
  3273  001A56                     __ptext4:
  3274                           	opt stack 0
  3275  001A56                     _putUartStrings:
  3276                           	opt stack 22
  3277                           
  3278                           ;uartString.c: 6: for(int i=0; i<(len-1); i++)
  3279                           
  3280                           ; BSR set to: 1
  3281                           ;incstack = 0
  3282  001A56  0E00               	movlw	0
  3283  001A58  0101               	movlb	1	; () banked
  3284  001A5A  6FD7               	movwf	(putUartStrings@i+1)& (0+255),b
  3285  001A5C  0E00               	movlw	0
  3286  001A5E  6FD6               	movwf	putUartStrings@i& (0+255),b
  3287  001A60  D021               	goto	l1040
  3288  001A62                     
  3289                           ; BSR set to: 1
  3290                           ;uartString.c: 7: {
  3291                           ;uartString.c: 8: EUSART2_Write(text[i]);
  3292                           
  3293                           ; BSR set to: 1
  3294  001A62  0101               	movlb	1	; () banked
  3295  001A64  51D6               	movf	putUartStrings@i& (0+255),w,b
  3296  001A66  0101               	movlb	1	; () banked
  3297  001A68  25CD               	addwf	putUartStrings@text& (0+255),w,b
  3298  001A6A  0101               	movlb	1	; () banked
  3299  001A6C  6FD1               	movwf	??_putUartStrings& (0+255),b
  3300  001A6E  0101               	movlb	1	; () banked
  3301  001A70  51D7               	movf	(putUartStrings@i+1)& (0+255),w,b
  3302  001A72  0101               	movlb	1	; () banked
  3303  001A74  21CE               	addwfc	(putUartStrings@text+1)& (0+255),w,b
  3304  001A76  0101               	movlb	1	; () banked
  3305  001A78  6FD2               	movwf	(??_putUartStrings+1)& (0+255),b
  3306  001A7A  C1D1  FFF6         	movff	??_putUartStrings,tblptrl
  3307  001A7E  C1D2  FFF7         	movff	??_putUartStrings+1,tblptrh
  3308  001A82  6AF8               	clrf	tblptru,c
  3309  001A84  0E05               	movlw	(high __ramtop+-1)
  3310  001A86  64F7               	cpfsgt	tblptrh,c
  3311  001A88  D003               	bra	u3897
  3312  001A8A  0008               	tblrd		*
  3313  001A8C  50F5               	movf	tablat,w,c
  3314  001A8E  D005               	bra	u3890
  3315  001A90                     u3897:
  3316  001A90  CFF6 FFE1          	movff	tblptrl,fsr1l
  3317  001A94  CFF7 FFE2          	movff	tblptrh,fsr1h
  3318  001A98  50E7               	movf	indf1,w,c
  3319  001A9A                     u3890:
  3320  001A9A  EC80  F010         	call	_EUSART2_Write
  3321  001A9E  0101               	movlb	1	; () banked
  3322  001AA0  4BD6               	infsnz	putUartStrings@i& (0+255),f,b
  3323  001AA2  2BD7               	incf	(putUartStrings@i+1)& (0+255),f,b
  3324  001AA4                     l1040:
  3325                           
  3326                           ; BSR set to: 1
  3327                           
  3328                           ; BSR set to: 1
  3329  001AA4  0EFF               	movlw	255
  3330  001AA6  0101               	movlb	1	; () banked
  3331  001AA8  6FD1               	movwf	??_putUartStrings& (0+255),b
  3332  001AAA  0EFF               	movlw	255
  3333  001AAC  0101               	movlb	1	; () banked
  3334  001AAE  6FD2               	movwf	(??_putUartStrings+1)& (0+255),b
  3335  001AB0  C1CF  F1D3         	movff	putUartStrings@len,??_putUartStrings+2
  3336  001AB4  C1D0  F1D4         	movff	putUartStrings@len+1,??_putUartStrings+3
  3337  001AB8  0101               	movlb	1	; () banked
  3338  001ABA  51D1               	movf	??_putUartStrings& (0+255),w,b
  3339  001ABC  0101               	movlb	1	; () banked
  3340  001ABE  27D3               	addwf	(??_putUartStrings+2)& (0+255),f,b
  3341  001AC0  0101               	movlb	1	; () banked
  3342  001AC2  51D2               	movf	(??_putUartStrings+1)& (0+255),w,b
  3343  001AC4  0101               	movlb	1	; () banked
  3344  001AC6  23D4               	addwfc	(??_putUartStrings+3)& (0+255),f,b
  3345  001AC8  0101               	movlb	1	; () banked
  3346  001ACA  51D3               	movf	(??_putUartStrings+2)& (0+255),w,b
  3347  001ACC  0101               	movlb	1	; () banked
  3348  001ACE  5DD6               	subwf	putUartStrings@i& (0+255),w,b
  3349  001AD0  0101               	movlb	1	; () banked
  3350  001AD2  51D7               	movf	(putUartStrings@i+1)& (0+255),w,b
  3351  001AD4  0A80               	xorlw	128
  3352  001AD6  0101               	movlb	1	; () banked
  3353  001AD8  6FD5               	movwf	(??_putUartStrings+4)& (0+255),b
  3354  001ADA  0101               	movlb	1	; () banked
  3355  001ADC  51D4               	movf	(??_putUartStrings+3)& (0+255),w,b
  3356  001ADE  0A80               	xorlw	128
  3357  001AE0  0101               	movlb	1	; () banked
  3358  001AE2  59D5               	subwfb	(??_putUartStrings+4)& (0+255),w,b
  3359  001AE4  A0D8               	btfss	status,0,c
  3360  001AE6  D7BD               	goto	l1041
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;uartString.c: 9: }
  3364                           ;uartString.c: 10: EUSART2_Write(10);
  3365                           
  3366                           ; BSR set to: 1
  3367  001AE8  0E0A               	movlw	10
  3368  001AEA  EC80  F010         	call	_EUSART2_Write
  3369  001AEE  0012               	return		;funcret
  3370  001AF0                     __end_of_putUartStrings:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           intcon	equ	0xFF2
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           indf1	equ	0xFE7
  3380                           postdec1	equ	0xFE5
  3381                           fsr1h	equ	0xFE2
  3382                           fsr1l	equ	0xFE1
  3383                           status	equ	0xFD8
  3384                           
  3385 ;; *************** function _EUSART2_Write *****************
  3386 ;; Defined at:
  3387 ;;		line 132 in file "mcc_generated_files/eusart2.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  txData          1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  txData          1    0[BANK1 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3401 ;;      Params:         0       0       0       0       0       0       0
  3402 ;;      Locals:         0       0       1       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0
  3404 ;;      Totals:         0       0       1       0       0       0       0
  3405 ;;Total ram usage:        1 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    6
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_putUartStrings
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text5
  3416  002100                     __ptext5:
  3417                           	opt stack 0
  3418  002100                     _EUSART2_Write:
  3419                           	opt stack 22
  3420                           
  3421                           ;incstack = 0
  3422                           ;EUSART2_Write@txData stored from wreg
  3423  002100  0101               	movlb	1	; () banked
  3424  002102  6FCC               	movwf	EUSART2_Write@txData& (0+255),b
  3425  002104                     
  3426                           ;eusart2.c: 135: {
  3427                           
  3428                           ;eusart2.c: 134: while(0 == eusart2TxBufferRemaining)
  3429  002104  5056               	movf	_eusart2TxBufferRemaining,w,c	;volatile
  3430  002106  B4D8               	btfsc	status,2,c
  3431  002108  D7FD               	goto	l3946
  3432                           
  3433                           ;eusart2.c: 136: }
  3434                           ;eusart2.c: 138: if(0 == PIE3bits.TX2IE)
  3435  00210A  B8A3               	btfsc	4003,4,c	;volatile
  3436  00210C  D003               	goto	l901
  3437                           
  3438                           ;eusart2.c: 139: {
  3439                           ;eusart2.c: 140: TXREG2 = txData;
  3440  00210E  C1CC  FF73         	movff	EUSART2_Write@txData,3955	;volatile
  3441                           
  3442                           ;eusart2.c: 141: }
  3443  002112  D012               	goto	l902
  3444  002114                     l901:
  3445                           
  3446                           ;eusart2.c: 142: else
  3447                           ;eusart2.c: 143: {
  3448                           ;eusart2.c: 144: PIE3bits.TX2IE = 0;
  3449  002114  98A3               	bcf	4003,4,c	;volatile
  3450                           
  3451                           ;eusart2.c: 145: eusart2TxBuffer[eusart2TxHead++] = txData;
  3452  002116  5058               	movf	_eusart2TxHead,w,c	;volatile
  3453  002118  0D01               	mullw	1
  3454  00211A  0E00               	movlw	low _eusart2TxBuffer
  3455  00211C  24F3               	addwf	prodl,w,c
  3456  00211E  6ED9               	movwf	fsr2l,c
  3457  002120  0E02               	movlw	high _eusart2TxBuffer
  3458  002122  20F4               	addwfc	prodh,w,c
  3459  002124  6EDA               	movwf	fsr2h,c
  3460  002126  C1CC  FFDF         	movff	EUSART2_Write@txData,indf2
  3461  00212A  2A58               	incf	_eusart2TxHead,f,c	;volatile
  3462                           
  3463                           ;eusart2.c: 146: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  3464  00212C  0E3F               	movlw	63
  3465  00212E  6458               	cpfsgt	_eusart2TxHead,c	;volatile
  3466  002130  D002               	goto	l903
  3467                           
  3468                           ;eusart2.c: 147: {
  3469                           ;eusart2.c: 148: eusart2TxHead = 0;
  3470  002132  0E00               	movlw	0
  3471  002134  6E58               	movwf	_eusart2TxHead,c	;volatile
  3472  002136                     l903:
  3473                           
  3474                           ;eusart2.c: 149: }
  3475                           ;eusart2.c: 150: eusart2TxBufferRemaining--;
  3476  002136  0656               	decf	_eusart2TxBufferRemaining,f,c	;volatile
  3477  002138                     l902:
  3478                           
  3479                           ;eusart2.c: 151: }
  3480                           ;eusart2.c: 152: PIE3bits.TX2IE = 1;
  3481  002138  88A3               	bsf	4003,4,c	;volatile
  3482  00213A  0012               	return		;funcret
  3483  00213C                     __end_of_EUSART2_Write:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           indf1	equ	0xFE7
  3495                           postdec1	equ	0xFE5
  3496                           fsr1h	equ	0xFE2
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _array2char *****************
  3504 ;; Defined at:
  3505 ;;		line 12 in file "data_types.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  array           2    0[BANK1 ] PTR int 
  3508 ;;		 -> netBufferGlobal(20), outBufferGlobal(20), netBufferGlobal_new(20), 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  b2b             1    3[BANK1 ] struct bit_byte
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      unsigned char 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3520 ;;      Params:         0       0       2       0       0       0       0
  3521 ;;      Locals:         0       0       1       0       0       0       0
  3522 ;;      Temps:          0       0       1       0       0       0       0
  3523 ;;      Totals:         0       0       4       0       0       0       0
  3524 ;;Total ram usage:        4 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    6
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_main
  3531 ;;		_old_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text6
  3536  001418                     __ptext6:
  3537                           	opt stack 0
  3538  001418                     _array2char:
  3539                           	opt stack 24
  3540                           
  3541                           ;data_types.c: 13: union bit_byte b2b;
  3542                           ;data_types.c: 15: b2b.u.bit0=array[0];
  3543                           
  3544                           ;incstack = 0
  3545  001418  C1CC  FFD9         	movff	array2char@array,fsr2l
  3546  00141C  C1CD  FFDA         	movff	array2char@array+1,fsr2h
  3547  001420  50DF               	movf	indf2,w,c
  3548  001422  0101               	movlb	1	; () banked
  3549  001424  6FCE               	movwf	??_array2char& (0+255),b
  3550  001426  0101               	movlb	1	; () banked
  3551  001428  51CF               	movf	array2char@b2b& (0+255),w,b
  3552  00142A  0101               	movlb	1	; () banked
  3553  00142C  19CE               	xorwf	??_array2char& (0+255),w,b
  3554  00142E  0BFE               	andlw	-2
  3555  001430  19CE               	xorwf	??_array2char& (0+255),w,b
  3556  001432  0101               	movlb	1	; () banked
  3557  001434  6FCF               	movwf	array2char@b2b& (0+255),b
  3558                           
  3559                           ;data_types.c: 16: b2b.u.bit1=array[1];
  3560  001436  0101               	movlb	1	; () banked
  3561  001438  EE20 F002          	lfsr	2,2
  3562  00143C  51CC               	movf	array2char@array& (0+255),w,b
  3563  00143E  26D9               	addwf	fsr2l,f,c
  3564  001440  51CD               	movf	(array2char@array+1)& (0+255),w,b
  3565  001442  22DA               	addwfc	fsr2h,f,c
  3566  001444  50DF               	movf	indf2,w,c
  3567  001446  0101               	movlb	1	; () banked
  3568  001448  6FCE               	movwf	??_array2char& (0+255),b
  3569  00144A  0101               	movlb	1	; () banked
  3570  00144C  47CE               	rlncf	??_array2char& (0+255),f,b
  3571  00144E  0101               	movlb	1	; () banked
  3572  001450  51CF               	movf	array2char@b2b& (0+255),w,b
  3573  001452  0101               	movlb	1	; () banked
  3574  001454  19CE               	xorwf	??_array2char& (0+255),w,b
  3575  001456  0BFD               	andlw	-3
  3576  001458  19CE               	xorwf	??_array2char& (0+255),w,b
  3577  00145A  0101               	movlb	1	; () banked
  3578  00145C  6FCF               	movwf	array2char@b2b& (0+255),b
  3579                           
  3580                           ;data_types.c: 17: b2b.u.bit2=array[2];
  3581  00145E  0101               	movlb	1	; () banked
  3582  001460  EE20 F004          	lfsr	2,4
  3583  001464  51CC               	movf	array2char@array& (0+255),w,b
  3584  001466  26D9               	addwf	fsr2l,f,c
  3585  001468  51CD               	movf	(array2char@array+1)& (0+255),w,b
  3586  00146A  22DA               	addwfc	fsr2h,f,c
  3587  00146C  50DF               	movf	indf2,w,c
  3588  00146E  0101               	movlb	1	; () banked
  3589  001470  6FCE               	movwf	??_array2char& (0+255),b
  3590  001472  0101               	movlb	1	; () banked
  3591  001474  47CE               	rlncf	??_array2char& (0+255),f,b
  3592  001476  47CE               	rlncf	??_array2char& (0+255),f,b
  3593  001478  0101               	movlb	1	; () banked
  3594  00147A  51CF               	movf	array2char@b2b& (0+255),w,b
  3595  00147C  0101               	movlb	1	; () banked
  3596  00147E  19CE               	xorwf	??_array2char& (0+255),w,b
  3597  001480  0BFB               	andlw	-5
  3598  001482  19CE               	xorwf	??_array2char& (0+255),w,b
  3599  001484  0101               	movlb	1	; () banked
  3600  001486  6FCF               	movwf	array2char@b2b& (0+255),b
  3601                           
  3602                           ;data_types.c: 18: b2b.u.bit3=array[3];
  3603  001488  0101               	movlb	1	; () banked
  3604  00148A  EE20 F006          	lfsr	2,6
  3605  00148E  51CC               	movf	array2char@array& (0+255),w,b
  3606  001490  26D9               	addwf	fsr2l,f,c
  3607  001492  51CD               	movf	(array2char@array+1)& (0+255),w,b
  3608  001494  22DA               	addwfc	fsr2h,f,c
  3609  001496  50DF               	movf	indf2,w,c
  3610  001498  0101               	movlb	1	; () banked
  3611  00149A  6FCE               	movwf	??_array2char& (0+255),b
  3612  00149C  0101               	movlb	1	; () banked
  3613  00149E  47CE               	rlncf	??_array2char& (0+255),f,b
  3614  0014A0  47CE               	rlncf	??_array2char& (0+255),f,b
  3615  0014A2  47CE               	rlncf	??_array2char& (0+255),f,b
  3616  0014A4  0101               	movlb	1	; () banked
  3617  0014A6  51CF               	movf	array2char@b2b& (0+255),w,b
  3618  0014A8  0101               	movlb	1	; () banked
  3619  0014AA  19CE               	xorwf	??_array2char& (0+255),w,b
  3620  0014AC  0BF7               	andlw	-9
  3621  0014AE  19CE               	xorwf	??_array2char& (0+255),w,b
  3622  0014B0  0101               	movlb	1	; () banked
  3623  0014B2  6FCF               	movwf	array2char@b2b& (0+255),b
  3624                           
  3625                           ;data_types.c: 19: b2b.u.bit4=array[4];
  3626  0014B4  0101               	movlb	1	; () banked
  3627  0014B6  EE20 F008          	lfsr	2,8
  3628  0014BA  51CC               	movf	array2char@array& (0+255),w,b
  3629  0014BC  26D9               	addwf	fsr2l,f,c
  3630  0014BE  51CD               	movf	(array2char@array+1)& (0+255),w,b
  3631  0014C0  22DA               	addwfc	fsr2h,f,c
  3632  0014C2  50DF               	movf	indf2,w,c
  3633  0014C4  0101               	movlb	1	; () banked
  3634  0014C6  6FCE               	movwf	??_array2char& (0+255),b
  3635  0014C8  0101               	movlb	1	; () banked
  3636  0014CA  3BCE               	swapf	??_array2char& (0+255),f,b
  3637  0014CC  0101               	movlb	1	; () banked
  3638  0014CE  51CF               	movf	array2char@b2b& (0+255),w,b
  3639  0014D0  0101               	movlb	1	; () banked
  3640  0014D2  19CE               	xorwf	??_array2char& (0+255),w,b
  3641  0014D4  0BEF               	andlw	-17
  3642  0014D6  19CE               	xorwf	??_array2char& (0+255),w,b
  3643  0014D8  0101               	movlb	1	; () banked
  3644  0014DA  6FCF               	movwf	array2char@b2b& (0+255),b
  3645                           
  3646                           ;data_types.c: 20: b2b.u.bit5=array[5];
  3647  0014DC  0101               	movlb	1	; () banked
  3648  0014DE  EE20 F00A          	lfsr	2,10
  3649  0014E2  51CC               	movf	array2char@array& (0+255),w,b
  3650  0014E4  26D9               	addwf	fsr2l,f,c
  3651  0014E6  51CD               	movf	(array2char@array+1)& (0+255),w,b
  3652  0014E8  22DA               	addwfc	fsr2h,f,c
  3653  0014EA  50DF               	movf	indf2,w,c
  3654  0014EC  0101               	movlb	1	; () banked
  3655  0014EE  6FCE               	movwf	??_array2char& (0+255),b
  3656  0014F0  0101               	movlb	1	; () banked
  3657  0014F2  3BCE               	swapf	??_array2char& (0+255),f,b
  3658  0014F4  47CE               	rlncf	??_array2char& (0+255),f,b
  3659  0014F6  0101               	movlb	1	; () banked
  3660  0014F8  51CF               	movf	array2char@b2b& (0+255),w,b
  3661  0014FA  0101               	movlb	1	; () banked
  3662  0014FC  19CE               	xorwf	??_array2char& (0+255),w,b
  3663  0014FE  0BDF               	andlw	-33
  3664  001500  19CE               	xorwf	??_array2char& (0+255),w,b
  3665  001502  0101               	movlb	1	; () banked
  3666  001504  6FCF               	movwf	array2char@b2b& (0+255),b
  3667                           
  3668                           ;data_types.c: 21: b2b.u.bit6=array[6];
  3669  001506  0101               	movlb	1	; () banked
  3670  001508  EE20 F00C          	lfsr	2,12
  3671  00150C  51CC               	movf	array2char@array& (0+255),w,b
  3672  00150E  26D9               	addwf	fsr2l,f,c
  3673  001510  51CD               	movf	(array2char@array+1)& (0+255),w,b
  3674  001512  22DA               	addwfc	fsr2h,f,c
  3675  001514  50DF               	movf	indf2,w,c
  3676  001516  0101               	movlb	1	; () banked
  3677  001518  6FCE               	movwf	??_array2char& (0+255),b
  3678  00151A  0101               	movlb	1	; () banked
  3679  00151C  3BCE               	swapf	??_array2char& (0+255),f,b
  3680  00151E  47CE               	rlncf	??_array2char& (0+255),f,b
  3681  001520  47CE               	rlncf	??_array2char& (0+255),f,b
  3682  001522  0101               	movlb	1	; () banked
  3683  001524  51CF               	movf	array2char@b2b& (0+255),w,b
  3684  001526  0101               	movlb	1	; () banked
  3685  001528  19CE               	xorwf	??_array2char& (0+255),w,b
  3686  00152A  0BBF               	andlw	-65
  3687  00152C  19CE               	xorwf	??_array2char& (0+255),w,b
  3688  00152E  0101               	movlb	1	; () banked
  3689  001530  6FCF               	movwf	array2char@b2b& (0+255),b
  3690                           
  3691                           ;data_types.c: 22: b2b.u.bit7=array[7];
  3692  001532  0101               	movlb	1	; () banked
  3693  001534  EE20 F00E          	lfsr	2,14
  3694  001538  51CC               	movf	array2char@array& (0+255),w,b
  3695  00153A  26D9               	addwf	fsr2l,f,c
  3696  00153C  51CD               	movf	(array2char@array+1)& (0+255),w,b
  3697  00153E  22DA               	addwfc	fsr2h,f,c
  3698  001540  50DF               	movf	indf2,w,c
  3699  001542  0101               	movlb	1	; () banked
  3700  001544  6FCE               	movwf	??_array2char& (0+255),b
  3701  001546  0101               	movlb	1	; () banked
  3702  001548  33CE               	rrcf	??_array2char& (0+255),f,b
  3703  00154A  33CE               	rrcf	??_array2char& (0+255),f,b
  3704  00154C  0101               	movlb	1	; () banked
  3705  00154E  51CF               	movf	array2char@b2b& (0+255),w,b
  3706  001550  0101               	movlb	1	; () banked
  3707  001552  19CE               	xorwf	??_array2char& (0+255),w,b
  3708  001554  0B7F               	andlw	-129
  3709  001556  19CE               	xorwf	??_array2char& (0+255),w,b
  3710  001558  0101               	movlb	1	; () banked
  3711  00155A  6FCF               	movwf	array2char@b2b& (0+255),b
  3712                           
  3713                           ; BSR set to: 1
  3714                           ;data_types.c: 25: return b2b.byte;
  3715  00155C  0101               	movlb	1	; () banked
  3716  00155E  51CF               	movf	array2char@b2b& (0+255),w,b
  3717  001560  0012               	return	
  3718  001562                     __end_of_array2char:
  3719                           	opt stack 0
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           prodh	equ	0xFF4
  3725                           prodl	equ	0xFF3
  3726                           intcon	equ	0xFF2
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           indf1	equ	0xFE7
  3730                           postdec1	equ	0xFE5
  3731                           fsr1h	equ	0xFE2
  3732                           fsr1l	equ	0xFE1
  3733                           indf2	equ	0xFDF
  3734                           fsr2h	equ	0xFDA
  3735                           fsr2l	equ	0xFD9
  3736                           status	equ	0xFD8
  3737                           
  3738 ;; *************** function _WNOP *****************
  3739 ;; Defined at:
  3740 ;;		line 229 in file "hadware_interface.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		None
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3754 ;;      Params:         0       0       0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0
  3757 ;;      Totals:         0       0       0       0       0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    6
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;;		_old_main
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text7
  3770  00245C                     __ptext7:
  3771                           	opt stack 0
  3772  00245C                     _WNOP:
  3773                           	opt stack 24
  3774                           
  3775                           ;hadware_interface.c: 231: __nop();
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;incstack = 0
  3779  00245C  F000               	nop	
  3780  00245E  0012               	return		;funcret
  3781  002460                     __end_of_WNOP:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           postinc0	equ	0xFEE
  3791                           wreg	equ	0xFE8
  3792                           indf1	equ	0xFE7
  3793                           postdec1	equ	0xFE5
  3794                           fsr1h	equ	0xFE2
  3795                           fsr1l	equ	0xFE1
  3796                           indf2	equ	0xFDF
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _SYSTEM_Initialize *****************
  3802 ;; Defined at:
  3803 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3817 ;;      Params:         0       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    8
  3824 ;; This function calls:
  3825 ;;		_EUSART2_Initialize
  3826 ;;		_INTERRUPT_Initialize
  3827 ;;		_OSCILLATOR_Initialize
  3828 ;;		_PIN_MANAGER_Initialize
  3829 ;;		_TMR0_Initialize
  3830 ;;		_TMR2_Initialize
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;;		_old_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text8
  3838  002398                     __ptext8:
  3839                           	opt stack 0
  3840  002398                     _SYSTEM_Initialize:
  3841                           	opt stack 22
  3842                           
  3843                           ;mcc.c: 114: INTERRUPT_Initialize();
  3844                           
  3845                           ;incstack = 0
  3846  002398  EC34  F012         	call	_INTERRUPT_Initialize	;wreg free
  3847                           
  3848                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3849  00239C  EC3C  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  3850                           
  3851                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3852  0023A0  ECED  F011         	call	_OSCILLATOR_Initialize	;wreg free
  3853                           
  3854                           ;mcc.c: 117: TMR2_Initialize();
  3855  0023A4  EC51  F011         	call	_TMR2_Initialize	;wreg free
  3856                           
  3857                           ;mcc.c: 118: TMR0_Initialize();
  3858  0023A8  EC18  F010         	call	_TMR0_Initialize	;wreg free
  3859                           
  3860                           ;mcc.c: 119: EUSART2_Initialize();
  3861  0023AC  ECF6  F010         	call	_EUSART2_Initialize	;wreg free
  3862  0023B0  0012               	return		;funcret
  3863  0023B2                     __end_of_SYSTEM_Initialize:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           intcon	equ	0xFF2
  3872                           postinc0	equ	0xFEE
  3873                           wreg	equ	0xFE8
  3874                           indf1	equ	0xFE7
  3875                           postdec1	equ	0xFE5
  3876                           fsr1h	equ	0xFE2
  3877                           fsr1l	equ	0xFE1
  3878                           indf2	equ	0xFDF
  3879                           fsr2h	equ	0xFDA
  3880                           fsr2l	equ	0xFD9
  3881                           status	equ	0xFD8
  3882                           
  3883 ;; *************** function _TMR2_Initialize *****************
  3884 ;; Defined at:
  3885 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3899 ;;      Params:         0       0       0       0       0       0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0
  3902 ;;      Totals:         0       0       0       0       0       0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    7
  3906 ;; This function calls:
  3907 ;;		_TMR2_SetInterruptHandler
  3908 ;;		_TMR2_StartTimer
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;;		_SYSTEM_Initialize
  3912 ;;		_old_main
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text9
  3917  0022A2                     __ptext9:
  3918                           	opt stack 0
  3919  0022A2                     _TMR2_Initialize:
  3920                           	opt stack 23
  3921                           
  3922                           ;tmr2.c: 68: T2CON = 0x1A;
  3923                           
  3924                           ;incstack = 0
  3925  0022A2  0E1A               	movlw	26
  3926  0022A4  6EBA               	movwf	4026,c	;volatile
  3927                           
  3928                           ;tmr2.c: 71: PR2 = 0x28;
  3929  0022A6  0E28               	movlw	40
  3930  0022A8  6EBB               	movwf	4027,c	;volatile
  3931                           
  3932                           ;tmr2.c: 74: TMR2 = 0x00;
  3933  0022AA  0E00               	movlw	0
  3934  0022AC  6EBC               	movwf	4028,c	;volatile
  3935                           
  3936                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  3937  0022AE  929E               	bcf	3998,1,c	;volatile
  3938                           
  3939                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  3940  0022B0  829D               	bsf	3997,1,c	;volatile
  3941                           
  3942                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3943  0022B2  0E6C               	movlw	low _TMR2_DefaultInterruptHandler
  3944  0022B4  0101               	movlb	1	; () banked
  3945  0022B6  6FCC               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  3946  0022B8  0E24               	movlw	high _TMR2_DefaultInterruptHandler
  3947  0022BA  0101               	movlb	1	; () banked
  3948  0022BC  6FCD               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3949  0022BE  EC19  F012         	call	_TMR2_SetInterruptHandler	;wreg free
  3950                           
  3951                           ;tmr2.c: 86: TMR2_StartTimer();
  3952  0022C2  EC30  F012         	call	_TMR2_StartTimer	;wreg free
  3953  0022C6  0012               	return		;funcret
  3954  0022C8                     __end_of_TMR2_Initialize:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           postinc0	equ	0xFEE
  3964                           wreg	equ	0xFE8
  3965                           indf1	equ	0xFE7
  3966                           postdec1	equ	0xFE5
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _TMR2_StartTimer *****************
  3975 ;; Defined at:
  3976 ;;		line 89 in file "mcc_generated_files/tmr2.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		None
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3990 ;;      Params:         0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    6
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_TMR2_Initialize
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text10
  4005  002460                     __ptext10:
  4006                           	opt stack 0
  4007  002460                     _TMR2_StartTimer:
  4008                           	opt stack 23
  4009                           
  4010                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
  4011                           
  4012                           ;incstack = 0
  4013  002460  84BA               	bsf	4026,2,c	;volatile
  4014  002462  0012               	return		;funcret
  4015  002464                     __end_of_TMR2_StartTimer:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           intcon	equ	0xFF2
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           indf1	equ	0xFE7
  4027                           postdec1	equ	0xFE5
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           indf2	equ	0xFDF
  4031                           fsr2h	equ	0xFDA
  4032                           fsr2l	equ	0xFD9
  4033                           status	equ	0xFD8
  4034                           
  4035 ;; *************** function _TMR2_SetInterruptHandler *****************
  4036 ;; Defined at:
  4037 ;;		line 134 in file "mcc_generated_files/tmr2.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4040 ;;		 -> TMR2_DefaultInterruptHandler(1), button_input_isr(1), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4052 ;;      Params:         0       0       2       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0
  4055 ;;      Totals:         0       0       2       0       0       0       0
  4056 ;;Total ram usage:        2 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    6
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;;		_TMR2_Initialize
  4064 ;;		_old_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text11
  4069  002432                     __ptext11:
  4070                           	opt stack 0
  4071  002432                     _TMR2_SetInterruptHandler:
  4072                           	opt stack 24
  4073                           
  4074                           ;tmr2.c: 135: TMR2_InterruptHandler = InterruptHandler;
  4075                           
  4076                           ;incstack = 0
  4077  002432  C1CC  F04F         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  4078  002436  C1CD  F050         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  4079  00243A  0012               	return		;funcret
  4080  00243C                     __end_of_TMR2_SetInterruptHandler:
  4081                           	opt stack 0
  4082                           tblptru	equ	0xFF8
  4083                           tblptrh	equ	0xFF7
  4084                           tblptrl	equ	0xFF6
  4085                           tablat	equ	0xFF5
  4086                           prodh	equ	0xFF4
  4087                           prodl	equ	0xFF3
  4088                           intcon	equ	0xFF2
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           indf1	equ	0xFE7
  4092                           postdec1	equ	0xFE5
  4093                           fsr1h	equ	0xFE2
  4094                           fsr1l	equ	0xFE1
  4095                           indf2	equ	0xFDF
  4096                           fsr2h	equ	0xFDA
  4097                           fsr2l	equ	0xFD9
  4098                           status	equ	0xFD8
  4099                           
  4100 ;; *************** function _TMR0_Initialize *****************
  4101 ;; Defined at:
  4102 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4116 ;;      Params:         0       0       0       0       0       0       0
  4117 ;;      Locals:         0       0       0       0       0       0       0
  4118 ;;      Temps:          0       0       2       0       0       0       0
  4119 ;;      Totals:         0       0       2       0       0       0       0
  4120 ;;Total ram usage:        2 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    7
  4123 ;; This function calls:
  4124 ;;		_TMR0_SetInterruptHandler
  4125 ;;		_TMR0_StartTimer
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;;		_SYSTEM_Initialize
  4129 ;;		_old_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text12
  4134  002030                     __ptext12:
  4135                           	opt stack 0
  4136  002030                     _TMR0_Initialize:
  4137                           	opt stack 23
  4138                           
  4139                           ;tmr0.c: 71: T0CON = 0x17;
  4140                           
  4141                           ;incstack = 0
  4142  002030  0E17               	movlw	23
  4143  002032  6ED5               	movwf	4053,c	;volatile
  4144                           
  4145                           ;tmr0.c: 74: TMR0H = 0x0B;
  4146  002034  0E0B               	movlw	11
  4147  002036  6ED7               	movwf	4055,c	;volatile
  4148                           
  4149                           ;tmr0.c: 77: TMR0L = 0xDB;
  4150  002038  0EDB               	movlw	219
  4151  00203A  6ED6               	movwf	4054,c	;volatile
  4152                           
  4153                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  4154  00203C  50D6               	movf	4054,w,c	;volatile
  4155  00203E  CFD7 F1CE          	movff	4055,??_TMR0_Initialize	;volatile
  4156  002042  0101               	movlb	1	; () banked
  4157  002044  6BCF               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  4158  002046  C1CE  F1CF         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4159  00204A  0101               	movlb	1	; () banked
  4160  00204C  6BCE               	clrf	??_TMR0_Initialize& (0+255),b
  4161  00204E  0101               	movlb	1	; () banked
  4162  002050  11CE               	iorwf	??_TMR0_Initialize& (0+255),w,b
  4163  002052  0101               	movlb	1	; () banked
  4164  002054  6F6E               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  4165  002056  0101               	movlb	1	; () banked
  4166  002058  51CF               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  4167  00205A  0101               	movlb	1	; () banked
  4168  00205C  6F6F               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  4172  00205E  94F2               	bcf	intcon,2,c	;volatile
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  4176  002060  8AF2               	bsf	intcon,5,c	;volatile
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4180  002062  0E6E               	movlw	low _TMR0_DefaultInterruptHandler
  4181  002064  0101               	movlb	1	; () banked
  4182  002066  6FCC               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  4183  002068  0E24               	movlw	high _TMR0_DefaultInterruptHandler
  4184  00206A  0101               	movlb	1	; () banked
  4185  00206C  6FCD               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4186  00206E  EC1E  F012         	call	_TMR0_SetInterruptHandler	;wreg free
  4187                           
  4188                           ;tmr0.c: 92: TMR0_StartTimer();
  4189  002072  EC32  F012         	call	_TMR0_StartTimer	;wreg free
  4190  002076  0012               	return		;funcret
  4191  002078                     __end_of_TMR0_Initialize:
  4192                           	opt stack 0
  4193                           tblptru	equ	0xFF8
  4194                           tblptrh	equ	0xFF7
  4195                           tblptrl	equ	0xFF6
  4196                           tablat	equ	0xFF5
  4197                           prodh	equ	0xFF4
  4198                           prodl	equ	0xFF3
  4199                           intcon	equ	0xFF2
  4200                           postinc0	equ	0xFEE
  4201                           wreg	equ	0xFE8
  4202                           indf1	equ	0xFE7
  4203                           postdec1	equ	0xFE5
  4204                           fsr1h	equ	0xFE2
  4205                           fsr1l	equ	0xFE1
  4206                           indf2	equ	0xFDF
  4207                           fsr2h	equ	0xFDA
  4208                           fsr2l	equ	0xFD9
  4209                           status	equ	0xFD8
  4210                           
  4211 ;; *************** function _TMR0_StartTimer *****************
  4212 ;; Defined at:
  4213 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		None
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4227 ;;      Params:         0       0       0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0
  4230 ;;      Totals:         0       0       0       0       0       0       0
  4231 ;;Total ram usage:        0 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    6
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_TMR0_Initialize
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text13
  4242  002464                     __ptext13:
  4243                           	opt stack 0
  4244  002464                     _TMR0_StartTimer:
  4245                           	opt stack 23
  4246                           
  4247                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  4248                           
  4249                           ;incstack = 0
  4250  002464  8ED5               	bsf	4053,7,c	;volatile
  4251  002466  0012               	return		;funcret
  4252  002468                     __end_of_TMR0_StartTimer:
  4253                           	opt stack 0
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           prodh	equ	0xFF4
  4259                           prodl	equ	0xFF3
  4260                           intcon	equ	0xFF2
  4261                           postinc0	equ	0xFEE
  4262                           wreg	equ	0xFE8
  4263                           indf1	equ	0xFE7
  4264                           postdec1	equ	0xFE5
  4265                           fsr1h	equ	0xFE2
  4266                           fsr1l	equ	0xFE1
  4267                           indf2	equ	0xFDF
  4268                           fsr2h	equ	0xFDA
  4269                           fsr2l	equ	0xFD9
  4270                           status	equ	0xFD8
  4271                           
  4272 ;; *************** function _TMR0_SetInterruptHandler *****************
  4273 ;; Defined at:
  4274 ;;		line 162 in file "mcc_generated_files/tmr0.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4277 ;;		 -> TMR0_DefaultInterruptHandler(1), timer_mult_isr(1), combineIO_KG_Timer(1), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, status,0
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4289 ;;      Params:         0       0       2       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0
  4292 ;;      Totals:         0       0       2       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    6
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;;		_TMR0_Initialize
  4301 ;;		_old_main
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text14
  4306  00243C                     __ptext14:
  4307                           	opt stack 0
  4308  00243C                     _TMR0_SetInterruptHandler:
  4309                           	opt stack 24
  4310                           
  4311                           ;tmr0.c: 163: TMR0_InterruptHandler = InterruptHandler;
  4312                           
  4313                           ;incstack = 0
  4314  00243C  C1CC  F170         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4315  002440  C1CD  F171         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4316  002444  0012               	return		;funcret
  4317  002446                     __end_of_TMR0_SetInterruptHandler:
  4318                           	opt stack 0
  4319                           tblptru	equ	0xFF8
  4320                           tblptrh	equ	0xFF7
  4321                           tblptrl	equ	0xFF6
  4322                           tablat	equ	0xFF5
  4323                           prodh	equ	0xFF4
  4324                           prodl	equ	0xFF3
  4325                           intcon	equ	0xFF2
  4326                           postinc0	equ	0xFEE
  4327                           wreg	equ	0xFE8
  4328                           indf1	equ	0xFE7
  4329                           postdec1	equ	0xFE5
  4330                           fsr1h	equ	0xFE2
  4331                           fsr1l	equ	0xFE1
  4332                           indf2	equ	0xFDF
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _PIN_MANAGER_Initialize *****************
  4338 ;; Defined at:
  4339 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4353 ;;      Params:         0       0       0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    6
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_SYSTEM_Initialize
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text15
  4368  002078                     __ptext15:
  4369                           	opt stack 0
  4370  002078                     _PIN_MANAGER_Initialize:
  4371                           	opt stack 23
  4372                           
  4373                           ;pin_manager.c: 57: LATE = 0x00;
  4374                           
  4375                           ;incstack = 0
  4376  002078  0E00               	movlw	0
  4377  00207A  6E8D               	movwf	3981,c	;volatile
  4378                           
  4379                           ;pin_manager.c: 58: LATD = 0x00;
  4380  00207C  0E00               	movlw	0
  4381  00207E  6E8C               	movwf	3980,c	;volatile
  4382                           
  4383                           ;pin_manager.c: 59: LATA = 0x00;
  4384  002080  0E00               	movlw	0
  4385  002082  6E89               	movwf	3977,c	;volatile
  4386                           
  4387                           ;pin_manager.c: 60: LATB = 0x00;
  4388  002084  0E00               	movlw	0
  4389  002086  6E8A               	movwf	3978,c	;volatile
  4390                           
  4391                           ;pin_manager.c: 61: LATC = 0x00;
  4392  002088  0E00               	movlw	0
  4393  00208A  6E8B               	movwf	3979,c	;volatile
  4394                           
  4395                           ;pin_manager.c: 66: TRISE = 0x07;
  4396  00208C  0E07               	movlw	7
  4397  00208E  6E96               	movwf	3990,c	;volatile
  4398                           
  4399                           ;pin_manager.c: 67: TRISA = 0xFF;
  4400  002090  6892               	setf	3986,c	;volatile
  4401                           
  4402                           ;pin_manager.c: 68: TRISB = 0xFF;
  4403  002092  6893               	setf	3987,c	;volatile
  4404                           
  4405                           ;pin_manager.c: 69: TRISC = 0xFF;
  4406  002094  6894               	setf	3988,c	;volatile
  4407                           
  4408                           ;pin_manager.c: 70: TRISD = 0xBF;
  4409  002096  0EBF               	movlw	191
  4410  002098  6E95               	movwf	3989,c	;volatile
  4411                           
  4412                           ;pin_manager.c: 75: ANSELC = 0xFC;
  4413  00209A  0EFC               	movlw	252
  4414  00209C  010F               	movlb	15	; () banked
  4415  00209E  6F3A               	movwf	58,b	;volatile
  4416                           
  4417                           ;pin_manager.c: 76: ANSELB = 0x3F;
  4418  0020A0  0E3F               	movlw	63
  4419  0020A2  010F               	movlb	15	; () banked
  4420  0020A4  6F39               	movwf	57,b	;volatile
  4421                           
  4422                           ;pin_manager.c: 77: ANSELD = 0x3F;
  4423  0020A6  0E3F               	movlw	63
  4424  0020A8  010F               	movlb	15	; () banked
  4425  0020AA  6F3B               	movwf	59,b	;volatile
  4426                           
  4427                           ;pin_manager.c: 78: ANSELE = 0x07;
  4428  0020AC  0E07               	movlw	7
  4429  0020AE  010F               	movlb	15	; () banked
  4430  0020B0  6F3C               	movwf	60,b	;volatile
  4431                           
  4432                           ;pin_manager.c: 79: ANSELA = 0x2F;
  4433  0020B2  0E2F               	movlw	47
  4434  0020B4  010F               	movlb	15	; () banked
  4435  0020B6  6F38               	movwf	56,b	;volatile
  4436                           
  4437                           ; BSR set to: 15
  4438                           ;pin_manager.c: 84: WPUB = 0xFF;
  4439  0020B8  6861               	setf	3937,c	;volatile
  4440                           
  4441                           ; BSR set to: 15
  4442                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  4443  0020BA  9EF1               	bcf	intcon2,7,c	;volatile
  4444                           
  4445                           ; BSR set to: 15
  4446  0020BC  0012               	return		;funcret
  4447  0020BE                     __end_of_PIN_MANAGER_Initialize:
  4448                           	opt stack 0
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           intcon2	equ	0xFF1
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           indf1	equ	0xFE7
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _OSCILLATOR_Initialize *****************
  4469 ;; Defined at:
  4470 ;;		line 122 in file "mcc_generated_files/mcc.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4484 ;;      Params:         0       0       0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    6
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;;		_SYSTEM_Initialize
  4496 ;;		_old_main
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text16
  4501  0023DA                     __ptext16:
  4502                           	opt stack 0
  4503  0023DA                     _OSCILLATOR_Initialize:
  4504                           	opt stack 23
  4505                           
  4506                           ;mcc.c: 125: OSCCON = 0x70;
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;incstack = 0
  4510  0023DA  0E70               	movlw	112
  4511  0023DC  6ED3               	movwf	4051,c	;volatile
  4512                           
  4513                           ;mcc.c: 127: OSCCON2 = 0x04;
  4514  0023DE  0E04               	movlw	4
  4515  0023E0  6ED2               	movwf	4050,c	;volatile
  4516                           
  4517                           ;mcc.c: 129: OSCTUNE = 0x40;
  4518  0023E2  0E40               	movlw	64
  4519  0023E4  6E9B               	movwf	3995,c	;volatile
  4520  0023E6                     
  4521                           ;mcc.c: 132: {
  4522  0023E6  BED2               	btfsc	4050,7,c	;volatile
  4523  0023E8  0012               	return	
  4524  0023EA  D7FD               	goto	l672
  4525  0023EC                     __end_of_OSCILLATOR_Initialize:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           intcon	equ	0xFF2
  4534                           intcon2	equ	0xFF1
  4535                           postinc0	equ	0xFEE
  4536                           wreg	equ	0xFE8
  4537                           indf1	equ	0xFE7
  4538                           postdec1	equ	0xFE5
  4539                           fsr1h	equ	0xFE2
  4540                           fsr1l	equ	0xFE1
  4541                           indf2	equ	0xFDF
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _INTERRUPT_Initialize *****************
  4547 ;; Defined at:
  4548 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		None
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4562 ;;      Params:         0       0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0
  4565 ;;      Totals:         0       0       0       0       0       0       0
  4566 ;;Total ram usage:        0 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    6
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;;		_SYSTEM_Initialize
  4574 ;;		_old_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text17
  4579  002468                     __ptext17:
  4580                           	opt stack 0
  4581  002468                     _INTERRUPT_Initialize:
  4582                           	opt stack 23
  4583                           
  4584                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  4585                           
  4586                           ;incstack = 0
  4587  002468  9ED0               	bcf	4048,7,c	;volatile
  4588  00246A  0012               	return		;funcret
  4589  00246C                     __end_of_INTERRUPT_Initialize:
  4590                           	opt stack 0
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           intcon2	equ	0xFF1
  4599                           postinc0	equ	0xFEE
  4600                           wreg	equ	0xFE8
  4601                           indf1	equ	0xFE7
  4602                           postdec1	equ	0xFE5
  4603                           fsr1h	equ	0xFE2
  4604                           fsr1l	equ	0xFE1
  4605                           indf2	equ	0xFDF
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _EUSART2_Initialize *****************
  4611 ;; Defined at:
  4612 ;;		line 75 in file "mcc_generated_files/eusart2.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4626 ;;      Params:         0       0       0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    6
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;;		_SYSTEM_Initialize
  4638 ;;		_old_main
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text18
  4643  0021EC                     __ptext18:
  4644                           	opt stack 0
  4645  0021EC                     _EUSART2_Initialize:
  4646                           	opt stack 23
  4647                           
  4648                           ;eusart2.c: 78: PIE3bits.RC2IE = 0;
  4649                           
  4650                           ;incstack = 0
  4651  0021EC  9AA3               	bcf	4003,5,c	;volatile
  4652                           
  4653                           ;eusart2.c: 79: PIE3bits.TX2IE = 0;
  4654  0021EE  98A3               	bcf	4003,4,c	;volatile
  4655                           
  4656                           ;eusart2.c: 84: BAUDCON2 = 0x08;
  4657  0021F0  0E08               	movlw	8
  4658  0021F2  6E70               	movwf	3952,c	;volatile
  4659                           
  4660                           ;eusart2.c: 87: RCSTA2 = 0x90;
  4661  0021F4  0E90               	movlw	144
  4662  0021F6  6E71               	movwf	3953,c	;volatile
  4663                           
  4664                           ;eusart2.c: 90: TXSTA2 = 0x24;
  4665  0021F8  0E24               	movlw	36
  4666  0021FA  6E72               	movwf	3954,c	;volatile
  4667                           
  4668                           ;eusart2.c: 93: SPBRG2 = 0x82;
  4669  0021FC  0E82               	movlw	130
  4670  0021FE  6E75               	movwf	3957,c	;volatile
  4671                           
  4672                           ;eusart2.c: 96: SPBRGH2 = 0x06;
  4673  002200  0E06               	movlw	6
  4674  002202  6E76               	movwf	3958,c	;volatile
  4675                           
  4676                           ;eusart2.c: 100: eusart2TxHead = 0;
  4677  002204  0E00               	movlw	0
  4678  002206  6E58               	movwf	_eusart2TxHead,c	;volatile
  4679                           
  4680                           ;eusart2.c: 101: eusart2TxTail = 0;
  4681  002208  0E00               	movlw	0
  4682  00220A  6E57               	movwf	_eusart2TxTail,c	;volatile
  4683                           
  4684                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
  4685  00220C  0E40               	movlw	64
  4686  00220E  6E56               	movwf	_eusart2TxBufferRemaining,c	;volatile
  4687                           
  4688                           ;eusart2.c: 104: eusart2RxHead = 0;
  4689  002210  0E00               	movlw	0
  4690  002212  6E55               	movwf	_eusart2RxHead,c	;volatile
  4691                           
  4692                           ;eusart2.c: 105: eusart2RxTail = 0;
  4693  002214  0E00               	movlw	0
  4694  002216  6E54               	movwf	_eusart2RxTail,c	;volatile
  4695                           
  4696                           ;eusart2.c: 106: eusart2RxCount = 0;
  4697  002218  0E00               	movlw	0
  4698  00221A  6E53               	movwf	_eusart2RxCount,c	;volatile
  4699                           
  4700                           ;eusart2.c: 109: PIE3bits.RC2IE = 1;
  4701  00221C  8AA3               	bsf	4003,5,c	;volatile
  4702  00221E  0012               	return		;funcret
  4703  002220                     __end_of_EUSART2_Initialize:
  4704                           	opt stack 0
  4705                           tblptru	equ	0xFF8
  4706                           tblptrh	equ	0xFF7
  4707                           tblptrl	equ	0xFF6
  4708                           tablat	equ	0xFF5
  4709                           prodh	equ	0xFF4
  4710                           prodl	equ	0xFF3
  4711                           intcon	equ	0xFF2
  4712                           intcon2	equ	0xFF1
  4713                           postinc0	equ	0xFEE
  4714                           wreg	equ	0xFE8
  4715                           indf1	equ	0xFE7
  4716                           postdec1	equ	0xFE5
  4717                           fsr1h	equ	0xFE2
  4718                           fsr1l	equ	0xFE1
  4719                           indf2	equ	0xFDF
  4720                           fsr2h	equ	0xFDA
  4721                           fsr2l	equ	0xFD9
  4722                           status	equ	0xFD8
  4723                           
  4724 ;; *************** function _InitApp *****************
  4725 ;; Defined at:
  4726 ;;		line 159 in file "user.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4740 ;;      Params:         0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    7
  4747 ;; This function calls:
  4748 ;;		_InitPort
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;;		_old_main
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text19
  4756  002456                     __ptext19:
  4757                           	opt stack 0
  4758  002456                     _InitApp:
  4759                           	opt stack 23
  4760                           
  4761                           ;user.c: 162: InitPort();
  4762                           
  4763                           ;incstack = 0
  4764  002456  EC75  F00E         	call	_InitPort	;wreg free
  4765  00245A  0012               	return		;funcret
  4766  00245C                     __end_of_InitApp:
  4767                           	opt stack 0
  4768                           tblptru	equ	0xFF8
  4769                           tblptrh	equ	0xFF7
  4770                           tblptrl	equ	0xFF6
  4771                           tablat	equ	0xFF5
  4772                           prodh	equ	0xFF4
  4773                           prodl	equ	0xFF3
  4774                           intcon	equ	0xFF2
  4775                           intcon2	equ	0xFF1
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           indf1	equ	0xFE7
  4779                           postdec1	equ	0xFE5
  4780                           fsr1h	equ	0xFE2
  4781                           fsr1l	equ	0xFE1
  4782                           indf2	equ	0xFDF
  4783                           fsr2h	equ	0xFDA
  4784                           fsr2l	equ	0xFD9
  4785                           status	equ	0xFD8
  4786                           
  4787 ;; *************** function _InitPort *****************
  4788 ;; Defined at:
  4789 ;;		line 37 in file "user.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4803 ;;      Params:         0       0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    6
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_InitApp
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text20
  4818  001CEA                     __ptext20:
  4819                           	opt stack 0
  4820  001CEA                     _InitPort:
  4821                           	opt stack 23
  4822                           
  4823                           ;user.c: 40: ANSELA=0x00;
  4824                           
  4825                           ;incstack = 0
  4826  001CEA  0E00               	movlw	0
  4827  001CEC  010F               	movlb	15	; () banked
  4828  001CEE  6F38               	movwf	56,b	;volatile
  4829                           
  4830                           ;user.c: 41: PORTA=0x00;
  4831  001CF0  0E00               	movlw	0
  4832  001CF2  6E80               	movwf	3968,c	;volatile
  4833                           
  4834                           ; BSR set to: 15
  4835                           ;user.c: 42: TRISA=0xFF;
  4836  001CF4  6892               	setf	3986,c	;volatile
  4837                           
  4838                           ; BSR set to: 15
  4839                           ;user.c: 43: TRISAbits.TRISA0=1;
  4840  001CF6  8092               	bsf	3986,0,c	;volatile
  4841                           
  4842                           ; BSR set to: 15
  4843                           ;user.c: 44: TRISAbits.TRISA1=1;
  4844  001CF8  8292               	bsf	3986,1,c	;volatile
  4845                           
  4846                           ; BSR set to: 15
  4847                           ;user.c: 45: TRISAbits.TRISA2=0;
  4848  001CFA  9492               	bcf	3986,2,c	;volatile
  4849                           
  4850                           ; BSR set to: 15
  4851                           ;user.c: 46: TRISAbits.TRISA3=0;
  4852  001CFC  9692               	bcf	3986,3,c	;volatile
  4853                           
  4854                           ; BSR set to: 15
  4855                           ;user.c: 47: TRISAbits.TRISA4=0;
  4856  001CFE  9892               	bcf	3986,4,c	;volatile
  4857                           
  4858                           ; BSR set to: 15
  4859                           ;user.c: 48: TRISAbits.TRISA5=0;
  4860  001D00  9A92               	bcf	3986,5,c	;volatile
  4861                           
  4862                           ;user.c: 53: ANSELB=0x00;
  4863  001D02  0E00               	movlw	0
  4864  001D04  010F               	movlb	15	; () banked
  4865  001D06  6F39               	movwf	57,b	;volatile
  4866                           
  4867                           ;user.c: 54: PORTB=0x00;
  4868  001D08  0E00               	movlw	0
  4869  001D0A  6E81               	movwf	3969,c	;volatile
  4870                           
  4871                           ; BSR set to: 15
  4872                           ;user.c: 55: TRISB=0xFF;
  4873  001D0C  6893               	setf	3987,c	;volatile
  4874                           
  4875                           ;user.c: 58: ANSELC=0x00;
  4876  001D0E  0E00               	movlw	0
  4877  001D10  010F               	movlb	15	; () banked
  4878  001D12  6F3A               	movwf	58,b	;volatile
  4879                           
  4880                           ;user.c: 59: PORTC=0x00;
  4881  001D14  0E00               	movlw	0
  4882  001D16  6E82               	movwf	3970,c	;volatile
  4883                           
  4884                           ; BSR set to: 15
  4885                           ;user.c: 60: TRISC=0xFF;
  4886  001D18  6894               	setf	3988,c	;volatile
  4887                           
  4888                           ; BSR set to: 15
  4889                           ;user.c: 61: TRISCbits.TRISC0=0;
  4890  001D1A  9094               	bcf	3988,0,c	;volatile
  4891                           
  4892                           ; BSR set to: 15
  4893                           ;user.c: 62: TRISCbits.TRISC1=0;
  4894  001D1C  9294               	bcf	3988,1,c	;volatile
  4895                           
  4896                           ; BSR set to: 15
  4897                           ;user.c: 63: TRISCbits.TRISC2=0;
  4898  001D1E  9494               	bcf	3988,2,c	;volatile
  4899                           
  4900                           ; BSR set to: 15
  4901                           ;user.c: 64: TRISCbits.TRISC3=0;
  4902  001D20  9694               	bcf	3988,3,c	;volatile
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;user.c: 65: TRISCbits.TRISC4=1;
  4906  001D22  8894               	bsf	3988,4,c	;volatile
  4907                           
  4908                           ; BSR set to: 15
  4909                           ;user.c: 66: TRISCbits.TRISC5=0;
  4910  001D24  9A94               	bcf	3988,5,c	;volatile
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;user.c: 67: TRISCbits.TRISC6=1;
  4914  001D26  8C94               	bsf	3988,6,c	;volatile
  4915                           
  4916                           ; BSR set to: 15
  4917                           ;user.c: 68: TRISCbits.TRISC7=1;
  4918  001D28  8E94               	bsf	3988,7,c	;volatile
  4919                           
  4920                           ;user.c: 71: ANSELD=0x00;
  4921  001D2A  0E00               	movlw	0
  4922  001D2C  010F               	movlb	15	; () banked
  4923  001D2E  6F3B               	movwf	59,b	;volatile
  4924                           
  4925                           ;user.c: 72: PORTD=0x00;
  4926  001D30  0E00               	movlw	0
  4927  001D32  6E83               	movwf	3971,c	;volatile
  4928                           
  4929                           ; BSR set to: 15
  4930                           ;user.c: 73: TRISD=0xFF;
  4931  001D34  6895               	setf	3989,c	;volatile
  4932                           
  4933                           ;user.c: 74: LATE=0x00;
  4934  001D36  0E00               	movlw	0
  4935  001D38  6E8D               	movwf	3981,c	;volatile
  4936                           
  4937                           ; BSR set to: 15
  4938                           ;user.c: 75: TRISDbits.TRISD0=0;
  4939  001D3A  9095               	bcf	3989,0,c	;volatile
  4940                           
  4941                           ; BSR set to: 15
  4942                           ;user.c: 76: TRISDbits.TRISD1=0;
  4943  001D3C  9295               	bcf	3989,1,c	;volatile
  4944                           
  4945                           ; BSR set to: 15
  4946                           ;user.c: 77: TRISDbits.TRISD2=0;
  4947  001D3E  9495               	bcf	3989,2,c	;volatile
  4948                           
  4949                           ; BSR set to: 15
  4950                           ;user.c: 78: TRISDbits.TRISD3=0;
  4951  001D40  9695               	bcf	3989,3,c	;volatile
  4952                           
  4953                           ; BSR set to: 15
  4954                           ;user.c: 79: TRISDbits.TRISD4=0;
  4955  001D42  9895               	bcf	3989,4,c	;volatile
  4956                           
  4957                           ; BSR set to: 15
  4958                           ;user.c: 80: TRISDbits.TRISD5=0;
  4959  001D44  9A95               	bcf	3989,5,c	;volatile
  4960                           
  4961                           ; BSR set to: 15
  4962                           ;user.c: 81: TRISDbits.TRISD6=0;
  4963  001D46  9C95               	bcf	3989,6,c	;volatile
  4964                           
  4965                           ; BSR set to: 15
  4966                           ;user.c: 82: TRISDbits.TRISD7=1;
  4967  001D48  8E95               	bsf	3989,7,c	;volatile
  4968                           
  4969                           ;user.c: 85: ANSELE=0x00;
  4970  001D4A  0E00               	movlw	0
  4971  001D4C  010F               	movlb	15	; () banked
  4972  001D4E  6F3C               	movwf	60,b	;volatile
  4973                           
  4974                           ;user.c: 86: PORTE=0x00;
  4975  001D50  0E00               	movlw	0
  4976  001D52  6E84               	movwf	3972,c	;volatile
  4977                           
  4978                           ; BSR set to: 15
  4979                           ;user.c: 87: TRISE=0xFF;
  4980  001D54  6896               	setf	3990,c	;volatile
  4981                           
  4982                           ; BSR set to: 15
  4983                           ;user.c: 88: TRISEbits.TRISE0=0;
  4984  001D56  9096               	bcf	3990,0,c	;volatile
  4985                           
  4986                           ; BSR set to: 15
  4987                           ;user.c: 89: TRISEbits.TRISE1=0;
  4988  001D58  9296               	bcf	3990,1,c	;volatile
  4989                           
  4990                           ; BSR set to: 15
  4991                           ;user.c: 90: TRISEbits.TRISE2=0;
  4992  001D5A  9496               	bcf	3990,2,c	;volatile
  4993                           
  4994                           ; BSR set to: 15
  4995  001D5C  0012               	return		;funcret
  4996  001D5E                     __end_of_InitPort:
  4997                           	opt stack 0
  4998                           tblptru	equ	0xFF8
  4999                           tblptrh	equ	0xFF7
  5000                           tblptrl	equ	0xFF6
  5001                           tablat	equ	0xFF5
  5002                           prodh	equ	0xFF4
  5003                           prodl	equ	0xFF3
  5004                           intcon	equ	0xFF2
  5005                           intcon2	equ	0xFF1
  5006                           postinc0	equ	0xFEE
  5007                           wreg	equ	0xFE8
  5008                           indf1	equ	0xFE7
  5009                           postdec1	equ	0xFE5
  5010                           fsr1h	equ	0xFE2
  5011                           fsr1l	equ	0xFE1
  5012                           indf2	equ	0xFDF
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017 ;; *************** function _INTERRUPT_InterruptManager *****************
  5018 ;; Defined at:
  5019 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;		None
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5033 ;;      Params:         0       0       0       0       0       0       0
  5034 ;;      Locals:         0       0       0       0       0       0       0
  5035 ;;      Temps:         18       0       0       0       0       0       0
  5036 ;;      Totals:        18       0       0       0       0       0       0
  5037 ;;Total ram usage:       18 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    5
  5040 ;; This function calls:
  5041 ;;		_EUSART2_Transmit_ISR
  5042 ;;		_TMR0_ISR
  5043 ;;		_TMR2_ISR
  5044 ;;		_uart_receiv_isr
  5045 ;; This function is called by:
  5046 ;;		Interrupt level 2
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	intcode
  5051  000008                     __pintcode:
  5052                           	opt stack 0
  5053  000008                     _INTERRUPT_InterruptManager:
  5054                           	opt stack 22
  5055                           
  5056                           ; BSR set to: 15
  5057                           ;incstack = 0
  5058  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5059  00000A  CFFA F03D          	movff	pclath,??_INTERRUPT_InterruptManager
  5060  00000E  CFFB F03E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5061  000012  CFE9 F03F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  5062  000016  CFEA F040          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  5063  00001A  CFE1 F041          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  5064  00001E  CFE2 F042          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  5065  000022  CFD9 F043          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  5066  000026  CFDA F044          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  5067  00002A  CFF3 F045          	movff	prodl,??_INTERRUPT_InterruptManager+8
  5068  00002E  CFF4 F046          	movff	prodh,??_INTERRUPT_InterruptManager+9
  5069  000032  CFF6 F047          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  5070  000036  CFF7 F048          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  5071  00003A  CFF8 F049          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  5072  00003E  CFF5 F04A          	movff	tablat,??_INTERRUPT_InterruptManager+13
  5073  000042  C05F  F04B         	movff	btemp,??_INTERRUPT_InterruptManager+14
  5074  000046  C060  F04C         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  5075  00004A  C061  F04D         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  5076  00004E  C062  F04E         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  5077                           
  5078                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5079  000052  BAF2               	btfsc	intcon,5,c	;volatile
  5080  000054  A4F2               	btfss	intcon,2,c	;volatile
  5081  000056  D003               	goto	i2l702
  5082                           
  5083                           ;interrupt_manager.c: 62: {
  5084                           ;interrupt_manager.c: 63: TMR0_ISR();
  5085  000058  EC08  F012         	call	_TMR0_ISR	;wreg free
  5086                           
  5087                           ;interrupt_manager.c: 64: }
  5088  00005C  D017               	goto	i2l708
  5089  00005E                     i2l702:
  5090                           
  5091                           ;interrupt_manager.c: 65: else if(INTCONbits.PEIE == 1 && PIE3bits.TX2IE == 1 && PIR3bit
      +                          s.TX2IF == 1)
  5092  00005E  BCF2               	btfsc	intcon,6,c	;volatile
  5093  000060  A8A3               	btfss	4003,4,c	;volatile
  5094  000062  D005               	goto	i2l704
  5095  000064  A8A4               	btfss	4004,4,c	;volatile
  5096  000066  D003               	goto	i2l704
  5097                           
  5098                           ;interrupt_manager.c: 66: {
  5099                           ;interrupt_manager.c: 67: EUSART2_Transmit_ISR();
  5100  000068  EC10  F011         	call	_EUSART2_Transmit_ISR	;wreg free
  5101                           
  5102                           ;interrupt_manager.c: 69: }
  5103  00006C  D00F               	goto	i2l708
  5104  00006E                     i2l704:
  5105                           
  5106                           ;interrupt_manager.c: 70: else if(INTCONbits.PEIE == 1 && PIE3bits.RC2IE == 1 && PIR3bit
      +                          s.RC2IF == 1)
  5107  00006E  BCF2               	btfsc	intcon,6,c	;volatile
  5108  000070  AAA3               	btfss	4003,5,c	;volatile
  5109  000072  D006               	goto	i2l706
  5110  000074  AAA4               	btfss	4004,5,c	;volatile
  5111  000076  D004               	goto	i2l706
  5112                           
  5113                           ;interrupt_manager.c: 71: {
  5114                           ;interrupt_manager.c: 74: PIR3bits.RC2IF =0;
  5115  000078  9AA4               	bcf	4004,5,c	;volatile
  5116                           
  5117                           ;interrupt_manager.c: 75: uart_receiv_isr();
  5118  00007A  ECD7  F003         	call	_uart_receiv_isr	;wreg free
  5119                           
  5120                           ;interrupt_manager.c: 76: }
  5121  00007E  D006               	goto	i2l708
  5122  000080                     i2l706:
  5123                           
  5124                           ;interrupt_manager.c: 77: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  5125  000080  BCF2               	btfsc	intcon,6,c	;volatile
  5126  000082  A29D               	btfss	3997,1,c	;volatile
  5127  000084  D003               	goto	i2l708
  5128  000086  B29E               	btfsc	3998,1,c	;volatile
  5129                           
  5130                           ;interrupt_manager.c: 78: {
  5131                           ;interrupt_manager.c: 79: TMR2_ISR();
  5132  000088  EC9D  F011         	call	_TMR2_ISR	;wreg free
  5133  00008C                     i2l708:
  5134                           
  5135                           ;interrupt_manager.c: 81: else
  5136                           ;interrupt_manager.c: 82: {
  5137  00008C  C04E  F062         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  5138  000090  C04D  F061         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  5139  000094  C04C  F060         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  5140  000098  C04B  F05F         	movff	??_INTERRUPT_InterruptManager+14,btemp
  5141  00009C  C04A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  5142  0000A0  C049  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  5143  0000A4  C048  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  5144  0000A8  C047  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  5145  0000AC  C046  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  5146  0000B0  C045  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  5147  0000B4  C044  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  5148  0000B8  C043  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  5149  0000BC  C042  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  5150  0000C0  C041  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  5151  0000C4  C040  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  5152  0000C8  C03F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  5153  0000CC  C03E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5154  0000D0  C03D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5155  0000D4  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5156  0000D6  0011               	retfie		f
  5157  0000D8                     __end_of_INTERRUPT_InterruptManager:
  5158                           	opt stack 0
  5159                           pclatu	equ	0xFFB
  5160                           pclath	equ	0xFFA
  5161                           tblptru	equ	0xFF8
  5162                           tblptrh	equ	0xFF7
  5163                           tblptrl	equ	0xFF6
  5164                           tablat	equ	0xFF5
  5165                           prodh	equ	0xFF4
  5166                           prodl	equ	0xFF3
  5167                           intcon	equ	0xFF2
  5168                           intcon2	equ	0xFF1
  5169                           postinc0	equ	0xFEE
  5170                           fsr0h	equ	0xFEA
  5171                           fsr0l	equ	0xFE9
  5172                           wreg	equ	0xFE8
  5173                           indf1	equ	0xFE7
  5174                           postdec1	equ	0xFE5
  5175                           fsr1h	equ	0xFE2
  5176                           fsr1l	equ	0xFE1
  5177                           indf2	equ	0xFDF
  5178                           fsr2h	equ	0xFDA
  5179                           fsr2l	equ	0xFD9
  5180                           status	equ	0xFD8
  5181                           
  5182 ;; *************** function _uart_receiv_isr *****************
  5183 ;; Defined at:
  5184 ;;		line 15 in file "uart_isr.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;		None
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  number          4   73[BANK0 ] long 
  5189 ;;  aa              2   67[BANK0 ] PTR unsigned char 
  5190 ;;  text           40   20[BANK0 ] unsigned char [40]
  5191 ;;  aa              4   69[BANK0 ] long 
  5192 ;;  emty_buff      20    0[BANK0 ] const unsigned char [20]
  5193 ;;  BEFEHL_SET_G    3   63[BANK0 ] unsigned char [3]
  5194 ;;  BEFEHL_SET_W    3   60[BANK0 ] unsigned char [3]
  5195 ;;  buff            2   81[BANK0 ] int 
  5196 ;;  buff_ended      2   79[BANK0 ] int 
  5197 ;;  ETX             1   78[BANK0 ] const unsigned char 
  5198 ;;  STX             1   77[BANK0 ] const unsigned char 
  5199 ;;  SEPERATOR       1   66[BANK0 ] const unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5209 ;;      Params:         0       0       0       0       0       0       0
  5210 ;;      Locals:         0      83       0       0       0       0       0
  5211 ;;      Temps:          8       0       0       0       0       0       0
  5212 ;;      Totals:         8      83       0       0       0       0       0
  5213 ;;Total ram usage:       91 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    4
  5216 ;; This function calls:
  5217 ;;		_asctime
  5218 ;;		_getTimeStemp
  5219 ;;		_localtime
  5220 ;;		_memset
  5221 ;;		_setTimeStemp
  5222 ;;		_sprintf
  5223 ;;		_strncmp
  5224 ;;		_strtol
  5225 ;;		i2_putUartStrings
  5226 ;; This function is called by:
  5227 ;;		_INTERRUPT_InterruptManager
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text22
  5232  0007AE                     __ptext22:
  5233                           	opt stack 0
  5234  0007AE                     _uart_receiv_isr:
  5235                           	opt stack 22
  5236                           
  5237                           ;uart_isr.c: 22: const char emty_buff[20]={0};
  5238                           
  5239                           ;incstack = 0
  5240  0007AE  0EEF               	movlw	low uart_receiv_isr@F7286
  5241  0007B0  6EF6               	movwf	tblptrl,c
  5242  0007B2                     	if	1	;There is more than 1 active tblptr byte
  5243  0007B2  0E7E               	movlw	high uart_receiv_isr@F7286
  5244  0007B4  6EF7               	movwf	tblptrh,c
  5245  0007B6                     	endif
  5246  0007B6                     	if	0	;There are less than 3 active tblptr bytes
  5247  0007B6                     	endif
  5248  0007B6  EE20  F060         	lfsr	2,uart_receiv_isr@emty_buff
  5249  0007BA  0E13               	movlw	19
  5250  0007BC                     i2u535_40:
  5251  0007BC  0009               	tblrd		*+
  5252  0007BE  CFF5 FFDE          	movff	tablat,postinc2
  5253  0007C2  06E8               	decf	wreg,f,c
  5254  0007C4  E2FB               	bc	i2u535_40
  5255                           
  5256                           ;uart_isr.c: 23: static char in_buff[20]={0};
  5257                           ;uart_isr.c: 24: static int len=0;
  5258                           ;uart_isr.c: 25: static int buff_len=0;
  5259                           ;uart_isr.c: 27: int buff_ended=0;
  5260  0007C6  0E00               	movlw	0
  5261  0007C8  0100               	movlb	0	; () banked
  5262  0007CA  6FB0               	movwf	(uart_receiv_isr@buff_ended+1)& (0+255),b
  5263  0007CC  0E00               	movlw	0
  5264  0007CE  6FAF               	movwf	uart_receiv_isr@buff_ended& (0+255),b
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;uart_isr.c: 28: int buff=RCREG2;
  5268  0007D0  CF74 F0B1          	movff	3956,uart_receiv_isr@buff	;volatile
  5269  0007D4  0100               	movlb	0	; () banked
  5270  0007D6  6BB2               	clrf	(uart_receiv_isr@buff+1)& (0+255),b
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;uart_isr.c: 30: const char STX='!';
  5274  0007D8  0E21               	movlw	33
  5275  0007DA  0100               	movlb	0	; () banked
  5276  0007DC  6FAD               	movwf	uart_receiv_isr@STX& (0+255),b
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;uart_isr.c: 31: const char ETX='_';
  5280  0007DE  0E5F               	movlw	95
  5281  0007E0  0100               	movlb	0	; () banked
  5282  0007E2  6FAE               	movwf	uart_receiv_isr@ETX& (0+255),b
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;uart_isr.c: 32: const char SEPERATOR='~';
  5286  0007E4  0E7E               	movlw	126
  5287  0007E6  0100               	movlb	0	; () banked
  5288  0007E8  6FA2               	movwf	uart_receiv_isr@SEPERATOR& (0+255),b
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;uart_isr.c: 34: char BEFEHL_SET_WHITE[] ={'S','T','W'};
  5292  0007EA  C0F8  F09C         	movff	uart_receiv_isr@F7296,uart_receiv_isr@BEFEHL_SET_WHITE
  5293  0007EE  C0F9  F09D         	movff	uart_receiv_isr@F7296+1,uart_receiv_isr@BEFEHL_SET_WHITE+1
  5294  0007F2  C0FA  F09E         	movff	uart_receiv_isr@F7296+2,uart_receiv_isr@BEFEHL_SET_WHITE+2
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;uart_isr.c: 35: char BEFEHL_SET_GREEN[] ={'S','T','G'};
  5298  0007F6  C0F5  F09F         	movff	uart_receiv_isr@F7298,uart_receiv_isr@BEFEHL_SET_GREEN
  5299  0007FA  C0F6  F0A0         	movff	uart_receiv_isr@F7298+1,uart_receiv_isr@BEFEHL_SET_GREEN+1
  5300  0007FE  C0F7  F0A1         	movff	uart_receiv_isr@F7298+2,uart_receiv_isr@BEFEHL_SET_GREEN+2
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;uart_isr.c: 50: if(buff==STX)
  5304  000802  0100               	movlb	0	; () banked
  5305  000804  51AD               	movf	uart_receiv_isr@STX& (0+255),w,b
  5306  000806  6E35               	movwf	??_uart_receiv_isr& (0+255),c
  5307  000808  6A36               	clrf	(??_uart_receiv_isr+1)& (0+255),c
  5308  00080A  0100               	movlb	0	; () banked
  5309  00080C  51B1               	movf	uart_receiv_isr@buff& (0+255),w,b
  5310  00080E  1835               	xorwf	??_uart_receiv_isr,w,c
  5311  000810  E11A               	bnz	i2l4766
  5312  000812  0100               	movlb	0	; () banked
  5313  000814  51B2               	movf	(uart_receiv_isr@buff+1)& (0+255),w,b
  5314  000816  1836               	xorwf	??_uart_receiv_isr+1,w,c
  5315  000818  A4D8               	btfss	status,2,c
  5316  00081A  D015               	goto	i2l599
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;uart_isr.c: 51: {
  5320                           ;uart_isr.c: 54: memset(in_buff,0,sizeof(in_buff));
  5321  00081C  0ECF               	movlw	low uart_receiv_isr@in_buff
  5322  00081E  6E01               	movwf	memset@p1,c
  5323  000820  0E00               	movlw	high uart_receiv_isr@in_buff
  5324  000822  6E02               	movwf	memset@p1+1,c
  5325  000824  0E00               	movlw	0
  5326  000826  6E04               	movwf	memset@c+1,c
  5327  000828  0E00               	movlw	0
  5328  00082A  6E03               	movwf	memset@c,c
  5329  00082C  0E00               	movlw	0
  5330  00082E  6E06               	movwf	memset@n+1,c
  5331  000830  0E14               	movlw	20
  5332  000832  6E05               	movwf	memset@n,c
  5333  000834  EC27  F011         	call	_memset	;wreg free
  5334                           
  5335                           ;uart_isr.c: 55: in_buff[0]=buff;
  5336  000838  C0B1  F0CF         	movff	uart_receiv_isr@buff,uart_receiv_isr@in_buff
  5337                           
  5338                           ;uart_isr.c: 56: len=1;
  5339  00083C  0E00               	movlw	0
  5340  00083E  0100               	movlb	0	; () banked
  5341  000840  6FCE               	movwf	(uart_receiv_isr@len+1)& (0+255),b
  5342  000842  0E01               	movlw	1
  5343  000844  D061               	goto	L1
  5344  000846                     i2l599:
  5345  000846                     i2l4766:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;uart_isr.c: 58: else if(buff==ETX)
  5349  000846  0100               	movlb	0	; () banked
  5350  000848  51AE               	movf	uart_receiv_isr@ETX& (0+255),w,b
  5351  00084A  6E35               	movwf	??_uart_receiv_isr& (0+255),c
  5352  00084C  6A36               	clrf	(??_uart_receiv_isr+1)& (0+255),c
  5353  00084E  0100               	movlb	0	; () banked
  5354  000850  51B1               	movf	uart_receiv_isr@buff& (0+255),w,b
  5355  000852  1835               	xorwf	??_uart_receiv_isr,w,c
  5356  000854  E12E               	bnz	i2l4776
  5357  000856  0100               	movlb	0	; () banked
  5358  000858  51B2               	movf	(uart_receiv_isr@buff+1)& (0+255),w,b
  5359  00085A  1836               	xorwf	??_uart_receiv_isr+1,w,c
  5360  00085C  A4D8               	btfss	status,2,c
  5361  00085E  D029               	goto	i2l601
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;uart_isr.c: 59: {
  5365                           ;uart_isr.c: 60: in_buff[len]=buff;
  5366  000860  0ECF               	movlw	low uart_receiv_isr@in_buff
  5367  000862  0100               	movlb	0	; () banked
  5368  000864  25CD               	addwf	uart_receiv_isr@len& (0+255),w,b
  5369  000866  6ED9               	movwf	fsr2l,c
  5370  000868  0E00               	movlw	high uart_receiv_isr@in_buff
  5371  00086A  0100               	movlb	0	; () banked
  5372  00086C  21CE               	addwfc	(uart_receiv_isr@len+1)& (0+255),w,b
  5373  00086E  6EDA               	movwf	fsr2h,c
  5374  000870  C0B1  FFDF         	movff	uart_receiv_isr@buff,indf2
  5375                           
  5376                           ;uart_isr.c: 61: in_buff[len+1]='\0';
  5377  000874  0E01               	movlw	1
  5378  000876  0100               	movlb	0	; () banked
  5379  000878  25CD               	addwf	uart_receiv_isr@len& (0+255),w,b
  5380  00087A  6E35               	movwf	??_uart_receiv_isr& (0+255),c
  5381  00087C  0E00               	movlw	0
  5382  00087E  0100               	movlb	0	; () banked
  5383  000880  21CE               	addwfc	(uart_receiv_isr@len+1)& (0+255),w,b
  5384  000882  6E36               	movwf	(??_uart_receiv_isr+1)& (0+255),c
  5385  000884  0ECF               	movlw	low uart_receiv_isr@in_buff
  5386  000886  2435               	addwf	??_uart_receiv_isr,w,c
  5387  000888  6ED9               	movwf	fsr2l,c
  5388  00088A  0E00               	movlw	high uart_receiv_isr@in_buff
  5389  00088C  2036               	addwfc	??_uart_receiv_isr+1,w,c
  5390  00088E  6EDA               	movwf	fsr2h,c
  5391  000890  0E00               	movlw	0
  5392  000892  6EDF               	movwf	indf2,c
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;uart_isr.c: 62: buff_len=len;
  5396  000894  C0CD  F0CB         	movff	uart_receiv_isr@len,uart_receiv_isr@buff_len
  5397  000898  C0CE  F0CC         	movff	uart_receiv_isr@len+1,uart_receiv_isr@buff_len+1
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;uart_isr.c: 63: len=0;
  5401  00089C  0E00               	movlw	0
  5402  00089E  0100               	movlb	0	; () banked
  5403  0008A0  6FCE               	movwf	(uart_receiv_isr@len+1)& (0+255),b
  5404  0008A2  0E00               	movlw	0
  5405  0008A4  6FCD               	movwf	uart_receiv_isr@len& (0+255),b
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;uart_isr.c: 64: buff_ended=1;
  5409  0008A6  0E00               	movlw	0
  5410  0008A8  0100               	movlb	0	; () banked
  5411  0008AA  6FB0               	movwf	(uart_receiv_isr@buff_ended+1)& (0+255),b
  5412  0008AC  0E01               	movlw	1
  5413  0008AE  6FAF               	movwf	uart_receiv_isr@buff_ended& (0+255),b
  5414                           
  5415                           ;uart_isr.c: 66: }
  5416  0008B0  D02C               	goto	i2l604
  5417  0008B2                     i2l601:
  5418  0008B2                     i2l4776:
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;uart_isr.c: 67: else if(len>=1,len<20)
  5422  0008B2  0100               	movlb	0	; () banked
  5423  0008B4  BFCE               	btfsc	(uart_receiv_isr@len+1)& (0+255),7,b
  5424  0008B6  D008               	goto	i2u538_40
  5425  0008B8  0100               	movlb	0	; () banked
  5426  0008BA  51CE               	movf	(uart_receiv_isr@len+1)& (0+255),w,b
  5427  0008BC  E113               	bnz	i2l4782
  5428  0008BE  0E14               	movlw	20
  5429  0008C0  0100               	movlb	0	; () banked
  5430  0008C2  5DCD               	subwf	uart_receiv_isr@len& (0+255),w,b
  5431  0008C4  B0D8               	btfsc	status,0,c
  5432  0008C6  D00E               	goto	i2l603
  5433  0008C8                     i2u538_40:
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;uart_isr.c: 68: {
  5437                           ;uart_isr.c: 69: in_buff[len]=buff;
  5438  0008C8  0ECF               	movlw	low uart_receiv_isr@in_buff
  5439  0008CA  0100               	movlb	0	; () banked
  5440  0008CC  25CD               	addwf	uart_receiv_isr@len& (0+255),w,b
  5441  0008CE  6ED9               	movwf	fsr2l,c
  5442  0008D0  0E00               	movlw	high uart_receiv_isr@in_buff
  5443  0008D2  0100               	movlb	0	; () banked
  5444  0008D4  21CE               	addwfc	(uart_receiv_isr@len+1)& (0+255),w,b
  5445  0008D6  6EDA               	movwf	fsr2h,c
  5446  0008D8  C0B1  FFDF         	movff	uart_receiv_isr@buff,indf2
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;uart_isr.c: 70: len++;
  5450  0008DC  0100               	movlb	0	; () banked
  5451  0008DE  4BCD               	infsnz	uart_receiv_isr@len& (0+255),f,b
  5452  0008E0  2BCE               	incf	(uart_receiv_isr@len+1)& (0+255),f,b
  5453                           
  5454                           ;uart_isr.c: 71: }
  5455  0008E2  D013               	goto	i2l604
  5456  0008E4                     i2l603:
  5457  0008E4                     i2l4782:
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;uart_isr.c: 72: else
  5461                           ;uart_isr.c: 73: {
  5462                           ;uart_isr.c: 74: memset(in_buff,0,sizeof(in_buff));
  5463  0008E4  0ECF               	movlw	low uart_receiv_isr@in_buff
  5464  0008E6  6E01               	movwf	memset@p1,c
  5465  0008E8  0E00               	movlw	high uart_receiv_isr@in_buff
  5466  0008EA  6E02               	movwf	memset@p1+1,c
  5467  0008EC  0E00               	movlw	0
  5468  0008EE  6E04               	movwf	memset@c+1,c
  5469  0008F0  0E00               	movlw	0
  5470  0008F2  6E03               	movwf	memset@c,c
  5471  0008F4  0E00               	movlw	0
  5472  0008F6  6E06               	movwf	memset@n+1,c
  5473  0008F8  0E14               	movlw	20
  5474  0008FA  6E05               	movwf	memset@n,c
  5475  0008FC  EC27  F011         	call	_memset	;wreg free
  5476                           
  5477                           ;uart_isr.c: 75: len=0;
  5478  000900  0E00               	movlw	0
  5479  000902  0100               	movlb	0	; () banked
  5480  000904  6FCE               	movwf	(uart_receiv_isr@len+1)& (0+255),b
  5481  000906  0E00               	movlw	0
  5482  000908                     L1:
  5483  000908  6FCD               	movwf	uart_receiv_isr@len& (0+255),b
  5484  00090A                     i2l604:
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;uart_isr.c: 77: }
  5488                           ;uart_isr.c: 81: if(buff_ended==1)
  5489                           
  5490                           ; BSR set to: 0
  5491                           
  5492                           ; BSR set to: 0
  5493                           
  5494                           ; BSR set to: 0
  5495  00090A  0100               	movlb	0	; () banked
  5496  00090C  05AF               	decf	uart_receiv_isr@buff_ended& (0+255),w,b
  5497  00090E  0100               	movlb	0	; () banked
  5498  000910  11B0               	iorwf	(uart_receiv_isr@buff_ended+1)& (0+255),w,b
  5499  000912  A4D8               	btfss	status,2,c
  5500  000914  D193               	goto	i2l629
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;uart_isr.c: 82: {
  5504                           ;uart_isr.c: 83: buff_ended=0;
  5505  000916  0E00               	movlw	0
  5506  000918  0100               	movlb	0	; () banked
  5507  00091A  6FB0               	movwf	(uart_receiv_isr@buff_ended+1)& (0+255),b
  5508  00091C  0E00               	movlw	0
  5509  00091E  6FAF               	movwf	uart_receiv_isr@buff_ended& (0+255),b
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;uart_isr.c: 85: if(0==strncmp("!STR~",in_buff,4))
  5513  000920  0EE2               	movlw	low STR_26
  5514  000922  6E01               	movwf	strncmp@s1,c
  5515  000924  0E7F               	movlw	high STR_26
  5516  000926  6E02               	movwf	strncmp@s1+1,c
  5517  000928  0ECF               	movlw	low uart_receiv_isr@in_buff
  5518  00092A  6E03               	movwf	strncmp@s2,c
  5519  00092C  0E00               	movlw	high uart_receiv_isr@in_buff
  5520  00092E  6E04               	movwf	strncmp@s2+1,c
  5521  000930  0E00               	movlw	0
  5522  000932  6E06               	movwf	strncmp@len+1,c
  5523  000934  0E04               	movlw	4
  5524  000936  6E05               	movwf	strncmp@len,c
  5525  000938  ECBA  F00D         	call	_strncmp	;wreg free
  5526  00093C  5001               	movf	?_strncmp,w,c
  5527  00093E  1002               	iorwf	?_strncmp+1,w,c
  5528  000940  A4D8               	btfss	status,2,c
  5529  000942  D068               	goto	i2l606
  5530                           
  5531                           ;uart_isr.c: 86: {
  5532                           ;uart_isr.c: 88: if(buff_len>=(8-1))
  5533  000944  0100               	movlb	0	; () banked
  5534  000946  BFCC               	btfsc	(uart_receiv_isr@buff_len+1)& (0+255),7,b
  5535  000948  D179               	goto	i2l629
  5536  00094A  0100               	movlb	0	; () banked
  5537  00094C  51CC               	movf	(uart_receiv_isr@buff_len+1)& (0+255),w,b
  5538  00094E  E105               	bnz	i2u541_40
  5539  000950  0E07               	movlw	7
  5540  000952  0100               	movlb	0	; () banked
  5541  000954  5DCB               	subwf	uart_receiv_isr@buff_len& (0+255),w,b
  5542  000956  A0D8               	btfss	status,0,c
  5543  000958  D171               	goto	i2l629
  5544  00095A                     i2u541_40:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;uart_isr.c: 89: {
  5548                           ;uart_isr.c: 94: if(in_buff[5]>='0'&&in_buff[5]<='7')
  5549  00095A  0E2F               	movlw	47
  5550  00095C  0100               	movlb	0	; () banked
  5551  00095E  65D4               	cpfsgt	(uart_receiv_isr@in_buff+5)& (0+255),b
  5552  000960  D16D               	goto	i2l629
  5553                           
  5554                           ; BSR set to: 0
  5555  000962  0E38               	movlw	56
  5556  000964  0100               	movlb	0	; () banked
  5557  000966  61D4               	cpfslt	(uart_receiv_isr@in_buff+5)& (0+255),b
  5558  000968  D169               	goto	i2l629
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;uart_isr.c: 95: {
  5562                           ;uart_isr.c: 97: if(in_buff[6]=='1'||in_buff[6]=='0')
  5563  00096A  0E31               	movlw	49
  5564  00096C  0100               	movlb	0	; () banked
  5565  00096E  19D5               	xorwf	(uart_receiv_isr@in_buff+6)& (0+255),w,b
  5566  000970  B4D8               	btfsc	status,2,c
  5567  000972  D005               	goto	i2u545_40
  5568                           
  5569                           ; BSR set to: 0
  5570  000974  0E30               	movlw	48
  5571  000976  0100               	movlb	0	; () banked
  5572  000978  19D5               	xorwf	(uart_receiv_isr@in_buff+6)& (0+255),w,b
  5573  00097A  A4D8               	btfss	status,2,c
  5574  00097C  D15F               	goto	i2l629
  5575  00097E                     i2u545_40:
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;uart_isr.c: 98: {
  5579                           ;uart_isr.c: 99: LATEbits.LATE1= !LATEbits.LATE1;
  5580                           
  5581                           ; BSR set to: 0
  5582  00097E  B28D               	btfsc	3981,1,c	;volatile
  5583  000980  D003               	goto	i2u546_40
  5584  000982  6A35               	clrf	??_uart_receiv_isr& (0+255),c
  5585  000984  2A35               	incf	??_uart_receiv_isr& (0+255),f,c
  5586  000986  D001               	goto	i2u547_48
  5587  000988                     i2u546_40:
  5588  000988  6A35               	clrf	??_uart_receiv_isr& (0+255),c
  5589  00098A                     i2u547_48:
  5590  00098A  4635               	rlncf	??_uart_receiv_isr,f,c
  5591  00098C  508D               	movf	3981,w,c	;volatile
  5592  00098E  1835               	xorwf	??_uart_receiv_isr,w,c
  5593  000990  0BFD               	andlw	-3
  5594  000992  1835               	xorwf	??_uart_receiv_isr,w,c
  5595  000994  6E8D               	movwf	3981,c	;volatile
  5596                           
  5597                           ;uart_isr.c: 100: netBufferGlobal[in_buff[5]-'0']=in_buff[6]-'0';
  5598  000996  0ED0               	movlw	208
  5599  000998  6E35               	movwf	??_uart_receiv_isr& (0+255),c
  5600  00099A  0EFF               	movlw	255
  5601  00099C  6E36               	movwf	(??_uart_receiv_isr+1)& (0+255),c
  5602  00099E  0100               	movlb	0	; () banked
  5603  0009A0  51D5               	movf	(uart_receiv_isr@in_buff+6)& (0+255),w,b
  5604  0009A2  6E37               	movwf	(??_uart_receiv_isr+2)& (0+255),c
  5605  0009A4  6A38               	clrf	(??_uart_receiv_isr+3)& (0+255),c
  5606  0009A6  5035               	movf	??_uart_receiv_isr,w,c
  5607  0009A8  2637               	addwf	??_uart_receiv_isr+2,f,c
  5608  0009AA  5036               	movf	??_uart_receiv_isr+1,w,c
  5609  0009AC  2238               	addwfc	??_uart_receiv_isr+3,f,c
  5610  0009AE  0EA0               	movlw	160
  5611  0009B0  6E39               	movwf	(??_uart_receiv_isr+4)& (0+255),c
  5612  0009B2  0EFF               	movlw	255
  5613  0009B4  6E3A               	movwf	(??_uart_receiv_isr+5)& (0+255),c
  5614  0009B6  0100               	movlb	0	; () banked
  5615  0009B8  51D4               	movf	(uart_receiv_isr@in_buff+5)& (0+255),w,b
  5616  0009BA  6E3B               	movwf	(??_uart_receiv_isr+6)& (0+255),c
  5617  0009BC  6A3C               	clrf	(??_uart_receiv_isr+7)& (0+255),c
  5618  0009BE  90D8               	bcf	status,0,c
  5619  0009C0  363B               	rlcf	??_uart_receiv_isr+6,f,c
  5620  0009C2  363C               	rlcf	??_uart_receiv_isr+7,f,c
  5621  0009C4  5039               	movf	??_uart_receiv_isr+4,w,c
  5622  0009C6  263B               	addwf	??_uart_receiv_isr+6,f,c
  5623  0009C8  503A               	movf	??_uart_receiv_isr+5,w,c
  5624  0009CA  223C               	addwfc	??_uart_receiv_isr+7,f,c
  5625  0009CC  0EA4               	movlw	low _netBufferGlobal
  5626  0009CE  243B               	addwf	??_uart_receiv_isr+6,w,c
  5627  0009D0  6ED9               	movwf	fsr2l,c
  5628  0009D2  0E01               	movlw	high _netBufferGlobal
  5629  0009D4  203C               	addwfc	??_uart_receiv_isr+7,w,c
  5630  0009D6  6EDA               	movwf	fsr2h,c
  5631  0009D8  C037  FFDE         	movff	??_uart_receiv_isr+2,postinc2
  5632  0009DC  C038  FFDD         	movff	??_uart_receiv_isr+3,postdec2
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;uart_isr.c: 101: netBufferGlobal_new[in_buff[5]-'0']=1;
  5636  0009E0  0EA0               	movlw	160
  5637  0009E2  6E35               	movwf	??_uart_receiv_isr& (0+255),c
  5638  0009E4  0EFF               	movlw	255
  5639  0009E6  6E36               	movwf	(??_uart_receiv_isr+1)& (0+255),c
  5640  0009E8  0100               	movlb	0	; () banked
  5641  0009EA  51D4               	movf	(uart_receiv_isr@in_buff+5)& (0+255),w,b
  5642  0009EC  6E37               	movwf	(??_uart_receiv_isr+2)& (0+255),c
  5643  0009EE  6A38               	clrf	(??_uart_receiv_isr+3)& (0+255),c
  5644  0009F0  90D8               	bcf	status,0,c
  5645  0009F2  3637               	rlcf	??_uart_receiv_isr+2,f,c
  5646  0009F4  3638               	rlcf	??_uart_receiv_isr+3,f,c
  5647  0009F6  5035               	movf	??_uart_receiv_isr,w,c
  5648  0009F8  2637               	addwf	??_uart_receiv_isr+2,f,c
  5649  0009FA  5036               	movf	??_uart_receiv_isr+1,w,c
  5650  0009FC  2238               	addwfc	??_uart_receiv_isr+3,f,c
  5651  0009FE  0E90               	movlw	low _netBufferGlobal_new
  5652  000A00  2437               	addwf	??_uart_receiv_isr+2,w,c
  5653  000A02  6ED9               	movwf	fsr2l,c
  5654  000A04  0E01               	movlw	high _netBufferGlobal_new
  5655  000A06  2038               	addwfc	??_uart_receiv_isr+3,w,c
  5656  000A08  6EDA               	movwf	fsr2h,c
  5657  000A0A  0E01               	movlw	1
  5658  000A0C  6EDE               	movwf	postinc2,c
  5659  000A0E  0E00               	movlw	0
  5660  000A10  6EDD               	movwf	postdec2,c
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;uart_isr.c: 102: }
  5664                           ;uart_isr.c: 103: }
  5665                           ;uart_isr.c: 104: }
  5666                           ;uart_isr.c: 105: }
  5667                           
  5668                           ; BSR set to: 0
  5669                           
  5670                           ; BSR set to: 0
  5671  000A12  D114               	goto	i2l629
  5672  000A14                     i2l606:
  5673                           
  5674                           ;uart_isr.c: 106: else if(0==strncmp("!SAR",in_buff,4))
  5675                           
  5676                           ; BSR set to: 0
  5677  000A14  0EF9               	movlw	low STR_27
  5678  000A16  6E01               	movwf	strncmp@s1,c
  5679  000A18  0E7F               	movlw	high STR_27
  5680  000A1A  6E02               	movwf	strncmp@s1+1,c
  5681  000A1C  0ECF               	movlw	low uart_receiv_isr@in_buff
  5682  000A1E  6E03               	movwf	strncmp@s2,c
  5683  000A20  0E00               	movlw	high uart_receiv_isr@in_buff
  5684  000A22  6E04               	movwf	strncmp@s2+1,c
  5685  000A24  0E00               	movlw	0
  5686  000A26  6E06               	movwf	strncmp@len+1,c
  5687  000A28  0E04               	movlw	4
  5688  000A2A  6E05               	movwf	strncmp@len,c
  5689  000A2C  ECBA  F00D         	call	_strncmp	;wreg free
  5690  000A30  5001               	movf	?_strncmp,w,c
  5691  000A32  1002               	iorwf	?_strncmp+1,w,c
  5692  000A34  B4D8               	btfsc	status,2,c
  5693  000A36  D102               	goto	i2l629
  5694                           
  5695                           ;uart_isr.c: 112: else if(0==strncmp("!GTR~",in_buff,4))
  5696                           
  5697                           ;uart_isr.c: 107: {
  5698                           ;uart_isr.c: 110: }
  5699  000A38  0EDC               	movlw	low STR_28
  5700  000A3A  6E01               	movwf	strncmp@s1,c
  5701  000A3C  0E7F               	movlw	high STR_28
  5702  000A3E  6E02               	movwf	strncmp@s1+1,c
  5703  000A40  0ECF               	movlw	low uart_receiv_isr@in_buff
  5704  000A42  6E03               	movwf	strncmp@s2,c
  5705  000A44  0E00               	movlw	high uart_receiv_isr@in_buff
  5706  000A46  6E04               	movwf	strncmp@s2+1,c
  5707  000A48  0E00               	movlw	0
  5708  000A4A  6E06               	movwf	strncmp@len+1,c
  5709  000A4C  0E04               	movlw	4
  5710  000A4E  6E05               	movwf	strncmp@len,c
  5711  000A50  ECBA  F00D         	call	_strncmp	;wreg free
  5712  000A54  5001               	movf	?_strncmp,w,c
  5713  000A56  1002               	iorwf	?_strncmp+1,w,c
  5714  000A58  B4D8               	btfsc	status,2,c
  5715  000A5A  D0F0               	goto	i2l629
  5716                           
  5717                           ;uart_isr.c: 119: else if(0==strncmp("!GAR",in_buff,4))
  5718                           
  5719                           ;uart_isr.c: 113: {
  5720                           ;uart_isr.c: 117: }
  5721  000A5C  0EF4               	movlw	low STR_29
  5722  000A5E  6E01               	movwf	strncmp@s1,c
  5723  000A60  0E7F               	movlw	high STR_29
  5724  000A62  6E02               	movwf	strncmp@s1+1,c
  5725  000A64  0ECF               	movlw	low uart_receiv_isr@in_buff
  5726  000A66  6E03               	movwf	strncmp@s2,c
  5727  000A68  0E00               	movlw	high uart_receiv_isr@in_buff
  5728  000A6A  6E04               	movwf	strncmp@s2+1,c
  5729  000A6C  0E00               	movlw	0
  5730  000A6E  6E06               	movwf	strncmp@len+1,c
  5731  000A70  0E04               	movlw	4
  5732  000A72  6E05               	movwf	strncmp@len,c
  5733  000A74  ECBA  F00D         	call	_strncmp	;wreg free
  5734  000A78  5001               	movf	?_strncmp,w,c
  5735  000A7A  1002               	iorwf	?_strncmp+1,w,c
  5736  000A7C  B4D8               	btfsc	status,2,c
  5737  000A7E  D0DE               	goto	i2l629
  5738                           
  5739                           ;uart_isr.c: 125: else if(0==strncmp("!STG~",in_buff,4))
  5740                           
  5741                           ;uart_isr.c: 120: {
  5742                           ;uart_isr.c: 124: }
  5743  000A80  0ED0               	movlw	low STR_30
  5744  000A82  6E01               	movwf	strncmp@s1,c
  5745  000A84  0E7F               	movlw	high STR_30
  5746  000A86  6E02               	movwf	strncmp@s1+1,c
  5747  000A88  0ECF               	movlw	low uart_receiv_isr@in_buff
  5748  000A8A  6E03               	movwf	strncmp@s2,c
  5749  000A8C  0E00               	movlw	high uart_receiv_isr@in_buff
  5750  000A8E  6E04               	movwf	strncmp@s2+1,c
  5751  000A90  0E00               	movlw	0
  5752  000A92  6E06               	movwf	strncmp@len+1,c
  5753  000A94  0E04               	movlw	4
  5754  000A96  6E05               	movwf	strncmp@len,c
  5755  000A98  ECBA  F00D         	call	_strncmp	;wreg free
  5756  000A9C  5001               	movf	?_strncmp,w,c
  5757  000A9E  1002               	iorwf	?_strncmp+1,w,c
  5758  000AA0  B4D8               	btfsc	status,2,c
  5759  000AA2  D0CC               	goto	i2l629
  5760                           
  5761                           ;uart_isr.c: 131: else if(0==strncmp("!STB~",in_buff,4))
  5762                           
  5763                           ;uart_isr.c: 126: {
  5764                           ;uart_isr.c: 130: }
  5765  000AA4  0ECA               	movlw	low STR_31
  5766  000AA6  6E01               	movwf	strncmp@s1,c
  5767  000AA8  0E7F               	movlw	high STR_31
  5768  000AAA  6E02               	movwf	strncmp@s1+1,c
  5769  000AAC  0ECF               	movlw	low uart_receiv_isr@in_buff
  5770  000AAE  6E03               	movwf	strncmp@s2,c
  5771  000AB0  0E00               	movlw	high uart_receiv_isr@in_buff
  5772  000AB2  6E04               	movwf	strncmp@s2+1,c
  5773  000AB4  0E00               	movlw	0
  5774  000AB6  6E06               	movwf	strncmp@len+1,c
  5775  000AB8  0E04               	movlw	4
  5776  000ABA  6E05               	movwf	strncmp@len,c
  5777  000ABC  ECBA  F00D         	call	_strncmp	;wreg free
  5778  000AC0  5001               	movf	?_strncmp,w,c
  5779  000AC2  1002               	iorwf	?_strncmp+1,w,c
  5780  000AC4  B4D8               	btfsc	status,2,c
  5781  000AC6  D0BA               	goto	i2l629
  5782                           
  5783                           ;uart_isr.c: 137: else if(0==strncmp("!STW~",in_buff,4))
  5784                           
  5785                           ;uart_isr.c: 132: {
  5786                           ;uart_isr.c: 136: }
  5787  000AC8  0EEE               	movlw	low STR_32
  5788  000ACA  6E01               	movwf	strncmp@s1,c
  5789  000ACC  0E7F               	movlw	high STR_32
  5790  000ACE  6E02               	movwf	strncmp@s1+1,c
  5791  000AD0  0ECF               	movlw	low uart_receiv_isr@in_buff
  5792  000AD2  6E03               	movwf	strncmp@s2,c
  5793  000AD4  0E00               	movlw	high uart_receiv_isr@in_buff
  5794  000AD6  6E04               	movwf	strncmp@s2+1,c
  5795  000AD8  0E00               	movlw	0
  5796  000ADA  6E06               	movwf	strncmp@len+1,c
  5797  000ADC  0E04               	movlw	4
  5798  000ADE  6E05               	movwf	strncmp@len,c
  5799  000AE0  ECBA  F00D         	call	_strncmp	;wreg free
  5800  000AE4  5001               	movf	?_strncmp,w,c
  5801  000AE6  1002               	iorwf	?_strncmp+1,w,c
  5802  000AE8  B4D8               	btfsc	status,2,c
  5803  000AEA  D0A8               	goto	i2l629
  5804                           
  5805                           ;uart_isr.c: 143: else if(0==strncmp("!TMR~",in_buff,4))
  5806                           
  5807                           ;uart_isr.c: 138: {
  5808                           ;uart_isr.c: 142: }
  5809  000AEC  0ED6               	movlw	low STR_33
  5810  000AEE  6E01               	movwf	strncmp@s1,c
  5811  000AF0  0E7F               	movlw	high STR_33
  5812  000AF2  6E02               	movwf	strncmp@s1+1,c
  5813  000AF4  0ECF               	movlw	low uart_receiv_isr@in_buff
  5814  000AF6  6E03               	movwf	strncmp@s2,c
  5815  000AF8  0E00               	movlw	high uart_receiv_isr@in_buff
  5816  000AFA  6E04               	movwf	strncmp@s2+1,c
  5817  000AFC  0E00               	movlw	0
  5818  000AFE  6E06               	movwf	strncmp@len+1,c
  5819  000B00  0E04               	movlw	4
  5820  000B02  6E05               	movwf	strncmp@len,c
  5821  000B04  ECBA  F00D         	call	_strncmp	;wreg free
  5822  000B08  5001               	movf	?_strncmp,w,c
  5823  000B0A  1002               	iorwf	?_strncmp+1,w,c
  5824  000B0C  A4D8               	btfss	status,2,c
  5825  000B0E  D05B               	goto	i2l625
  5826                           
  5827                           ;uart_isr.c: 144: {
  5828                           ;uart_isr.c: 145: char text[40]="";
  5829  000B10  EE22  F040         	lfsr	2,uart_receiv_isr@F7300
  5830  000B14  EE10  F074         	lfsr	1,uart_receiv_isr@text
  5831  000B18  0E27               	movlw	39
  5832  000B1A                     i2u555_41:
  5833  000B1A  CFDB FFE3          	movff	plusw2,plusw1
  5834  000B1E  06E8               	decf	wreg,f,c
  5835  000B20  E2FC               	bc	i2u555_41
  5836                           
  5837                           ;uart_isr.c: 146: t.tm_sec = 10;
  5838  000B22  0E00               	movlw	0
  5839  000B24  0101               	movlb	1	; () banked
  5840  000B26  6F3D               	movwf	(_t+1)& (0+255),b
  5841  000B28  0E0A               	movlw	10
  5842  000B2A  6F3C               	movwf	_t& (0+255),b
  5843                           
  5844                           ; BSR set to: 1
  5845                           ;uart_isr.c: 147: t.tm_min = 10;
  5846  000B2C  0E00               	movlw	0
  5847  000B2E  0101               	movlb	1	; () banked
  5848  000B30  6F3F               	movwf	(_t+3)& (0+255),b
  5849  000B32  0E0A               	movlw	10
  5850  000B34  6F3E               	movwf	(_t+2)& (0+255),b
  5851                           
  5852                           ; BSR set to: 1
  5853                           ;uart_isr.c: 148: t.tm_hour = 6;
  5854  000B36  0E00               	movlw	0
  5855  000B38  0101               	movlb	1	; () banked
  5856  000B3A  6F41               	movwf	(_t+5)& (0+255),b
  5857  000B3C  0E06               	movlw	6
  5858  000B3E  6F40               	movwf	(_t+4)& (0+255),b
  5859                           
  5860                           ; BSR set to: 1
  5861                           ;uart_isr.c: 149: t.tm_mday = 25;
  5862  000B40  0E00               	movlw	0
  5863  000B42  0101               	movlb	1	; () banked
  5864  000B44  6F43               	movwf	(_t+7)& (0+255),b
  5865  000B46  0E19               	movlw	25
  5866  000B48  6F42               	movwf	(_t+6)& (0+255),b
  5867                           
  5868                           ; BSR set to: 1
  5869                           ;uart_isr.c: 150: t.tm_mon = 2;
  5870  000B4A  0E00               	movlw	0
  5871  000B4C  0101               	movlb	1	; () banked
  5872  000B4E  6F45               	movwf	(_t+9)& (0+255),b
  5873  000B50  0E02               	movlw	2
  5874  000B52  6F44               	movwf	(_t+8)& (0+255),b
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;uart_isr.c: 151: t.tm_year = 117;
  5878  000B54  0E00               	movlw	0
  5879  000B56  0101               	movlb	1	; () banked
  5880  000B58  6F47               	movwf	(_t+11)& (0+255),b
  5881  000B5A  0E75               	movlw	117
  5882  000B5C  6F46               	movwf	(_t+10)& (0+255),b
  5883                           
  5884                           ; BSR set to: 1
  5885                           ;uart_isr.c: 152: t.tm_wday = 6;
  5886  000B5E  0E00               	movlw	0
  5887  000B60  0101               	movlb	1	; () banked
  5888  000B62  6F49               	movwf	(_t+13)& (0+255),b
  5889  000B64  0E06               	movlw	6
  5890  000B66  6F48               	movwf	(_t+12)& (0+255),b
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;uart_isr.c: 153: long aa;
  5894                           ;uart_isr.c: 154: aa=getTimeStemp();
  5895  000B68  ECFF  F011         	call	_getTimeStemp	;wreg free
  5896  000B6C  C001  F0A5         	movff	?_getTimeStemp,uart_receiv_isr@aa
  5897  000B70  C002  F0A6         	movff	?_getTimeStemp+1,uart_receiv_isr@aa+1
  5898  000B74  C003  F0A7         	movff	?_getTimeStemp+2,uart_receiv_isr@aa+2
  5899  000B78  C004  F0A8         	movff	?_getTimeStemp+3,uart_receiv_isr@aa+3
  5900                           
  5901                           ;uart_isr.c: 157: sprintf(text," Hie %s axel" ,asctime(localtime(&aa)) );
  5902  000B7C  0E74               	movlw	low uart_receiv_isr@text
  5903  000B7E  6E29               	movwf	sprintf@sp,c
  5904  000B80  0E00               	movlw	high uart_receiv_isr@text
  5905  000B82  6E2A               	movwf	sprintf@sp+1,c
  5906  000B84  0E4A               	movlw	low STR_34
  5907  000B86  6E2B               	movwf	sprintf@f,c
  5908  000B88  0E7F               	movlw	high STR_34
  5909  000B8A  6E2C               	movwf	sprintf@f+1,c
  5910  000B8C  0EA5               	movlw	low uart_receiv_isr@aa
  5911  000B8E  6E18               	movwf	localtime@tp,c
  5912  000B90  0E00               	movlw	high uart_receiv_isr@aa
  5913  000B92  6E19               	movwf	localtime@tp+1,c
  5914  000B94  ECF9  F00D         	call	_localtime	;wreg free
  5915  000B98  C018  F022         	movff	?_localtime,asctime@tim
  5916  000B9C  C019  F023         	movff	?_localtime+1,asctime@tim+1
  5917  000BA0  EC20  F006         	call	_asctime	;wreg free
  5918  000BA4  C022  F02D         	movff	?_asctime,?_sprintf+4
  5919  000BA8  C023  F02E         	movff	?_asctime+1,?_sprintf+5
  5920  000BAC  EC52  F00B         	call	_sprintf	;wreg free
  5921                           
  5922                           ;uart_isr.c: 159: putUartStrings(text,30);
  5923  000BB0  0E74               	movlw	low uart_receiv_isr@text
  5924  000BB2  6E02               	movwf	i2putUartStrings@text,c
  5925  000BB4  0E00               	movlw	high uart_receiv_isr@text
  5926  000BB6  6E03               	movwf	i2putUartStrings@text+1,c
  5927  000BB8  0E00               	movlw	0
  5928  000BBA  6E05               	movwf	i2putUartStrings@len+1,c
  5929  000BBC  0E1E               	movlw	30
  5930  000BBE  6E04               	movwf	i2putUartStrings@len,c
  5931  000BC0  ECAF  F00E         	call	i2_putUartStrings	;wreg free
  5932                           
  5933                           ;uart_isr.c: 163: }
  5934  000BC4  D03B               	goto	i2l629
  5935  000BC6                     i2l625:
  5936                           
  5937                           ;uart_isr.c: 164: else if(0==strncmp("!TMS~",in_buff,4))
  5938  000BC6  0EE8               	movlw	low STR_35
  5939  000BC8  6E01               	movwf	strncmp@s1,c
  5940  000BCA  0E7F               	movlw	high STR_35
  5941  000BCC  6E02               	movwf	strncmp@s1+1,c
  5942  000BCE  0ECF               	movlw	low uart_receiv_isr@in_buff
  5943  000BD0  6E03               	movwf	strncmp@s2,c
  5944  000BD2  0E00               	movlw	high uart_receiv_isr@in_buff
  5945  000BD4  6E04               	movwf	strncmp@s2+1,c
  5946  000BD6  0E00               	movlw	0
  5947  000BD8  6E06               	movwf	strncmp@len+1,c
  5948  000BDA  0E04               	movlw	4
  5949  000BDC  6E05               	movwf	strncmp@len,c
  5950  000BDE  ECBA  F00D         	call	_strncmp	;wreg free
  5951  000BE2  5001               	movf	?_strncmp,w,c
  5952  000BE4  1002               	iorwf	?_strncmp+1,w,c
  5953  000BE6  A4D8               	btfss	status,2,c
  5954  000BE8  D029               	goto	i2l629
  5955                           
  5956                           ;uart_isr.c: 165: {
  5957                           ;uart_isr.c: 166: long number=0;
  5958  000BEA  0E00               	movlw	0
  5959  000BEC  0100               	movlb	0	; () banked
  5960  000BEE  6FA9               	movwf	uart_receiv_isr@number& (0+255),b
  5961  000BF0  0E00               	movlw	0
  5962  000BF2  6FAA               	movwf	(uart_receiv_isr@number+1)& (0+255),b
  5963  000BF4  0E00               	movlw	0
  5964  000BF6  6FAB               	movwf	(uart_receiv_isr@number+2)& (0+255),b
  5965  000BF8  0E00               	movlw	0
  5966  000BFA  6FAC               	movwf	(uart_receiv_isr@number+3)& (0+255),b
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;uart_isr.c: 167: char * aa;
  5970                           ;uart_isr.c: 168: number = strtol(&in_buff[5],aa,10);
  5971  000BFC  0ED4               	movlw	low (uart_receiv_isr@in_buff+5)
  5972  000BFE  6E0D               	movwf	strtol@s,c
  5973  000C00  0E00               	movlw	high (uart_receiv_isr@in_buff+5)
  5974  000C02  6E0E               	movwf	strtol@s+1,c
  5975  000C04  C0A3  F00F         	movff	uart_receiv_isr@aa_1749,strtol@endptr
  5976  000C08  C0A4  F010         	movff	uart_receiv_isr@aa_1749+1,strtol@endptr+1
  5977  000C0C  0E00               	movlw	0
  5978  000C0E  6E12               	movwf	strtol@base+1,c
  5979  000C10  0E0A               	movlw	10
  5980  000C12  6E11               	movwf	strtol@base,c
  5981  000C14  EC3B  F009         	call	_strtol	;wreg free
  5982  000C18  C00D  F0A9         	movff	?_strtol,uart_receiv_isr@number
  5983  000C1C  C00E  F0AA         	movff	?_strtol+1,uart_receiv_isr@number+1
  5984  000C20  C00F  F0AB         	movff	?_strtol+2,uart_receiv_isr@number+2
  5985  000C24  C010  F0AC         	movff	?_strtol+3,uart_receiv_isr@number+3
  5986                           
  5987                           ;uart_isr.c: 169: setTimeStemp(number);
  5988  000C28  C0A9  F001         	movff	uart_receiv_isr@number,setTimeStemp@time
  5989  000C2C  C0AA  F002         	movff	uart_receiv_isr@number+1,setTimeStemp@time+1
  5990  000C30  C0AB  F003         	movff	uart_receiv_isr@number+2,setTimeStemp@time+2
  5991  000C34  C0AC  F004         	movff	uart_receiv_isr@number+3,setTimeStemp@time+3
  5992  000C38  ECF6  F011         	call	_setTimeStemp	;wreg free
  5993  000C3C                     i2l629:
  5994                           
  5995                           ;uart_isr.c: 170: }
  5996                           ;uart_isr.c: 173: }
  5997                           ;uart_isr.c: 174: PIR3bits.RC2IF =0;
  5998  000C3C  9AA4               	bcf	4004,5,c	;volatile
  5999  000C3E  0012               	return		;funcret
  6000  000C40                     __end_of_uart_receiv_isr:
  6001                           	opt stack 0
  6002                           pclatu	equ	0xFFB
  6003                           pclath	equ	0xFFA
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           prodh	equ	0xFF4
  6009                           prodl	equ	0xFF3
  6010                           intcon	equ	0xFF2
  6011                           intcon2	equ	0xFF1
  6012                           postinc0	equ	0xFEE
  6013                           fsr0h	equ	0xFEA
  6014                           fsr0l	equ	0xFE9
  6015                           wreg	equ	0xFE8
  6016                           indf1	equ	0xFE7
  6017                           postdec1	equ	0xFE5
  6018                           plusw1	equ	0xFE3
  6019                           fsr1h	equ	0xFE2
  6020                           fsr1l	equ	0xFE1
  6021                           indf2	equ	0xFDF
  6022                           postinc2	equ	0xFDE
  6023                           postdec2	equ	0xFDD
  6024                           plusw2	equ	0xFDB
  6025                           fsr2h	equ	0xFDA
  6026                           fsr2l	equ	0xFD9
  6027                           status	equ	0xFD8
  6028                           
  6029 ;; *************** function i2_putUartStrings *****************
  6030 ;; Defined at:
  6031 ;;		line 4 in file "uartString.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  text            2    1[COMRAM] PTR unsigned char 
  6034 ;;		 -> uart_receiv_isr@text(40), STR_25(9), STR_23(9), STR_21(9), 
  6035 ;;		 -> STR_19(9), STR_17(9), STR_15(9), STR_13(9), 
  6036 ;;		 -> STR_11(9), STR_9(9), STR_7(9), STR_5(9), 
  6037 ;;		 -> STR_3(9), STR_1(9), 
  6038 ;;  len             2    3[COMRAM] int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  putUartStrin    2   10[COMRAM] int 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6050 ;;      Params:         4       0       0       0       0       0       0
  6051 ;;      Locals:         2       0       0       0       0       0       0
  6052 ;;      Temps:          5       0       0       0       0       0       0
  6053 ;;      Totals:        11       0       0       0       0       0       0
  6054 ;;Total ram usage:       11 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    1
  6057 ;; This function calls:
  6058 ;;		i2_EUSART2_Write
  6059 ;; This function is called by:
  6060 ;;		_uart_receiv_isr
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text23
  6065  001D5E                     __ptext23:
  6066                           	opt stack 0
  6067  001D5E                     i2_putUartStrings:
  6068                           	opt stack 24
  6069                           
  6070                           ;uartString.c: 6: for(int i=0; i<(len-1); i++)
  6071                           
  6072                           ;incstack = 0
  6073  001D5E  0E00               	movlw	0
  6074  001D60  6E0C               	movwf	i2putUartStrings@i+1,c
  6075  001D62  0E00               	movlw	0
  6076  001D64  6E0B               	movwf	i2putUartStrings@i,c
  6077  001D66  D01A               	goto	i2l1040
  6078  001D68                     
  6079                           ;uartString.c: 7: {
  6080                           ;uartString.c: 8: EUSART2_Write(text[i]);
  6081  001D68  500B               	movf	i2putUartStrings@i,w,c
  6082  001D6A  2402               	addwf	i2putUartStrings@text,w,c
  6083  001D6C  6E06               	movwf	??i2_putUartStrings& (0+255),c
  6084  001D6E  500C               	movf	i2putUartStrings@i+1,w,c
  6085  001D70  2003               	addwfc	i2putUartStrings@text+1,w,c
  6086  001D72  6E07               	movwf	(??i2_putUartStrings+1)& (0+255),c
  6087  001D74  C006  FFF6         	movff	??i2_putUartStrings,tblptrl
  6088  001D78  C007  FFF7         	movff	??i2_putUartStrings+1,tblptrh
  6089  001D7C  6AF8               	clrf	tblptru,c
  6090  001D7E  0E05               	movlw	(high __ramtop+-1)
  6091  001D80  64F7               	cpfsgt	tblptrh,c
  6092  001D82  D003               	bra	i2u432_47
  6093  001D84  0008               	tblrd		*
  6094  001D86  50F5               	movf	tablat,w,c
  6095  001D88  D005               	bra	i2u432_40
  6096  001D8A                     i2u432_47:
  6097  001D8A  CFF6 FFE1          	movff	tblptrl,fsr1l
  6098  001D8E  CFF7 FFE2          	movff	tblptrh,fsr1h
  6099  001D92  50E7               	movf	indf1,w,c
  6100  001D94                     i2u432_40:
  6101  001D94  ECBC  F010         	call	i2_EUSART2_Write
  6102  001D98  4A0B               	infsnz	i2putUartStrings@i,f,c
  6103  001D9A  2A0C               	incf	i2putUartStrings@i+1,f,c
  6104  001D9C                     i2l1040:
  6105  001D9C  0EFF               	movlw	255
  6106  001D9E  6E06               	movwf	??i2_putUartStrings& (0+255),c
  6107  001DA0  0EFF               	movlw	255
  6108  001DA2  6E07               	movwf	(??i2_putUartStrings+1)& (0+255),c
  6109  001DA4  C004  F008         	movff	i2putUartStrings@len,??i2_putUartStrings+2
  6110  001DA8  C005  F009         	movff	i2putUartStrings@len+1,??i2_putUartStrings+3
  6111  001DAC  5006               	movf	??i2_putUartStrings,w,c
  6112  001DAE  2608               	addwf	??i2_putUartStrings+2,f,c
  6113  001DB0  5007               	movf	??i2_putUartStrings+1,w,c
  6114  001DB2  2209               	addwfc	??i2_putUartStrings+3,f,c
  6115  001DB4  5008               	movf	??i2_putUartStrings+2,w,c
  6116  001DB6  5C0B               	subwf	i2putUartStrings@i,w,c
  6117  001DB8  500C               	movf	i2putUartStrings@i+1,w,c
  6118  001DBA  0A80               	xorlw	128
  6119  001DBC  6E0A               	movwf	(??i2_putUartStrings+4)& (0+255),c
  6120  001DBE  5009               	movf	??i2_putUartStrings+3,w,c
  6121  001DC0  0A80               	xorlw	128
  6122  001DC2  580A               	subwfb	(??i2_putUartStrings+4)& (0+255),w,c
  6123  001DC4  A0D8               	btfss	status,0,c
  6124  001DC6  D7D0               	goto	i2l1041
  6125                           
  6126                           ;uartString.c: 9: }
  6127                           ;uartString.c: 10: EUSART2_Write(10);
  6128  001DC8  0E0A               	movlw	10
  6129  001DCA  ECBC  F010         	call	i2_EUSART2_Write
  6130  001DCE  0012               	return		;funcret
  6131  001DD0                     __end_ofi2_putUartStrings:
  6132                           	opt stack 0
  6133                           pclatu	equ	0xFFB
  6134                           pclath	equ	0xFFA
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           prodh	equ	0xFF4
  6140                           prodl	equ	0xFF3
  6141                           intcon	equ	0xFF2
  6142                           intcon2	equ	0xFF1
  6143                           postinc0	equ	0xFEE
  6144                           fsr0h	equ	0xFEA
  6145                           fsr0l	equ	0xFE9
  6146                           wreg	equ	0xFE8
  6147                           indf1	equ	0xFE7
  6148                           postdec1	equ	0xFE5
  6149                           plusw1	equ	0xFE3
  6150                           fsr1h	equ	0xFE2
  6151                           fsr1l	equ	0xFE1
  6152                           indf2	equ	0xFDF
  6153                           postinc2	equ	0xFDE
  6154                           postdec2	equ	0xFDD
  6155                           plusw2	equ	0xFDB
  6156                           fsr2h	equ	0xFDA
  6157                           fsr2l	equ	0xFD9
  6158                           status	equ	0xFD8
  6159                           
  6160 ;; *************** function i2_EUSART2_Write *****************
  6161 ;; Defined at:
  6162 ;;		line 132 in file "mcc_generated_files/eusart2.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  txData          1    wreg     unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  txData          1    0[COMRAM] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6176 ;;      Params:         0       0       0       0       0       0       0
  6177 ;;      Locals:         1       0       0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0
  6179 ;;      Totals:         1       0       0       0       0       0       0
  6180 ;;Total ram usage:        1 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		i2_putUartStrings
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text24
  6190  002178                     __ptext24:
  6191                           	opt stack 0
  6192  002178                     i2_EUSART2_Write:
  6193                           	opt stack 24
  6194                           
  6195                           ;incstack = 0
  6196                           ;i2EUSART2_Write@txData stored from wreg
  6197  002178  6E01               	movwf	i2EUSART2_Write@txData,c
  6198  00217A                     
  6199                           ;eusart2.c: 135: {
  6200                           
  6201                           ;eusart2.c: 134: while(0 == eusart2TxBufferRemaining)
  6202  00217A  5056               	movf	_eusart2TxBufferRemaining,w,c	;volatile
  6203  00217C  B4D8               	btfsc	status,2,c
  6204  00217E  D7FD               	goto	i2l4126
  6205                           
  6206                           ;eusart2.c: 136: }
  6207                           ;eusart2.c: 138: if(0 == PIE3bits.TX2IE)
  6208  002180  B8A3               	btfsc	4003,4,c	;volatile
  6209  002182  D003               	goto	i2l901
  6210                           
  6211                           ;eusart2.c: 139: {
  6212                           ;eusart2.c: 140: TXREG2 = txData;
  6213  002184  C001  FF73         	movff	i2EUSART2_Write@txData,3955	;volatile
  6214                           
  6215                           ;eusart2.c: 141: }
  6216  002188  D012               	goto	i2l902
  6217  00218A                     i2l901:
  6218                           
  6219                           ;eusart2.c: 142: else
  6220                           ;eusart2.c: 143: {
  6221                           ;eusart2.c: 144: PIE3bits.TX2IE = 0;
  6222  00218A  98A3               	bcf	4003,4,c	;volatile
  6223                           
  6224                           ;eusart2.c: 145: eusart2TxBuffer[eusart2TxHead++] = txData;
  6225  00218C  5058               	movf	_eusart2TxHead,w,c	;volatile
  6226  00218E  0D01               	mullw	1
  6227  002190  0E00               	movlw	low _eusart2TxBuffer
  6228  002192  24F3               	addwf	prodl,w,c
  6229  002194  6ED9               	movwf	fsr2l,c
  6230  002196  0E02               	movlw	high _eusart2TxBuffer
  6231  002198  20F4               	addwfc	prodh,w,c
  6232  00219A  6EDA               	movwf	fsr2h,c
  6233  00219C  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
  6234  0021A0  2A58               	incf	_eusart2TxHead,f,c	;volatile
  6235                           
  6236                           ;eusart2.c: 146: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  6237  0021A2  0E3F               	movlw	63
  6238  0021A4  6458               	cpfsgt	_eusart2TxHead,c	;volatile
  6239  0021A6  D002               	goto	i2l903
  6240                           
  6241                           ;eusart2.c: 147: {
  6242                           ;eusart2.c: 148: eusart2TxHead = 0;
  6243  0021A8  0E00               	movlw	0
  6244  0021AA  6E58               	movwf	_eusart2TxHead,c	;volatile
  6245  0021AC                     i2l903:
  6246                           
  6247                           ;eusart2.c: 149: }
  6248                           ;eusart2.c: 150: eusart2TxBufferRemaining--;
  6249  0021AC  0656               	decf	_eusart2TxBufferRemaining,f,c	;volatile
  6250  0021AE                     i2l902:
  6251                           
  6252                           ;eusart2.c: 151: }
  6253                           ;eusart2.c: 152: PIE3bits.TX2IE = 1;
  6254  0021AE  88A3               	bsf	4003,4,c	;volatile
  6255  0021B0  0012               	return		;funcret
  6256  0021B2                     __end_ofi2_EUSART2_Write:
  6257                           	opt stack 0
  6258                           pclatu	equ	0xFFB
  6259                           pclath	equ	0xFFA
  6260                           tblptru	equ	0xFF8
  6261                           tblptrh	equ	0xFF7
  6262                           tblptrl	equ	0xFF6
  6263                           tablat	equ	0xFF5
  6264                           prodh	equ	0xFF4
  6265                           prodl	equ	0xFF3
  6266                           intcon	equ	0xFF2
  6267                           intcon2	equ	0xFF1
  6268                           postinc0	equ	0xFEE
  6269                           fsr0h	equ	0xFEA
  6270                           fsr0l	equ	0xFE9
  6271                           wreg	equ	0xFE8
  6272                           indf1	equ	0xFE7
  6273                           postdec1	equ	0xFE5
  6274                           plusw1	equ	0xFE3
  6275                           fsr1h	equ	0xFE2
  6276                           fsr1l	equ	0xFE1
  6277                           indf2	equ	0xFDF
  6278                           postinc2	equ	0xFDE
  6279                           postdec2	equ	0xFDD
  6280                           plusw2	equ	0xFDB
  6281                           fsr2h	equ	0xFDA
  6282                           fsr2l	equ	0xFD9
  6283                           status	equ	0xFD8
  6284                           
  6285 ;; *************** function _strtol *****************
  6286 ;; Defined at:
  6287 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\strtol.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6290 ;;		 -> uart_receiv_isr@in_buff(20), 
  6291 ;;  endptr          2   14[COMRAM] PTR PTR unsigned char 
  6292 ;;  base            2   16[COMRAM] int 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  a               4   23[COMRAM] long 
  6295 ;;  c               1   27[COMRAM] unsigned char 
  6296 ;;  sign            1   22[COMRAM] unsigned char 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  4   12[COMRAM] long 
  6299 ;; Registers used:
  6300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6306 ;;      Params:         6       0       0       0       0       0       0
  6307 ;;      Locals:         6       0       0       0       0       0       0
  6308 ;;      Temps:          4       0       0       0       0       0       0
  6309 ;;      Totals:        16       0       0       0       0       0       0
  6310 ;;Total ram usage:       16 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; Hardware stack levels required when called:    2
  6313 ;; This function calls:
  6314 ;;		___lmul
  6315 ;;		_isalpha
  6316 ;;		_isdigit
  6317 ;;		_isspace
  6318 ;;		_toupper
  6319 ;; This function is called by:
  6320 ;;		_uart_receiv_isr
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           	psect	text25
  6325  001276                     __ptext25:
  6326                           	opt stack 0
  6327  001276                     _strtol:
  6328                           	opt stack 23
  6329                           
  6330                           ;incstack = 0
  6331  001276  C00D  FFD9         	movff	strtol@s,fsr2l
  6332  00127A  C00E  FFDA         	movff	strtol@s+1,fsr2h
  6333  00127E  50DF               	movf	indf2,w,c
  6334  001280  6E1C               	movwf	strtol@c,c
  6335  001282  4A0D               	infsnz	strtol@s,f,c
  6336  001284  2A0E               	incf	strtol@s+1,f,c
  6337  001286  501C               	movf	strtol@c,w,c
  6338  001288  EC64  F011         	call	_isspace
  6339  00128C  B0D8               	btfsc	status,0,c
  6340  00128E  D7F3               	goto	_strtol
  6341  001290  0E00               	movlw	0
  6342  001292  6E18               	movwf	strtol@a,c
  6343  001294  0E00               	movlw	0
  6344  001296  6E19               	movwf	strtol@a+1,c
  6345  001298  0E00               	movlw	0
  6346  00129A  6E1A               	movwf	strtol@a+2,c
  6347  00129C  0E00               	movlw	0
  6348  00129E  6E1B               	movwf	strtol@a+3,c
  6349  0012A0  0E00               	movlw	0
  6350  0012A2  6E17               	movwf	strtol@sign,c
  6351  0012A4  0E2D               	movlw	45
  6352  0012A6  181C               	xorwf	strtol@c,w,c
  6353  0012A8  A4D8               	btfss	status,2,c
  6354  0012AA  D003               	goto	i2l1678
  6355  0012AC  0E01               	movlw	1
  6356  0012AE  6E17               	movwf	strtol@sign,c
  6357  0012B0  D004               	goto	i2u418_40
  6358  0012B2                     i2l1678:
  6359  0012B2  0E2B               	movlw	43
  6360  0012B4  181C               	xorwf	strtol@c,w,c
  6361  0012B6  A4D8               	btfss	status,2,c
  6362  0012B8  D008               	goto	i2l1680
  6363  0012BA                     i2u418_40:
  6364  0012BA  C00D  FFD9         	movff	strtol@s,fsr2l
  6365  0012BE  C00E  FFDA         	movff	strtol@s+1,fsr2h
  6366  0012C2  50DF               	movf	indf2,w,c
  6367  0012C4  6E1C               	movwf	strtol@c,c
  6368  0012C6  4A0D               	infsnz	strtol@s,f,c
  6369  0012C8  2A0E               	incf	strtol@s+1,f,c
  6370  0012CA                     i2l1680:
  6371  0012CA  0E30               	movlw	48
  6372  0012CC  181C               	xorwf	strtol@c,w,c
  6373  0012CE  A4D8               	btfss	status,2,c
  6374  0012D0  D02E               	goto	i2l1688
  6375  0012D2  C00D  FFD9         	movff	strtol@s,fsr2l
  6376  0012D6  C00E  FFDA         	movff	strtol@s+1,fsr2h
  6377  0012DA  50DF               	movf	indf2,w,c
  6378  0012DC  6E1C               	movwf	strtol@c,c
  6379  0012DE  4A0D               	infsnz	strtol@s,f,c
  6380  0012E0  2A0E               	incf	strtol@s+1,f,c
  6381  0012E2  5011               	movf	strtol@base,w,c
  6382  0012E4  1012               	iorwf	strtol@base+1,w,c
  6383  0012E6  B4D8               	btfsc	status,2,c
  6384  0012E8  D005               	goto	i2u421_40
  6385  0012EA  0E10               	movlw	16
  6386  0012EC  1811               	xorwf	strtol@base,w,c
  6387  0012EE  1012               	iorwf	strtol@base+1,w,c
  6388  0012F0  A4D8               	btfss	status,2,c
  6389  0012F2  D015               	goto	i2l1682
  6390  0012F4                     i2u421_40:
  6391  0012F4  0E78               	movlw	120
  6392  0012F6  181C               	xorwf	strtol@c,w,c
  6393  0012F8  B4D8               	btfsc	status,2,c
  6394  0012FA  D004               	goto	i2u423_40
  6395  0012FC  0E58               	movlw	88
  6396  0012FE  181C               	xorwf	strtol@c,w,c
  6397  001300  A4D8               	btfss	status,2,c
  6398  001302  D00D               	goto	i2l1682
  6399  001304                     i2u423_40:
  6400  001304  0E00               	movlw	0
  6401  001306  6E12               	movwf	strtol@base+1,c
  6402  001308  0E10               	movlw	16
  6403  00130A  6E11               	movwf	strtol@base,c
  6404  00130C  C00D  FFD9         	movff	strtol@s,fsr2l
  6405  001310  C00E  FFDA         	movff	strtol@s+1,fsr2h
  6406  001314  50DF               	movf	indf2,w,c
  6407  001316  6E1C               	movwf	strtol@c,c
  6408  001318  4A0D               	infsnz	strtol@s,f,c
  6409  00131A  2A0E               	incf	strtol@s+1,f,c
  6410  00131C  D008               	goto	i2l1688
  6411  00131E                     i2l1682:
  6412  00131E  5011               	movf	strtol@base,w,c
  6413  001320  1012               	iorwf	strtol@base+1,w,c
  6414  001322  A4D8               	btfss	status,2,c
  6415  001324  D004               	goto	i2l1688
  6416  001326  0E00               	movlw	0
  6417  001328  6E12               	movwf	strtol@base+1,c
  6418  00132A  0E08               	movlw	8
  6419  00132C  6E11               	movwf	strtol@base,c
  6420  00132E                     i2l1688:
  6421  00132E  5011               	movf	strtol@base,w,c
  6422  001330  1012               	iorwf	strtol@base+1,w,c
  6423  001332  A4D8               	btfss	status,2,c
  6424  001334  D004               	goto	i2l1689
  6425  001336  0E00               	movlw	0
  6426  001338  6E12               	movwf	strtol@base+1,c
  6427  00133A  0E0A               	movlw	10
  6428  00133C  6E11               	movwf	strtol@base,c
  6429  00133E                     i2l1689:
  6430  00133E  501C               	movf	strtol@c,w,c
  6431  001340  EC3D  F011         	call	_isalpha
  6432  001344  A0D8               	btfss	status,0,c
  6433  001346  D006               	goto	i2l1691
  6434  001348  501C               	movf	strtol@c,w,c
  6435  00134A  ECE3  F011         	call	_toupper
  6436  00134E  0FC9               	addlw	201
  6437  001350  6E1C               	movwf	strtol@c,c
  6438  001352  D007               	goto	i2l1694
  6439  001354                     i2l1691:
  6440  001354  501C               	movf	strtol@c,w,c
  6441  001356  ECAE  F011         	call	_isdigit
  6442  00135A  A0D8               	btfss	status,0,c
  6443  00135C  D037               	goto	i2l1695
  6444  00135E  0E30               	movlw	48
  6445  001360  5E1C               	subwf	strtol@c,f,c
  6446  001362                     i2l1694:
  6447  001362  501C               	movf	strtol@c,w,c
  6448  001364  6E13               	movwf	??_strtol& (0+255),c
  6449  001366  6A14               	clrf	(??_strtol+1)& (0+255),c
  6450  001368  5011               	movf	strtol@base,w,c
  6451  00136A  5C13               	subwf	??_strtol,w,c
  6452  00136C  5014               	movf	??_strtol+1,w,c
  6453  00136E  0A80               	xorlw	128
  6454  001370  6E15               	movwf	(??_strtol+2)& (0+255),c
  6455  001372  5012               	movf	strtol@base+1,w,c
  6456  001374  0A80               	xorlw	128
  6457  001376  5815               	subwfb	(??_strtol+2)& (0+255),w,c
  6458  001378  B0D8               	btfsc	status,0,c
  6459  00137A  D028               	goto	i2l1695
  6460  00137C  C011  F001         	movff	strtol@base,___lmul@multiplier
  6461  001380  C012  F002         	movff	strtol@base+1,___lmul@multiplier+1
  6462  001384  0E00               	movlw	0
  6463  001386  BE02               	btfsc	___lmul@multiplier+1,7,c
  6464  001388  0EFF               	movlw	-1
  6465  00138A  6E03               	movwf	___lmul@multiplier+2,c
  6466  00138C  6E04               	movwf	___lmul@multiplier+3,c
  6467  00138E  C018  F005         	movff	strtol@a,___lmul@multiplicand
  6468  001392  C019  F006         	movff	strtol@a+1,___lmul@multiplicand+1
  6469  001396  C01A  F007         	movff	strtol@a+2,___lmul@multiplicand+2
  6470  00139A  C01B  F008         	movff	strtol@a+3,___lmul@multiplicand+3
  6471  00139E  ECED  F00F         	call	___lmul	;wreg free
  6472  0013A2  501C               	movf	strtol@c,w,c
  6473  0013A4  2401               	addwf	?___lmul,w,c
  6474  0013A6  6E18               	movwf	strtol@a,c
  6475  0013A8  0E00               	movlw	0
  6476  0013AA  2002               	addwfc	?___lmul+1,w,c
  6477  0013AC  6E19               	movwf	strtol@a+1,c
  6478  0013AE  0E00               	movlw	0
  6479  0013B0  2003               	addwfc	?___lmul+2,w,c
  6480  0013B2  6E1A               	movwf	strtol@a+2,c
  6481  0013B4  0E00               	movlw	0
  6482  0013B6  2004               	addwfc	?___lmul+3,w,c
  6483  0013B8  6E1B               	movwf	strtol@a+3,c
  6484  0013BA  C00D  FFD9         	movff	strtol@s,fsr2l
  6485  0013BE  C00E  FFDA         	movff	strtol@s+1,fsr2h
  6486  0013C2  50DF               	movf	indf2,w,c
  6487  0013C4  6E1C               	movwf	strtol@c,c
  6488  0013C6  4A0D               	infsnz	strtol@s,f,c
  6489  0013C8  2A0E               	incf	strtol@s+1,f,c
  6490  0013CA  D7B9               	goto	i2l1689
  6491  0013CC                     i2l1695:
  6492  0013CC  5017               	movf	strtol@sign,w,c
  6493  0013CE  B4D8               	btfsc	status,2,c
  6494  0013D0  D01A               	goto	i2l1698
  6495  0013D2  C018  F013         	movff	strtol@a,??_strtol
  6496  0013D6  C019  F014         	movff	strtol@a+1,??_strtol+1
  6497  0013DA  C01A  F015         	movff	strtol@a+2,??_strtol+2
  6498  0013DE  C01B  F016         	movff	strtol@a+3,??_strtol+3
  6499  0013E2  1E13               	comf	??_strtol,f,c
  6500  0013E4  1E14               	comf	??_strtol+1,f,c
  6501  0013E6  1E15               	comf	??_strtol+2,f,c
  6502  0013E8  1E16               	comf	??_strtol+3,f,c
  6503  0013EA  2A13               	incf	??_strtol,f,c
  6504  0013EC  0E00               	movlw	0
  6505  0013EE  2214               	addwfc	??_strtol+1,f,c
  6506  0013F0  2215               	addwfc	??_strtol+2,f,c
  6507  0013F2  2216               	addwfc	??_strtol+3,f,c
  6508  0013F4  C013  F00D         	movff	??_strtol,?_strtol
  6509  0013F8  C014  F00E         	movff	??_strtol+1,?_strtol+1
  6510  0013FC  C015  F00F         	movff	??_strtol+2,?_strtol+2
  6511  001400  C016  F010         	movff	??_strtol+3,?_strtol+3
  6512  001404  0012               	return	
  6513  001406                     i2l1698:
  6514  001406  C018  F00D         	movff	strtol@a,?_strtol
  6515  00140A  C019  F00E         	movff	strtol@a+1,?_strtol+1
  6516  00140E  C01A  F00F         	movff	strtol@a+2,?_strtol+2
  6517  001412  C01B  F010         	movff	strtol@a+3,?_strtol+3
  6518  001416  0012               	return		;funcret
  6519  001418                     __end_of_strtol:
  6520                           	opt stack 0
  6521                           pclatu	equ	0xFFB
  6522                           pclath	equ	0xFFA
  6523                           tblptru	equ	0xFF8
  6524                           tblptrh	equ	0xFF7
  6525                           tblptrl	equ	0xFF6
  6526                           tablat	equ	0xFF5
  6527                           prodh	equ	0xFF4
  6528                           prodl	equ	0xFF3
  6529                           intcon	equ	0xFF2
  6530                           intcon2	equ	0xFF1
  6531                           postinc0	equ	0xFEE
  6532                           fsr0h	equ	0xFEA
  6533                           fsr0l	equ	0xFE9
  6534                           wreg	equ	0xFE8
  6535                           indf1	equ	0xFE7
  6536                           postdec1	equ	0xFE5
  6537                           plusw1	equ	0xFE3
  6538                           fsr1h	equ	0xFE2
  6539                           fsr1l	equ	0xFE1
  6540                           indf2	equ	0xFDF
  6541                           postinc2	equ	0xFDE
  6542                           postdec2	equ	0xFDD
  6543                           plusw2	equ	0xFDB
  6544                           fsr2h	equ	0xFDA
  6545                           fsr2l	equ	0xFD9
  6546                           status	equ	0xFD8
  6547                           
  6548 ;; *************** function _toupper *****************
  6549 ;; Defined at:
  6550 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\toupper.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  c               1    wreg     unsigned char 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  c               1    0[COMRAM] unsigned char 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  1    wreg      unsigned char 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6564 ;;      Params:         0       0       0       0       0       0       0
  6565 ;;      Locals:         1       0       0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0       0       0
  6567 ;;      Totals:         1       0       0       0       0       0       0
  6568 ;;Total ram usage:        1 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_strtol
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text26
  6578  0023C6                     __ptext26:
  6579                           	opt stack 0
  6580  0023C6                     _toupper:
  6581                           	opt stack 24
  6582                           
  6583                           ;incstack = 0
  6584                           ;toupper@c stored from wreg
  6585  0023C6  6E01               	movwf	toupper@c,c
  6586  0023C8  0E7B               	movlw	123
  6587  0023CA  6001               	cpfslt	toupper@c,c
  6588  0023CC  D004               	goto	i2l1706
  6589  0023CE  0E60               	movlw	96
  6590  0023D0  6401               	cpfsgt	toupper@c,c
  6591  0023D2  D001               	goto	i2l1706
  6592  0023D4  9A01               	bcf	toupper@c,5,c
  6593  0023D6                     i2l1706:
  6594  0023D6  5001               	movf	toupper@c,w,c
  6595  0023D8  0012               	return	
  6596  0023DA                     __end_of_toupper:
  6597                           	opt stack 0
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           intcon2	equ	0xFF1
  6608                           postinc0	equ	0xFEE
  6609                           fsr0h	equ	0xFEA
  6610                           fsr0l	equ	0xFE9
  6611                           wreg	equ	0xFE8
  6612                           indf1	equ	0xFE7
  6613                           postdec1	equ	0xFE5
  6614                           plusw1	equ	0xFE3
  6615                           fsr1h	equ	0xFE2
  6616                           fsr1l	equ	0xFE1
  6617                           indf2	equ	0xFDF
  6618                           postinc2	equ	0xFDE
  6619                           postdec2	equ	0xFDD
  6620                           plusw2	equ	0xFDB
  6621                           fsr2h	equ	0xFDA
  6622                           fsr2l	equ	0xFD9
  6623                           status	equ	0xFD8
  6624                           
  6625 ;; *************** function _isspace *****************
  6626 ;; Defined at:
  6627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isspace.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  c               1    wreg     unsigned char 
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  c               1    2[COMRAM] unsigned char 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;		None               void
  6634 ;; Registers used:
  6635 ;;		wreg, status,2, status,0
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6641 ;;      Params:         0       0       0       0       0       0       0
  6642 ;;      Locals:         2       0       0       0       0       0       0
  6643 ;;      Temps:          1       0       0       0       0       0       0
  6644 ;;      Totals:         3       0       0       0       0       0       0
  6645 ;;Total ram usage:        3 bytes
  6646 ;; Hardware stack levels used:    1
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_strtol
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text27
  6655  0022C8                     __ptext27:
  6656                           	opt stack 0
  6657  0022C8                     _isspace:
  6658                           	opt stack 24
  6659                           
  6660                           ;incstack = 0
  6661                           ;isspace@c stored from wreg
  6662  0022C8  6E03               	movwf	isspace@c,c
  6663  0022CA  0E01               	movlw	1
  6664  0022CC  6E02               	movwf	_isspace$3656,c
  6665  0022CE  0E20               	movlw	32
  6666  0022D0  1803               	xorwf	isspace@c,w,c
  6667  0022D2  B4D8               	btfsc	status,2,c
  6668  0022D4  D008               	goto	i2l1742
  6669  0022D6  0E0E               	movlw	14
  6670  0022D8  6003               	cpfslt	isspace@c,c
  6671  0022DA  D003               	goto	i2u378_40
  6672  0022DC  0E09               	movlw	9
  6673  0022DE  6003               	cpfslt	isspace@c,c
  6674  0022E0  D002               	goto	i2l1742
  6675  0022E2                     i2u378_40:
  6676  0022E2  0E00               	movlw	0
  6677  0022E4  6E02               	movwf	_isspace$3656,c
  6678  0022E6                     i2l1742:
  6679  0022E6  C002  F001         	movff	_isspace$3656,??_isspace
  6680  0022EA  3001               	rrcf	??_isspace,w,c
  6681  0022EC  0012               	return	
  6682  0022EE                     __end_of_isspace:
  6683                           	opt stack 0
  6684                           pclatu	equ	0xFFB
  6685                           pclath	equ	0xFFA
  6686                           tblptru	equ	0xFF8
  6687                           tblptrh	equ	0xFF7
  6688                           tblptrl	equ	0xFF6
  6689                           tablat	equ	0xFF5
  6690                           prodh	equ	0xFF4
  6691                           prodl	equ	0xFF3
  6692                           intcon	equ	0xFF2
  6693                           intcon2	equ	0xFF1
  6694                           postinc0	equ	0xFEE
  6695                           fsr0h	equ	0xFEA
  6696                           fsr0l	equ	0xFE9
  6697                           wreg	equ	0xFE8
  6698                           indf1	equ	0xFE7
  6699                           postdec1	equ	0xFE5
  6700                           plusw1	equ	0xFE3
  6701                           fsr1h	equ	0xFE2
  6702                           fsr1l	equ	0xFE1
  6703                           indf2	equ	0xFDF
  6704                           postinc2	equ	0xFDE
  6705                           postdec2	equ	0xFDD
  6706                           plusw2	equ	0xFDB
  6707                           fsr2h	equ	0xFDA
  6708                           fsr2l	equ	0xFD9
  6709                           status	equ	0xFD8
  6710                           
  6711 ;; *************** function _isdigit *****************
  6712 ;; Defined at:
  6713 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  c               1    wreg     unsigned char 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  c               1    2[COMRAM] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;		None               void
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6727 ;;      Params:         0       0       0       0       0       0       0
  6728 ;;      Locals:         2       0       0       0       0       0       0
  6729 ;;      Temps:          1       0       0       0       0       0       0
  6730 ;;      Totals:         3       0       0       0       0       0       0
  6731 ;;Total ram usage:        3 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_strtol
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text28
  6741  00235C                     __ptext28:
  6742                           	opt stack 0
  6743  00235C                     _isdigit:
  6744                           	opt stack 24
  6745                           
  6746                           ;incstack = 0
  6747                           ;isdigit@c stored from wreg
  6748  00235C  6E03               	movwf	isdigit@c,c
  6749  00235E  0E00               	movlw	0
  6750  002360  6E02               	movwf	_isdigit$3653,c
  6751  002362  0E3A               	movlw	58
  6752  002364  6003               	cpfslt	isdigit@c,c
  6753  002366  D005               	goto	i2l1737
  6754  002368  0E2F               	movlw	47
  6755  00236A  6403               	cpfsgt	isdigit@c,c
  6756  00236C  D002               	goto	i2l1737
  6757  00236E  0E01               	movlw	1
  6758  002370  6E02               	movwf	_isdigit$3653,c
  6759  002372                     i2l1737:
  6760  002372  C002  F001         	movff	_isdigit$3653,??_isdigit
  6761  002376  3001               	rrcf	??_isdigit,w,c
  6762  002378  0012               	return	
  6763  00237A                     __end_of_isdigit:
  6764                           	opt stack 0
  6765                           pclatu	equ	0xFFB
  6766                           pclath	equ	0xFFA
  6767                           tblptru	equ	0xFF8
  6768                           tblptrh	equ	0xFF7
  6769                           tblptrl	equ	0xFF6
  6770                           tablat	equ	0xFF5
  6771                           prodh	equ	0xFF4
  6772                           prodl	equ	0xFF3
  6773                           intcon	equ	0xFF2
  6774                           intcon2	equ	0xFF1
  6775                           postinc0	equ	0xFEE
  6776                           fsr0h	equ	0xFEA
  6777                           fsr0l	equ	0xFE9
  6778                           wreg	equ	0xFE8
  6779                           indf1	equ	0xFE7
  6780                           postdec1	equ	0xFE5
  6781                           plusw1	equ	0xFE3
  6782                           fsr1h	equ	0xFE2
  6783                           fsr1l	equ	0xFE1
  6784                           indf2	equ	0xFDF
  6785                           postinc2	equ	0xFDE
  6786                           postdec2	equ	0xFDD
  6787                           plusw2	equ	0xFDB
  6788                           fsr2h	equ	0xFDA
  6789                           fsr2l	equ	0xFD9
  6790                           status	equ	0xFD8
  6791                           
  6792 ;; *************** function _isalpha *****************
  6793 ;; Defined at:
  6794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isalpha.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  c               1    wreg     unsigned char 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  c               1    5[COMRAM] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;		None               void
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6808 ;;      Params:         0       0       0       0       0       0       0
  6809 ;;      Locals:         2       0       0       0       0       0       0
  6810 ;;      Temps:          1       0       0       0       0       0       0
  6811 ;;      Totals:         3       0       0       0       0       0       0
  6812 ;;Total ram usage:        3 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    1
  6815 ;; This function calls:
  6816 ;;		_isupper
  6817 ;; This function is called by:
  6818 ;;		_strtol
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text29
  6823  00227A                     __ptext29:
  6824                           	opt stack 0
  6825  00227A                     _isalpha:
  6826                           	opt stack 23
  6827                           
  6828                           ;incstack = 0
  6829                           ;isalpha@c stored from wreg
  6830  00227A  6E06               	movwf	isalpha@c,c
  6831  00227C  0E01               	movlw	1
  6832  00227E  6E05               	movwf	_isalpha$3650,c
  6833  002280  0E7B               	movlw	123
  6834  002282  6006               	cpfslt	isalpha@c,c
  6835  002284  D003               	goto	i2u380_40
  6836  002286  0E61               	movlw	97
  6837  002288  6006               	cpfslt	isalpha@c,c
  6838  00228A  D007               	goto	i2l1732
  6839  00228C                     i2u380_40:
  6840  00228C  5006               	movf	isalpha@c,w,c
  6841  00228E  ECBD  F011         	call	_isupper
  6842  002292  B0D8               	btfsc	status,0,c
  6843  002294  D002               	goto	i2l1732
  6844  002296  0E00               	movlw	0
  6845  002298  6E05               	movwf	_isalpha$3650,c
  6846  00229A                     i2l1732:
  6847  00229A  C005  F004         	movff	_isalpha$3650,??_isalpha
  6848  00229E  3004               	rrcf	??_isalpha,w,c
  6849  0022A0  0012               	return	
  6850  0022A2                     __end_of_isalpha:
  6851                           	opt stack 0
  6852                           pclatu	equ	0xFFB
  6853                           pclath	equ	0xFFA
  6854                           tblptru	equ	0xFF8
  6855                           tblptrh	equ	0xFF7
  6856                           tblptrl	equ	0xFF6
  6857                           tablat	equ	0xFF5
  6858                           prodh	equ	0xFF4
  6859                           prodl	equ	0xFF3
  6860                           intcon	equ	0xFF2
  6861                           intcon2	equ	0xFF1
  6862                           postinc0	equ	0xFEE
  6863                           fsr0h	equ	0xFEA
  6864                           fsr0l	equ	0xFE9
  6865                           wreg	equ	0xFE8
  6866                           indf1	equ	0xFE7
  6867                           postdec1	equ	0xFE5
  6868                           plusw1	equ	0xFE3
  6869                           fsr1h	equ	0xFE2
  6870                           fsr1l	equ	0xFE1
  6871                           indf2	equ	0xFDF
  6872                           postinc2	equ	0xFDE
  6873                           postdec2	equ	0xFDD
  6874                           plusw2	equ	0xFDB
  6875                           fsr2h	equ	0xFDA
  6876                           fsr2l	equ	0xFD9
  6877                           status	equ	0xFD8
  6878                           
  6879 ;; *************** function _isupper *****************
  6880 ;; Defined at:
  6881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isupper.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  c               1    wreg     unsigned char 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  c               1    2[COMRAM] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;		None               void
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6895 ;;      Params:         0       0       0       0       0       0       0
  6896 ;;      Locals:         2       0       0       0       0       0       0
  6897 ;;      Temps:          1       0       0       0       0       0       0
  6898 ;;      Totals:         3       0       0       0       0       0       0
  6899 ;;Total ram usage:        3 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_isalpha
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text30
  6909  00237A                     __ptext30:
  6910                           	opt stack 0
  6911  00237A                     _isupper:
  6912                           	opt stack 23
  6913                           
  6914                           ;incstack = 0
  6915                           ;isupper@c stored from wreg
  6916  00237A  6E03               	movwf	isupper@c,c
  6917  00237C  0E00               	movlw	0
  6918  00237E  6E02               	movwf	_isupper$3659,c
  6919  002380  0E5B               	movlw	91
  6920  002382  6003               	cpfslt	isupper@c,c
  6921  002384  D005               	goto	i2l1747
  6922  002386  0E40               	movlw	64
  6923  002388  6403               	cpfsgt	isupper@c,c
  6924  00238A  D002               	goto	i2l1747
  6925  00238C  0E01               	movlw	1
  6926  00238E  6E02               	movwf	_isupper$3659,c
  6927  002390                     i2l1747:
  6928  002390  C002  F001         	movff	_isupper$3659,??_isupper
  6929  002394  3001               	rrcf	??_isupper,w,c
  6930  002396  0012               	return	
  6931  002398                     __end_of_isupper:
  6932                           	opt stack 0
  6933                           pclatu	equ	0xFFB
  6934                           pclath	equ	0xFFA
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           postinc0	equ	0xFEE
  6944                           fsr0h	equ	0xFEA
  6945                           fsr0l	equ	0xFE9
  6946                           wreg	equ	0xFE8
  6947                           indf1	equ	0xFE7
  6948                           postdec1	equ	0xFE5
  6949                           plusw1	equ	0xFE3
  6950                           fsr1h	equ	0xFE2
  6951                           fsr1l	equ	0xFE1
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           plusw2	equ	0xFDB
  6956                           fsr2h	equ	0xFDA
  6957                           fsr2l	equ	0xFD9
  6958                           status	equ	0xFD8
  6959                           
  6960 ;; *************** function _strncmp *****************
  6961 ;; Defined at:
  6962 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\strncmp.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  6965 ;;		 -> STR_35(6), STR_33(6), STR_32(6), STR_31(6), 
  6966 ;;		 -> STR_30(6), STR_29(5), STR_28(6), STR_27(5), 
  6967 ;;		 -> STR_26(6), 
  6968 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  6969 ;;		 -> uart_receiv_isr@in_buff(20), 
  6970 ;;  len             2    4[COMRAM] unsigned int 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  2    0[COMRAM] int 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6982 ;;      Params:         6       0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0
  6984 ;;      Temps:          2       0       0       0       0       0       0
  6985 ;;      Totals:         8       0       0       0       0       0       0
  6986 ;;Total ram usage:        8 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_uart_receiv_isr
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text31
  6996  001B74                     __ptext31:
  6997                           	opt stack 0
  6998  001B74                     _strncmp:
  6999                           	opt stack 25
  7000                           
  7001                           ;incstack = 0
  7002  001B74  D031               	goto	i2l1659
  7003  001B76                     i2l4258:
  7004  001B76  C001  FFF6         	movff	strncmp@s1,tblptrl
  7005  001B7A  C002  FFF7         	movff	strncmp@s1+1,tblptrh
  7006  001B7E                     	if	0	;tblptru may be non-zero
  7007  001B7E                     	endif
  7008  001B7E                     	if	0	;tblptru may be non-zero
  7009  001B7E                     	endif
  7010  001B7E  0008               	tblrd		*
  7011  001B80  50F5               	movf	tablat,w,c
  7012  001B82  0900               	iorlw	0
  7013  001B84  B4D8               	btfsc	status,2,c
  7014  001B86  D00D               	goto	i2u408_40
  7015  001B88  C003  FFD9         	movff	strncmp@s2,fsr2l
  7016  001B8C  C004  FFDA         	movff	strncmp@s2+1,fsr2h
  7017  001B90  C001  FFF6         	movff	strncmp@s1,tblptrl
  7018  001B94  C002  FFF7         	movff	strncmp@s1+1,tblptrh
  7019  001B98                     	if	0	;tblptru may be non-zero
  7020  001B98                     	endif
  7021  001B98                     	if	0	;tblptru may be non-zero
  7022  001B98                     	endif
  7023  001B98  50DE               	movf	postinc2,w,c
  7024  001B9A  0009               	tblrd		*+
  7025  001B9C  18F5               	xorwf	tablat,w,c
  7026  001B9E  B4D8               	btfsc	status,2,c
  7027  001BA0  D017               	goto	i2l1661
  7028  001BA2                     i2u408_40:
  7029  001BA2  C003  FFD9         	movff	strncmp@s2,fsr2l
  7030  001BA6  C004  FFDA         	movff	strncmp@s2+1,fsr2h
  7031  001BAA  50DF               	movf	indf2,w,c
  7032  001BAC  6E07               	movwf	??_strncmp& (0+255),c
  7033  001BAE  6A08               	clrf	(??_strncmp+1)& (0+255),c
  7034  001BB0  1E07               	comf	??_strncmp,f,c
  7035  001BB2  1E08               	comf	??_strncmp+1,f,c
  7036  001BB4  4A07               	infsnz	??_strncmp,f,c
  7037  001BB6  2A08               	incf	??_strncmp+1,f,c
  7038  001BB8  C001  FFF6         	movff	strncmp@s1,tblptrl
  7039  001BBC  C002  FFF7         	movff	strncmp@s1+1,tblptrh
  7040  001BC0                     	if	0	;tblptru may be non-zero
  7041  001BC0                     	endif
  7042  001BC0                     	if	0	;tblptru may be non-zero
  7043  001BC0                     	endif
  7044  001BC0  0008               	tblrd		*
  7045  001BC2  50F5               	movf	tablat,w,c
  7046  001BC4  2407               	addwf	??_strncmp,w,c
  7047  001BC6  6E01               	movwf	?_strncmp,c
  7048  001BC8  0E00               	movlw	0
  7049  001BCA  2008               	addwfc	??_strncmp+1,w,c
  7050  001BCC  6E02               	movwf	?_strncmp+1,c
  7051  001BCE  0012               	return	
  7052  001BD0                     i2l1661:
  7053  001BD0  4A01               	infsnz	strncmp@s1,f,c
  7054  001BD2  2A02               	incf	strncmp@s1+1,f,c
  7055  001BD4  4A03               	infsnz	strncmp@s2,f,c
  7056  001BD6  2A04               	incf	strncmp@s2+1,f,c
  7057  001BD8                     i2l1659:
  7058  001BD8  0605               	decf	strncmp@len,f,c
  7059  001BDA  A0D8               	btfss	status,0,c
  7060  001BDC  0606               	decf	strncmp@len+1,f,c
  7061  001BDE  2805               	incf	strncmp@len,w,c
  7062  001BE0  E1CA               	bnz	i2l4258
  7063  001BE2  2806               	incf	strncmp@len+1,w,c
  7064  001BE4  A4D8               	btfss	status,2,c
  7065  001BE6  D7C7               	goto	i2l1660
  7066  001BE8  0E00               	movlw	0
  7067  001BEA  6E02               	movwf	?_strncmp+1,c
  7068  001BEC  0E00               	movlw	0
  7069  001BEE  6E01               	movwf	?_strncmp,c
  7070  001BF0  0012               	return	
  7071  001BF2                     __end_of_strncmp:
  7072                           	opt stack 0
  7073                           pclatu	equ	0xFFB
  7074                           pclath	equ	0xFFA
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           intcon2	equ	0xFF1
  7083                           postinc0	equ	0xFEE
  7084                           fsr0h	equ	0xFEA
  7085                           fsr0l	equ	0xFE9
  7086                           wreg	equ	0xFE8
  7087                           indf1	equ	0xFE7
  7088                           postdec1	equ	0xFE5
  7089                           plusw1	equ	0xFE3
  7090                           fsr1h	equ	0xFE2
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           plusw2	equ	0xFDB
  7096                           fsr2h	equ	0xFDA
  7097                           fsr2l	equ	0xFD9
  7098                           status	equ	0xFD8
  7099                           
  7100 ;; *************** function _sprintf *****************
  7101 ;; Defined at:
  7102 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  sp              2   40[COMRAM] PTR unsigned char 
  7105 ;;		 -> uart_receiv_isr@text(40), 
  7106 ;;  f               2   42[COMRAM] PTR const unsigned char 
  7107 ;;		 -> STR_34(13), 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  tmpval          4    0        struct .
  7110 ;;  cp              2   50[COMRAM] PTR const unsigned char 
  7111 ;;		 -> asctime@buf(27), STR_36(7), 
  7112 ;;  ap              2   47[COMRAM] PTR void [1]
  7113 ;;		 -> ?_sprintf(2), 
  7114 ;;  len             2    0        unsigned int 
  7115 ;;  val             2    0        unsigned int 
  7116 ;;  c               1   49[COMRAM] char 
  7117 ;;  flag            1   46[COMRAM] unsigned char 
  7118 ;;  prec            1    0        char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2   40[COMRAM] int 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7128 ;;      Params:         6       0       0       0       0       0       0
  7129 ;;      Locals:         6       0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0
  7131 ;;      Totals:        12       0       0       0       0       0       0
  7132 ;;Total ram usage:       12 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_uart_receiv_isr
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text32
  7142  0016A4                     __ptext32:
  7143                           	opt stack 0
  7144  0016A4                     _sprintf:
  7145                           	opt stack 25
  7146                           
  7147                           ;doprnt.c: 494: va_list ap;
  7148                           ;doprnt.c: 499: signed char c;
  7149                           ;doprnt.c: 506: signed char prec;
  7150                           ;doprnt.c: 508: unsigned char flag;
  7151                           ;doprnt.c: 523: union {
  7152                           ;doprnt.c: 524: unsigned long vd;
  7153                           ;doprnt.c: 525: double integ;
  7154                           ;doprnt.c: 526: } tmpval;
  7155                           ;doprnt.c: 528: unsigned int val;
  7156                           ;doprnt.c: 529: unsigned len;
  7157                           ;doprnt.c: 530: const char * cp;
  7158                           ;doprnt.c: 533: *ap = __va_start();
  7159                           
  7160                           ;incstack = 0
  7161  0016A4  0E2D               	movlw	low (?_sprintf+4)
  7162  0016A6  6E30               	movwf	sprintf@ap,c
  7163  0016A8  0E00               	movlw	high (?_sprintf+4)
  7164  0016AA  6E31               	movwf	sprintf@ap+1,c
  7165                           
  7166                           ;doprnt.c: 536: while(c = *f++) {
  7167  0016AC  D062               	goto	i2l1062
  7168  0016AE                     
  7169                           ;doprnt.c: 538: if(c != '%')
  7170  0016AE  0E25               	movlw	37
  7171  0016B0  1832               	xorwf	sprintf@c,w,c
  7172  0016B2  B4D8               	btfsc	status,2,c
  7173  0016B4  D009               	goto	i2l1052
  7174                           
  7175                           ;doprnt.c: 540: {
  7176                           ;doprnt.c: 541: ((*sp++ = (c)));
  7177  0016B6  C029  FFD9         	movff	sprintf@sp,fsr2l
  7178  0016BA  C02A  FFDA         	movff	sprintf@sp+1,fsr2h
  7179  0016BE  C032  FFDF         	movff	sprintf@c,indf2
  7180  0016C2  4A29               	infsnz	sprintf@sp,f,c
  7181  0016C4  2A2A               	incf	sprintf@sp+1,f,c
  7182                           
  7183                           ;doprnt.c: 542: continue;
  7184  0016C6  D055               	goto	i2l1062
  7185  0016C8                     i2l1052:
  7186                           
  7187                           ;doprnt.c: 543: }
  7188                           ;doprnt.c: 548: flag = 0;
  7189  0016C8  0E00               	movlw	0
  7190  0016CA  6E2F               	movwf	sprintf@flag,c
  7191                           
  7192                           ;doprnt.c: 635: switch(c = *f++) {
  7193  0016CC  D042               	goto	i2l1053
  7194  0016CE                     
  7195                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7196  0016CE  C030  FFD9         	movff	sprintf@ap,fsr2l
  7197  0016D2  C031  FFDA         	movff	sprintf@ap+1,fsr2h
  7198  0016D6  CFDE F033          	movff	postinc2,sprintf@cp
  7199  0016DA  CFDD F034          	movff	postdec2,sprintf@cp+1
  7200  0016DE  0E02               	movlw	2
  7201  0016E0  2630               	addwf	sprintf@ap,f,c
  7202  0016E2  0E00               	movlw	0
  7203  0016E4  2231               	addwfc	sprintf@ap+1,f,c
  7204                           
  7205                           ;doprnt.c: 740: if(!cp)
  7206  0016E6  5033               	movf	sprintf@cp,w,c
  7207  0016E8  1034               	iorwf	sprintf@cp+1,w,c
  7208  0016EA  A4D8               	btfss	status,2,c
  7209  0016EC  D01E               	goto	i2l1058
  7210                           
  7211                           ;doprnt.c: 741: cp = "(null)";
  7212  0016EE  0EC3               	movlw	low STR_36
  7213  0016F0  6E33               	movwf	sprintf@cp,c
  7214  0016F2  0E7F               	movlw	high STR_36
  7215  0016F4  6E34               	movwf	sprintf@cp+1,c
  7216                           
  7217                           ;doprnt.c: 777: while(*cp)
  7218  0016F6  D019               	goto	i2l1058
  7219  0016F8                     
  7220                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
  7221  0016F8  C033  FFF6         	movff	sprintf@cp,tblptrl
  7222  0016FC  C034  FFF7         	movff	sprintf@cp+1,tblptrh
  7223  001700  6AF8               	clrf	tblptru,c
  7224  001702  C029  FFD9         	movff	sprintf@sp,fsr2l
  7225  001706  C02A  FFDA         	movff	sprintf@sp+1,fsr2h
  7226  00170A  0E05               	movlw	(high __ramtop+-1)
  7227  00170C  64F7               	cpfsgt	tblptrh,c
  7228  00170E  D003               	bra	i2u412_47
  7229  001710  0008               	tblrd		*
  7230  001712  50F5               	movf	tablat,w,c
  7231  001714  D005               	bra	i2u412_40
  7232  001716                     i2u412_47:
  7233  001716  CFF6 FFE1          	movff	tblptrl,fsr1l
  7234  00171A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7235  00171E  50E7               	movf	indf1,w,c
  7236  001720                     i2u412_40:
  7237  001720  6EDF               	movwf	indf2,c
  7238  001722  4A33               	infsnz	sprintf@cp,f,c
  7239  001724  2A34               	incf	sprintf@cp+1,f,c
  7240  001726  4A29               	infsnz	sprintf@sp,f,c
  7241  001728  2A2A               	incf	sprintf@sp+1,f,c
  7242  00172A                     i2l1058:
  7243  00172A  C033  FFF6         	movff	sprintf@cp,tblptrl
  7244  00172E  C034  FFF7         	movff	sprintf@cp+1,tblptrh
  7245  001732  6AF8               	clrf	tblptru,c
  7246  001734  0E05               	movlw	(high __ramtop+-1)
  7247  001736  64F7               	cpfsgt	tblptrh,c
  7248  001738  D003               	bra	i2u413_47
  7249  00173A  0008               	tblrd		*
  7250  00173C  50F5               	movf	tablat,w,c
  7251  00173E  D005               	bra	i2u413_40
  7252  001740                     i2u413_47:
  7253  001740  CFF6 FFE1          	movff	tblptrl,fsr1l
  7254  001744  CFF7 FFE2          	movff	tblptrh,fsr1h
  7255  001748  50E7               	movf	indf1,w,c
  7256  00174A                     i2u413_40:
  7257  00174A  0900               	iorlw	0
  7258  00174C  B4D8               	btfsc	status,2,c
  7259  00174E  D011               	goto	i2l1062
  7260  001750  D7D3               	goto	i2l1059
  7261  001752                     i2l1053:
  7262  001752  C02B  FFF6         	movff	sprintf@f,tblptrl
  7263  001756  C02C  FFF7         	movff	sprintf@f+1,tblptrh
  7264  00175A  4A2B               	infsnz	sprintf@f,f,c
  7265  00175C  2A2C               	incf	sprintf@f+1,f,c
  7266  00175E                     	if	0	;tblptru may be non-zero
  7267  00175E                     	endif
  7268  00175E                     	if	0	;tblptru may be non-zero
  7269  00175E                     	endif
  7270  00175E  0008               	tblrd		*
  7271  001760  CFF5 F032          	movff	tablat,sprintf@c
  7272  001764  5032               	movf	sprintf@c,w,c
  7273                           
  7274                           ; Switch size 1, requested type "space"
  7275                           ; Number of cases is 2, Range of values is 0 to 115
  7276                           ; switch strategies available:
  7277                           ; Name         Instructions Cycles
  7278                           ; simple_byte            7     4 (average)
  7279                           ;	Chosen strategy is simple_byte
  7280  001766  0A00               	xorlw	0	; case 0
  7281  001768  B4D8               	btfsc	status,2,c
  7282  00176A  D00F               	goto	i2u415_40
  7283  00176C  0A73               	xorlw	115	; case 115
  7284  00176E  B4D8               	btfsc	status,2,c
  7285  001770  D7AE               	goto	i2l1056
  7286  001772                     i2l1062:
  7287                           
  7288                           ;doprnt.c: 1422: {
  7289  001772  C02B  FFF6         	movff	sprintf@f,tblptrl
  7290  001776  C02C  FFF7         	movff	sprintf@f+1,tblptrh
  7291  00177A  4A2B               	infsnz	sprintf@f,f,c
  7292  00177C  2A2C               	incf	sprintf@f+1,f,c
  7293  00177E                     	if	0	;tblptru may be non-zero
  7294  00177E                     	endif
  7295  00177E                     	if	0	;tblptru may be non-zero
  7296  00177E                     	endif
  7297  00177E  0008               	tblrd		*
  7298  001780  CFF5 F032          	movff	tablat,sprintf@c
  7299  001784  5032               	movf	sprintf@c,w,c
  7300  001786  A4D8               	btfss	status,2,c
  7301  001788  D792               	goto	i2l1051
  7302  00178A                     i2u415_40:
  7303                           
  7304                           ;doprnt.c: 1538: *sp = 0;
  7305                           
  7306                           ;doprnt.c: 1469: }
  7307                           ;doprnt.c: 1533: }
  7308                           ;doprnt.c: 1535: alldone:
  7309  00178A  C029  FFD9         	movff	sprintf@sp,fsr2l
  7310  00178E  C02A  FFDA         	movff	sprintf@sp+1,fsr2h
  7311  001792  0E00               	movlw	0
  7312  001794  6EDF               	movwf	indf2,c
  7313  001796  0012               	return	
  7314  001798                     __end_of_sprintf:
  7315                           	opt stack 0
  7316                           pclatu	equ	0xFFB
  7317                           pclath	equ	0xFFA
  7318                           tblptru	equ	0xFF8
  7319                           tblptrh	equ	0xFF7
  7320                           tblptrl	equ	0xFF6
  7321                           tablat	equ	0xFF5
  7322                           prodh	equ	0xFF4
  7323                           prodl	equ	0xFF3
  7324                           intcon	equ	0xFF2
  7325                           intcon2	equ	0xFF1
  7326                           postinc0	equ	0xFEE
  7327                           fsr0h	equ	0xFEA
  7328                           fsr0l	equ	0xFE9
  7329                           wreg	equ	0xFE8
  7330                           indf1	equ	0xFE7
  7331                           postdec1	equ	0xFE5
  7332                           plusw1	equ	0xFE3
  7333                           fsr1h	equ	0xFE2
  7334                           fsr1l	equ	0xFE1
  7335                           indf2	equ	0xFDF
  7336                           postinc2	equ	0xFDE
  7337                           postdec2	equ	0xFDD
  7338                           plusw2	equ	0xFDB
  7339                           fsr2h	equ	0xFDA
  7340                           fsr2l	equ	0xFD9
  7341                           status	equ	0xFD8
  7342                           
  7343 ;; *************** function _setTimeStemp *****************
  7344 ;; Defined at:
  7345 ;;		line 16 in file "timeStemp.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  time            4    0[COMRAM] unsigned long 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		None
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7359 ;;      Params:         4       0       0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0
  7362 ;;      Totals:         4       0       0       0       0       0       0
  7363 ;;Total ram usage:        4 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_uart_receiv_isr
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text33
  7373  0023EC                     __ptext33:
  7374                           	opt stack 0
  7375  0023EC                     _setTimeStemp:
  7376                           	opt stack 25
  7377                           
  7378                           ;timeStemp.c: 18: timestamp=time;
  7379                           
  7380                           ;incstack = 0
  7381  0023EC  C001  F0C7         	movff	setTimeStemp@time,_timestamp
  7382  0023F0  C002  F0C8         	movff	setTimeStemp@time+1,_timestamp+1
  7383  0023F4  C003  F0C9         	movff	setTimeStemp@time+2,_timestamp+2
  7384  0023F8  C004  F0CA         	movff	setTimeStemp@time+3,_timestamp+3
  7385  0023FC  0012               	return		;funcret
  7386  0023FE                     __end_of_setTimeStemp:
  7387                           	opt stack 0
  7388                           pclatu	equ	0xFFB
  7389                           pclath	equ	0xFFA
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           intcon	equ	0xFF2
  7397                           intcon2	equ	0xFF1
  7398                           postinc0	equ	0xFEE
  7399                           fsr0h	equ	0xFEA
  7400                           fsr0l	equ	0xFE9
  7401                           wreg	equ	0xFE8
  7402                           indf1	equ	0xFE7
  7403                           postdec1	equ	0xFE5
  7404                           plusw1	equ	0xFE3
  7405                           fsr1h	equ	0xFE2
  7406                           fsr1l	equ	0xFE1
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           postdec2	equ	0xFDD
  7410                           plusw2	equ	0xFDB
  7411                           fsr2h	equ	0xFDA
  7412                           fsr2l	equ	0xFD9
  7413                           status	equ	0xFD8
  7414                           
  7415 ;; *************** function _memset *****************
  7416 ;; Defined at:
  7417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\memset.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  p1              2    0[COMRAM] PTR void 
  7420 ;;		 -> uart_receiv_isr@in_buff(20), 
  7421 ;;  c               2    2[COMRAM] int 
  7422 ;;  n               2    4[COMRAM] unsigned int 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  p               2    6[COMRAM] PTR unsigned char 
  7425 ;;		 -> uart_receiv_isr@in_buff(20), 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  2    0[COMRAM] PTR void 
  7428 ;; Registers used:
  7429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7435 ;;      Params:         6       0       0       0       0       0       0
  7436 ;;      Locals:         2       0       0       0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0
  7438 ;;      Totals:         8       0       0       0       0       0       0
  7439 ;;Total ram usage:        8 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_uart_receiv_isr
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text34
  7449  00224E                     __ptext34:
  7450                           	opt stack 0
  7451  00224E                     _memset:
  7452                           	opt stack 25
  7453                           
  7454                           ;incstack = 0
  7455  00224E  C001  F007         	movff	memset@p1,memset@p
  7456  002252  C002  F008         	movff	memset@p1+1,memset@p+1
  7457  002256  D008               	goto	i2l1533
  7458  002258                     i2l4250:
  7459  002258  C007  FFD9         	movff	memset@p,fsr2l
  7460  00225C  C008  FFDA         	movff	memset@p+1,fsr2h
  7461  002260  C003  FFDF         	movff	memset@c,indf2
  7462  002264  4A07               	infsnz	memset@p,f,c
  7463  002266  2A08               	incf	memset@p+1,f,c
  7464  002268                     i2l1533:
  7465  002268  0605               	decf	memset@n,f,c
  7466  00226A  A0D8               	btfss	status,0,c
  7467  00226C  0606               	decf	memset@n+1,f,c
  7468  00226E  2805               	incf	memset@n,w,c
  7469  002270  E1F3               	bnz	i2l4250
  7470  002272  2806               	incf	memset@n+1,w,c
  7471  002274  B4D8               	btfsc	status,2,c
  7472  002276  0012               	return	
  7473  002278  D7EF               	goto	i2l1534
  7474  00227A                     __end_of_memset:
  7475                           	opt stack 0
  7476                           pclatu	equ	0xFFB
  7477                           pclath	equ	0xFFA
  7478                           tblptru	equ	0xFF8
  7479                           tblptrh	equ	0xFF7
  7480                           tblptrl	equ	0xFF6
  7481                           tablat	equ	0xFF5
  7482                           prodh	equ	0xFF4
  7483                           prodl	equ	0xFF3
  7484                           intcon	equ	0xFF2
  7485                           intcon2	equ	0xFF1
  7486                           postinc0	equ	0xFEE
  7487                           fsr0h	equ	0xFEA
  7488                           fsr0l	equ	0xFE9
  7489                           wreg	equ	0xFE8
  7490                           indf1	equ	0xFE7
  7491                           postdec1	equ	0xFE5
  7492                           plusw1	equ	0xFE3
  7493                           fsr1h	equ	0xFE2
  7494                           fsr1l	equ	0xFE1
  7495                           indf2	equ	0xFDF
  7496                           postinc2	equ	0xFDE
  7497                           postdec2	equ	0xFDD
  7498                           plusw2	equ	0xFDB
  7499                           fsr2h	equ	0xFDA
  7500                           fsr2l	equ	0xFD9
  7501                           status	equ	0xFD8
  7502                           
  7503 ;; *************** function _localtime *****************
  7504 ;; Defined at:
  7505 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ctime.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  tp              2   23[COMRAM] PTR const long 
  7508 ;;		 -> uart_receiv_isr@aa(4), 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  t               4   29[COMRAM] long 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  2   23[COMRAM] PTR struct tm
  7513 ;; Registers used:
  7514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7520 ;;      Params:         2       0       0       0       0       0       0
  7521 ;;      Locals:         4       0       0       0       0       0       0
  7522 ;;      Temps:          4       0       0       0       0       0       0
  7523 ;;      Totals:        10       0       0       0       0       0       0
  7524 ;;Total ram usage:       10 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    3
  7527 ;; This function calls:
  7528 ;;		___lmul
  7529 ;;		_gmtime
  7530 ;; This function is called by:
  7531 ;;		_uart_receiv_isr
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text35
  7536  001BF2                     __ptext35:
  7537                           	opt stack 0
  7538  001BF2                     _localtime:
  7539                           	opt stack 22
  7540                           
  7541                           ;incstack = 0
  7542  001BF2  C018  FFD9         	movff	localtime@tp,fsr2l
  7543  001BF6  C019  FFDA         	movff	localtime@tp+1,fsr2h
  7544  001BFA  CFDE F01A          	movff	postinc2,??_localtime
  7545  001BFE  CFDE F01B          	movff	postinc2,??_localtime+1
  7546  001C02  CFDE F01C          	movff	postinc2,??_localtime+2
  7547  001C06  CFDE F01D          	movff	postinc2,??_localtime+3
  7548  001C0A  C051  F001         	movff	_time_zone,___lmul@multiplier
  7549  001C0E  C052  F002         	movff	_time_zone+1,___lmul@multiplier+1
  7550  001C12  0E00               	movlw	0
  7551  001C14  BE02               	btfsc	___lmul@multiplier+1,7,c
  7552  001C16  0EFF               	movlw	-1
  7553  001C18  6E03               	movwf	___lmul@multiplier+2,c
  7554  001C1A  6E04               	movwf	___lmul@multiplier+3,c
  7555  001C1C  0E3C               	movlw	60
  7556  001C1E  6E05               	movwf	___lmul@multiplicand,c
  7557  001C20  0E00               	movlw	0
  7558  001C22  6E06               	movwf	___lmul@multiplicand+1,c
  7559  001C24  0E00               	movlw	0
  7560  001C26  6E07               	movwf	___lmul@multiplicand+2,c
  7561  001C28  0E00               	movlw	0
  7562  001C2A  6E08               	movwf	___lmul@multiplicand+3,c
  7563  001C2C  ECED  F00F         	call	___lmul	;wreg free
  7564  001C30  1E01               	comf	?___lmul,f,c
  7565  001C32  1E02               	comf	?___lmul+1,f,c
  7566  001C34  1E03               	comf	?___lmul+2,f,c
  7567  001C36  1E04               	comf	?___lmul+3,f,c
  7568  001C38  2A01               	incf	?___lmul,f,c
  7569  001C3A  0E00               	movlw	0
  7570  001C3C  2202               	addwfc	?___lmul+1,f,c
  7571  001C3E  2203               	addwfc	?___lmul+2,f,c
  7572  001C40  2204               	addwfc	?___lmul+3,f,c
  7573  001C42  501A               	movf	??_localtime,w,c
  7574  001C44  2401               	addwf	?___lmul,w,c
  7575  001C46  6E1E               	movwf	localtime@t,c
  7576  001C48  501B               	movf	??_localtime+1,w,c
  7577  001C4A  2002               	addwfc	?___lmul+1,w,c
  7578  001C4C  6E1F               	movwf	localtime@t+1,c
  7579  001C4E  501C               	movf	??_localtime+2,w,c
  7580  001C50  2003               	addwfc	?___lmul+2,w,c
  7581  001C52  6E20               	movwf	localtime@t+2,c
  7582  001C54  501D               	movf	??_localtime+3,w,c
  7583  001C56  2004               	addwfc	?___lmul+3,w,c
  7584  001C58  6E21               	movwf	localtime@t+3,c
  7585  001C5A  0E1E               	movlw	low localtime@t
  7586  001C5C  6E0F               	movwf	gmtime@tp,c
  7587  001C5E  0E00               	movlw	high localtime@t
  7588  001C60  6E10               	movwf	gmtime@tp+1,c
  7589  001C62  EC35  F007         	call	_gmtime	;wreg free
  7590  001C66  C00F  F018         	movff	?_gmtime,?_localtime
  7591  001C6A  C010  F019         	movff	?_gmtime+1,?_localtime+1
  7592  001C6E  0012               	return	
  7593  001C70                     __end_of_localtime:
  7594                           	opt stack 0
  7595                           pclatu	equ	0xFFB
  7596                           pclath	equ	0xFFA
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           prodh	equ	0xFF4
  7602                           prodl	equ	0xFF3
  7603                           intcon	equ	0xFF2
  7604                           intcon2	equ	0xFF1
  7605                           postinc0	equ	0xFEE
  7606                           fsr0h	equ	0xFEA
  7607                           fsr0l	equ	0xFE9
  7608                           wreg	equ	0xFE8
  7609                           indf1	equ	0xFE7
  7610                           postdec1	equ	0xFE5
  7611                           plusw1	equ	0xFE3
  7612                           fsr1h	equ	0xFE2
  7613                           fsr1l	equ	0xFE1
  7614                           indf2	equ	0xFDF
  7615                           postinc2	equ	0xFDE
  7616                           postdec2	equ	0xFDD
  7617                           plusw2	equ	0xFDB
  7618                           fsr2h	equ	0xFDA
  7619                           fsr2l	equ	0xFD9
  7620                           status	equ	0xFD8
  7621                           
  7622 ;; *************** function _gmtime *****************
  7623 ;; Defined at:
  7624 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ctime.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  tp              2   14[COMRAM] PTR const long 
  7627 ;;		 -> localtime@t(4), 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  tc              4   19[COMRAM] struct .
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  2   14[COMRAM] PTR struct tm
  7632 ;; Registers used:
  7633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7639 ;;      Params:         2       0       0       0       0       0       0
  7640 ;;      Locals:         4       0       0       0       0       0       0
  7641 ;;      Temps:          3       0       0       0       0       0       0
  7642 ;;      Totals:         9       0       0       0       0       0       0
  7643 ;;Total ram usage:        9 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    2
  7646 ;; This function calls:
  7647 ;;		___aldiv
  7648 ;;		___almod
  7649 ;;		___awmod
  7650 ;;		_dylen
  7651 ;; This function is called by:
  7652 ;;		_localtime
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text36
  7657  000E6A                     __ptext36:
  7658                           	opt stack 0
  7659  000E6A                     _gmtime:
  7660                           	opt stack 22
  7661                           
  7662                           ;incstack = 0
  7663  000E6A  C00F  FFD9         	movff	gmtime@tp,fsr2l
  7664  000E6E  C010  FFDA         	movff	gmtime@tp+1,fsr2h
  7665  000E72  CFDE F014          	movff	postinc2,gmtime@tc
  7666  000E76  CFDE F015          	movff	postinc2,gmtime@tc+1
  7667  000E7A  CFDE F016          	movff	postinc2,gmtime@tc+2
  7668  000E7E  CFDE F017          	movff	postinc2,gmtime@tc+3
  7669  000E82  C014  F001         	movff	gmtime@tc,___almod@dividend
  7670  000E86  C015  F002         	movff	gmtime@tc+1,___almod@dividend+1
  7671  000E8A  C016  F003         	movff	gmtime@tc+2,___almod@dividend+2
  7672  000E8E  C017  F004         	movff	gmtime@tc+3,___almod@dividend+3
  7673  000E92  0E3C               	movlw	60
  7674  000E94  6E05               	movwf	___almod@divisor,c
  7675  000E96  0E00               	movlw	0
  7676  000E98  6E06               	movwf	___almod@divisor+1,c
  7677  000E9A  0E00               	movlw	0
  7678  000E9C  6E07               	movwf	___almod@divisor+2,c
  7679  000E9E  0E00               	movlw	0
  7680  000EA0  6E08               	movwf	___almod@divisor+3,c
  7681  000EA2  EC32  F00C         	call	___almod	;wreg free
  7682  000EA6  C001  F0E3         	movff	?___almod,gmtime@tim
  7683  000EAA  C002  F0E4         	movff	?___almod+1,gmtime@tim+1
  7684  000EAE  C014  F001         	movff	gmtime@tc,___aldiv@dividend
  7685  000EB2  C015  F002         	movff	gmtime@tc+1,___aldiv@dividend+1
  7686  000EB6  C016  F003         	movff	gmtime@tc+2,___aldiv@dividend+2
  7687  000EBA  C017  F004         	movff	gmtime@tc+3,___aldiv@dividend+3
  7688  000EBE  0E3C               	movlw	60
  7689  000EC0  6E05               	movwf	___aldiv@divisor,c
  7690  000EC2  0E00               	movlw	0
  7691  000EC4  6E06               	movwf	___aldiv@divisor+1,c
  7692  000EC6  0E00               	movlw	0
  7693  000EC8  6E07               	movwf	___aldiv@divisor+2,c
  7694  000ECA  0E00               	movlw	0
  7695  000ECC  6E08               	movwf	___aldiv@divisor+3,c
  7696  000ECE  ECCC  F00B         	call	___aldiv	;wreg free
  7697  000ED2  C001  F014         	movff	?___aldiv,gmtime@tc
  7698  000ED6  C002  F015         	movff	?___aldiv+1,gmtime@tc+1
  7699  000EDA  C003  F016         	movff	?___aldiv+2,gmtime@tc+2
  7700  000EDE  C004  F017         	movff	?___aldiv+3,gmtime@tc+3
  7701  000EE2  C014  F001         	movff	gmtime@tc,___almod@dividend
  7702  000EE6  C015  F002         	movff	gmtime@tc+1,___almod@dividend+1
  7703  000EEA  C016  F003         	movff	gmtime@tc+2,___almod@dividend+2
  7704  000EEE  C017  F004         	movff	gmtime@tc+3,___almod@dividend+3
  7705  000EF2  0E3C               	movlw	60
  7706  000EF4  6E05               	movwf	___almod@divisor,c
  7707  000EF6  0E00               	movlw	0
  7708  000EF8  6E06               	movwf	___almod@divisor+1,c
  7709  000EFA  0E00               	movlw	0
  7710  000EFC  6E07               	movwf	___almod@divisor+2,c
  7711  000EFE  0E00               	movlw	0
  7712  000F00  6E08               	movwf	___almod@divisor+3,c
  7713  000F02  EC32  F00C         	call	___almod	;wreg free
  7714  000F06  C001  F0E5         	movff	?___almod,gmtime@tim+2
  7715  000F0A  C002  F0E6         	movff	?___almod+1,gmtime@tim+3
  7716  000F0E  C014  F001         	movff	gmtime@tc,___aldiv@dividend
  7717  000F12  C015  F002         	movff	gmtime@tc+1,___aldiv@dividend+1
  7718  000F16  C016  F003         	movff	gmtime@tc+2,___aldiv@dividend+2
  7719  000F1A  C017  F004         	movff	gmtime@tc+3,___aldiv@dividend+3
  7720  000F1E  0E3C               	movlw	60
  7721  000F20  6E05               	movwf	___aldiv@divisor,c
  7722  000F22  0E00               	movlw	0
  7723  000F24  6E06               	movwf	___aldiv@divisor+1,c
  7724  000F26  0E00               	movlw	0
  7725  000F28  6E07               	movwf	___aldiv@divisor+2,c
  7726  000F2A  0E00               	movlw	0
  7727  000F2C  6E08               	movwf	___aldiv@divisor+3,c
  7728  000F2E  ECCC  F00B         	call	___aldiv	;wreg free
  7729  000F32  C001  F014         	movff	?___aldiv,gmtime@tc
  7730  000F36  C002  F015         	movff	?___aldiv+1,gmtime@tc+1
  7731  000F3A  C003  F016         	movff	?___aldiv+2,gmtime@tc+2
  7732  000F3E  C004  F017         	movff	?___aldiv+3,gmtime@tc+3
  7733  000F42  C014  F001         	movff	gmtime@tc,___almod@dividend
  7734  000F46  C015  F002         	movff	gmtime@tc+1,___almod@dividend+1
  7735  000F4A  C016  F003         	movff	gmtime@tc+2,___almod@dividend+2
  7736  000F4E  C017  F004         	movff	gmtime@tc+3,___almod@dividend+3
  7737  000F52  0E18               	movlw	24
  7738  000F54  6E05               	movwf	___almod@divisor,c
  7739  000F56  0E00               	movlw	0
  7740  000F58  6E06               	movwf	___almod@divisor+1,c
  7741  000F5A  0E00               	movlw	0
  7742  000F5C  6E07               	movwf	___almod@divisor+2,c
  7743  000F5E  0E00               	movlw	0
  7744  000F60  6E08               	movwf	___almod@divisor+3,c
  7745  000F62  EC32  F00C         	call	___almod	;wreg free
  7746  000F66  C001  F0E7         	movff	?___almod,gmtime@tim+4
  7747  000F6A  C002  F0E8         	movff	?___almod+1,gmtime@tim+5
  7748  000F6E  C014  F001         	movff	gmtime@tc,___aldiv@dividend
  7749  000F72  C015  F002         	movff	gmtime@tc+1,___aldiv@dividend+1
  7750  000F76  C016  F003         	movff	gmtime@tc+2,___aldiv@dividend+2
  7751  000F7A  C017  F004         	movff	gmtime@tc+3,___aldiv@dividend+3
  7752  000F7E  0E18               	movlw	24
  7753  000F80  6E05               	movwf	___aldiv@divisor,c
  7754  000F82  0E00               	movlw	0
  7755  000F84  6E06               	movwf	___aldiv@divisor+1,c
  7756  000F86  0E00               	movlw	0
  7757  000F88  6E07               	movwf	___aldiv@divisor+2,c
  7758  000F8A  0E00               	movlw	0
  7759  000F8C  6E08               	movwf	___aldiv@divisor+3,c
  7760  000F8E  ECCC  F00B         	call	___aldiv	;wreg free
  7761  000F92  C001  F0E9         	movff	?___aldiv,gmtime@tim+6
  7762  000F96  C002  F0EA         	movff	?___aldiv+1,gmtime@tim+7
  7763  000F9A  0E04               	movlw	4
  7764  000F9C  0100               	movlb	0	; () banked
  7765  000F9E  25E9               	addwf	(gmtime@tim+6)& (0+255),w,b
  7766  000FA0  6E01               	movwf	___awmod@dividend,c
  7767  000FA2  0E00               	movlw	0
  7768  000FA4  0100               	movlb	0	; () banked
  7769  000FA6  21EA               	addwfc	(gmtime@tim+7)& (0+255),w,b
  7770  000FA8  6E02               	movwf	___awmod@dividend+1,c
  7771  000FAA  0E00               	movlw	0
  7772  000FAC  6E04               	movwf	___awmod@divisor+1,c
  7773  000FAE  0E07               	movlw	7
  7774  000FB0  6E03               	movwf	___awmod@divisor,c
  7775  000FB2  ECE8  F00E         	call	___awmod	;wreg free
  7776  000FB6  C001  F0EF         	movff	?___awmod,gmtime@tim+12
  7777  000FBA  C002  F0F0         	movff	?___awmod+1,gmtime@tim+13
  7778  000FBE  0E00               	movlw	0
  7779  000FC0  0100               	movlb	0	; () banked
  7780  000FC2  6FEE               	movwf	(gmtime@tim+11)& (0+255),b
  7781  000FC4  0E46               	movlw	70
  7782  000FC6  6FED               	movwf	(gmtime@tim+10)& (0+255),b
  7783  000FC8  D00F               	goto	i2l1293
  7784  000FCA                     
  7785                           ; BSR set to: 0
  7786                           
  7787                           ; BSR set to: 0
  7788  000FCA  C0ED  F006         	movff	gmtime@tim+10,dylen@yr
  7789  000FCE  C0EE  F007         	movff	gmtime@tim+11,dylen@yr+1
  7790  000FD2  EC8C  F00F         	call	_dylen	;wreg free
  7791  000FD6  5006               	movf	?_dylen,w,c
  7792  000FD8  0100               	movlb	0	; () banked
  7793  000FDA  5FE9               	subwf	(gmtime@tim+6)& (0+255),f,b
  7794  000FDC  5007               	movf	?_dylen+1,w,c
  7795  000FDE  0100               	movlb	0	; () banked
  7796  000FE0  5BEA               	subwfb	(gmtime@tim+7)& (0+255),f,b
  7797                           
  7798                           ; BSR set to: 0
  7799  000FE2  0100               	movlb	0	; () banked
  7800  000FE4  4BED               	infsnz	(gmtime@tim+10)& (0+255),f,b
  7801  000FE6  2BEE               	incf	(gmtime@tim+11)& (0+255),f,b
  7802  000FE8                     i2l1293:
  7803                           
  7804                           ; BSR set to: 0
  7805                           
  7806                           ; BSR set to: 0
  7807  000FE8  C0ED  F006         	movff	gmtime@tim+10,dylen@yr
  7808  000FEC  C0EE  F007         	movff	gmtime@tim+11,dylen@yr+1
  7809  000FF0  EC8C  F00F         	call	_dylen	;wreg free
  7810  000FF4  5006               	movf	?_dylen,w,c
  7811  000FF6  0100               	movlb	0	; () banked
  7812  000FF8  5DE9               	subwf	(gmtime@tim+6)& (0+255),w,b
  7813  000FFA  0100               	movlb	0	; () banked
  7814  000FFC  51EA               	movf	(gmtime@tim+7)& (0+255),w,b
  7815  000FFE  0A80               	xorlw	128
  7816  001000  6E11               	movwf	??_gmtime& (0+255),c
  7817  001002  5007               	movf	?_dylen+1,w,c
  7818  001004  0A80               	xorlw	128
  7819  001006  5811               	subwfb	??_gmtime& (0+255),w,c
  7820  001008  B0D8               	btfsc	status,0,c
  7821  00100A  D7DF               	goto	i2l1294
  7822                           
  7823                           ; BSR set to: 0
  7824                           
  7825                           ; BSR set to: 0
  7826  00100C  C0ED  F006         	movff	gmtime@tim+10,dylen@yr
  7827  001010  C0EE  F007         	movff	gmtime@tim+11,dylen@yr+1
  7828  001014  EC8C  F00F         	call	_dylen	;wreg free
  7829  001018  5006               	movf	?_dylen,w,c
  7830  00101A  0B02               	andlw	2
  7831  00101C  6E14               	movwf	gmtime@tc,c
  7832  00101E  C0E9  F0F1         	movff	gmtime@tim+6,gmtime@tim+14
  7833  001022  C0EA  F0F2         	movff	gmtime@tim+7,gmtime@tim+15
  7834  001026  0E00               	movlw	0
  7835  001028  0100               	movlb	0	; () banked
  7836  00102A  6FEC               	movwf	(gmtime@tim+9)& (0+255),b
  7837  00102C  0E00               	movlw	0
  7838  00102E  6FEB               	movwf	(gmtime@tim+8)& (0+255),b
  7839  001030  D00A               	goto	i2l1296
  7840  001032                     
  7841                           ; BSR set to: 0
  7842                           
  7843                           ; BSR set to: 0
  7844  001032  5015               	movf	gmtime@tc+1,w,c
  7845  001034  0100               	movlb	0	; () banked
  7846  001036  5FE9               	subwf	(gmtime@tim+6)& (0+255),f,b
  7847  001038  0E00               	movlw	0
  7848  00103A  5BEA               	subwfb	(gmtime@tim+7)& (0+255),f,b
  7849                           
  7850                           ; BSR set to: 0
  7851  00103C  0100               	movlb	0	; () banked
  7852  00103E  4BEB               	infsnz	(gmtime@tim+8)& (0+255),f,b
  7853  001040  2BEC               	incf	(gmtime@tim+9)& (0+255),f,b
  7854                           
  7855                           ; BSR set to: 0
  7856  001042  90D8               	bcf	status,0,c
  7857  001044  3214               	rrcf	gmtime@tc,f,c
  7858  001046                     i2l1296:
  7859                           
  7860                           ; BSR set to: 0
  7861                           
  7862                           ; BSR set to: 0
  7863  001046  0E03               	movlw	low _moninit
  7864  001048  0100               	movlb	0	; () banked
  7865  00104A  25EB               	addwf	(gmtime@tim+8)& (0+255),w,b
  7866  00104C  6EF6               	movwf	tblptrl,c
  7867  00104E  0E7F               	movlw	high _moninit
  7868  001050  21EC               	addwfc	(gmtime@tim+9)& (0+255),w,b
  7869  001052  6EF7               	movwf	tblptrh,c
  7870  001054                     	if	0	;There are less than 3 active tblptr bytes
  7871  001054                     	endif
  7872  001054  0008               	tblrd		*
  7873  001056  50F5               	movf	tablat,w,c
  7874  001058  1014               	iorwf	gmtime@tc,w,c
  7875  00105A  6E15               	movwf	gmtime@tc+1,c
  7876  00105C  5015               	movf	gmtime@tc+1,w,c
  7877  00105E  6E11               	movwf	??_gmtime& (0+255),c
  7878  001060  6A12               	clrf	(??_gmtime+1)& (0+255),c
  7879  001062  5011               	movf	??_gmtime,w,c
  7880  001064  0100               	movlb	0	; () banked
  7881  001066  5DE9               	subwf	(gmtime@tim+6)& (0+255),w,b
  7882  001068  0100               	movlb	0	; () banked
  7883  00106A  51EA               	movf	(gmtime@tim+7)& (0+255),w,b
  7884  00106C  0A80               	xorlw	128
  7885  00106E  6E13               	movwf	(??_gmtime+2)& (0+255),c
  7886  001070  5012               	movf	??_gmtime+1,w,c
  7887  001072  0A80               	xorlw	128
  7888  001074  5813               	subwfb	(??_gmtime+2)& (0+255),w,c
  7889  001076  B0D8               	btfsc	status,0,c
  7890  001078  D7DC               	goto	i2l1297
  7891                           
  7892                           ; BSR set to: 0
  7893                           
  7894                           ; BSR set to: 0
  7895  00107A  0100               	movlb	0	; () banked
  7896  00107C  4BE9               	infsnz	(gmtime@tim+6)& (0+255),f,b
  7897  00107E  2BEA               	incf	(gmtime@tim+7)& (0+255),f,b
  7898                           
  7899                           ; BSR set to: 0
  7900  001080  0EE3               	movlw	low gmtime@tim
  7901  001082  6E0F               	movwf	?_gmtime,c
  7902  001084  0E00               	movlw	high gmtime@tim
  7903  001086  6E10               	movwf	?_gmtime+1,c
  7904  001088  0012               	return	
  7905  00108A                     __end_of_gmtime:
  7906                           	opt stack 0
  7907                           pclatu	equ	0xFFB
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           intcon2	equ	0xFF1
  7917                           postinc0	equ	0xFEE
  7918                           fsr0h	equ	0xFEA
  7919                           fsr0l	equ	0xFE9
  7920                           wreg	equ	0xFE8
  7921                           indf1	equ	0xFE7
  7922                           postdec1	equ	0xFE5
  7923                           plusw1	equ	0xFE3
  7924                           fsr1h	equ	0xFE2
  7925                           fsr1l	equ	0xFE1
  7926                           indf2	equ	0xFDF
  7927                           postinc2	equ	0xFDE
  7928                           postdec2	equ	0xFDD
  7929                           plusw2	equ	0xFDB
  7930                           fsr2h	equ	0xFDA
  7931                           fsr2l	equ	0xFD9
  7932                           status	equ	0xFD8
  7933                           
  7934 ;; *************** function _dylen *****************
  7935 ;; Defined at:
  7936 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ctime.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  yr              2    5[COMRAM] unsigned int 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  2    5[COMRAM] int 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7950 ;;      Params:         2       0       0       0       0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0
  7952 ;;      Temps:          2       0       0       0       0       0       0
  7953 ;;      Totals:         4       0       0       0       0       0       0
  7954 ;;Total ram usage:        4 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    1
  7957 ;; This function calls:
  7958 ;;		___lwmod
  7959 ;; This function is called by:
  7960 ;;		_gmtime
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text37
  7965  001F18                     __ptext37:
  7966                           	opt stack 0
  7967  001F18                     _dylen:
  7968                           	opt stack 22
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;incstack = 0
  7972  001F18  0E03               	movlw	3
  7973  001F1A  1406               	andwf	dylen@yr,w,c
  7974  001F1C  6E08               	movwf	??_dylen& (0+255),c
  7975  001F1E  0E00               	movlw	0
  7976  001F20  1407               	andwf	dylen@yr+1,w,c
  7977  001F22  6E09               	movwf	(??_dylen+1)& (0+255),c
  7978  001F24  5008               	movf	??_dylen,w,c
  7979  001F26  1009               	iorwf	??_dylen+1,w,c
  7980  001F28  A4D8               	btfss	status,2,c
  7981  001F2A  D01E               	goto	i2u356_40
  7982  001F2C  C006  F001         	movff	dylen@yr,___lwmod@dividend
  7983  001F30  C007  F002         	movff	dylen@yr+1,___lwmod@dividend+1
  7984  001F34  0E00               	movlw	0
  7985  001F36  6E04               	movwf	___lwmod@divisor+1,c
  7986  001F38  0E64               	movlw	100
  7987  001F3A  6E03               	movwf	___lwmod@divisor,c
  7988  001F3C  EC5F  F010         	call	___lwmod	;wreg free
  7989  001F40  5001               	movf	?___lwmod,w,c
  7990  001F42  1002               	iorwf	?___lwmod+1,w,c
  7991  001F44  A4D8               	btfss	status,2,c
  7992  001F46  D015               	goto	i2l1282
  7993  001F48  0E2C               	movlw	44
  7994  001F4A  2406               	addwf	dylen@yr,w,c
  7995  001F4C  6E01               	movwf	___lwmod@dividend,c
  7996  001F4E  0E01               	movlw	1
  7997  001F50  2007               	addwfc	dylen@yr+1,w,c
  7998  001F52  6E02               	movwf	___lwmod@dividend+1,c
  7999  001F54  0E01               	movlw	1
  8000  001F56  6E04               	movwf	___lwmod@divisor+1,c
  8001  001F58  0E90               	movlw	144
  8002  001F5A  6E03               	movwf	___lwmod@divisor,c
  8003  001F5C  EC5F  F010         	call	___lwmod	;wreg free
  8004  001F60  5001               	movf	?___lwmod,w,c
  8005  001F62  1002               	iorwf	?___lwmod+1,w,c
  8006  001F64  B4D8               	btfsc	status,2,c
  8007  001F66  D005               	goto	i2l1282
  8008  001F68                     i2u356_40:
  8009  001F68  0E01               	movlw	1
  8010  001F6A  6E07               	movwf	?_dylen+1,c
  8011  001F6C  0E6D               	movlw	109
  8012  001F6E  6E06               	movwf	?_dylen,c
  8013  001F70  0012               	return	
  8014  001F72                     i2l1282:
  8015  001F72  0E01               	movlw	1
  8016  001F74  6E07               	movwf	?_dylen+1,c
  8017  001F76  0E6E               	movlw	110
  8018  001F78  6E06               	movwf	?_dylen,c
  8019  001F7A  0012               	return	
  8020  001F7C                     __end_of_dylen:
  8021                           	opt stack 0
  8022                           pclatu	equ	0xFFB
  8023                           pclath	equ	0xFFA
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           intcon2	equ	0xFF1
  8032                           postinc0	equ	0xFEE
  8033                           fsr0h	equ	0xFEA
  8034                           fsr0l	equ	0xFE9
  8035                           wreg	equ	0xFE8
  8036                           indf1	equ	0xFE7
  8037                           postdec1	equ	0xFE5
  8038                           plusw1	equ	0xFE3
  8039                           fsr1h	equ	0xFE2
  8040                           fsr1l	equ	0xFE1
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           postdec2	equ	0xFDD
  8044                           plusw2	equ	0xFDB
  8045                           fsr2h	equ	0xFDA
  8046                           fsr2l	equ	0xFD9
  8047                           status	equ	0xFD8
  8048                           
  8049 ;; *************** function ___lwmod *****************
  8050 ;; Defined at:
  8051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  dividend        2    0[COMRAM] unsigned int 
  8054 ;;  divisor         2    2[COMRAM] unsigned int 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  counter         1    4[COMRAM] unsigned char 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  2    0[COMRAM] unsigned int 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2, status,0
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8066 ;;      Params:         4       0       0       0       0       0       0
  8067 ;;      Locals:         1       0       0       0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0
  8069 ;;      Totals:         5       0       0       0       0       0       0
  8070 ;;Total ram usage:        5 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_dylen
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text38
  8080  0020BE                     __ptext38:
  8081                           	opt stack 0
  8082  0020BE                     ___lwmod:
  8083                           	opt stack 22
  8084                           
  8085                           ;incstack = 0
  8086  0020BE  5003               	movf	___lwmod@divisor,w,c
  8087  0020C0  1004               	iorwf	___lwmod@divisor+1,w,c
  8088  0020C2  B4D8               	btfsc	status,2,c
  8089  0020C4  D018               	goto	i2l1524
  8090  0020C6  0E01               	movlw	1
  8091  0020C8  6E05               	movwf	___lwmod@counter,c
  8092  0020CA  D004               	goto	i2l1519
  8093  0020CC  90D8               	bcf	status,0,c
  8094  0020CE  3603               	rlcf	___lwmod@divisor,f,c
  8095  0020D0  3604               	rlcf	___lwmod@divisor+1,f,c
  8096  0020D2  2A05               	incf	___lwmod@counter,f,c
  8097  0020D4                     i2l1519:
  8098  0020D4  AE04               	btfss	___lwmod@divisor+1,7,c
  8099  0020D6  D7FA               	goto	i2l1520
  8100  0020D8                     i2u323_40:
  8101  0020D8  5003               	movf	___lwmod@divisor,w,c
  8102  0020DA  5C01               	subwf	___lwmod@dividend,w,c
  8103  0020DC  5004               	movf	___lwmod@divisor+1,w,c
  8104  0020DE  5802               	subwfb	___lwmod@dividend+1,w,c
  8105  0020E0  A0D8               	btfss	status,0,c
  8106  0020E2  D004               	goto	i2l1523
  8107  0020E4  5003               	movf	___lwmod@divisor,w,c
  8108  0020E6  5E01               	subwf	___lwmod@dividend,f,c
  8109  0020E8  5004               	movf	___lwmod@divisor+1,w,c
  8110  0020EA  5A02               	subwfb	___lwmod@dividend+1,f,c
  8111  0020EC                     i2l1523:
  8112  0020EC  90D8               	bcf	status,0,c
  8113  0020EE  3204               	rrcf	___lwmod@divisor+1,f,c
  8114  0020F0  3203               	rrcf	___lwmod@divisor,f,c
  8115  0020F2  2E05               	decfsz	___lwmod@counter,f,c
  8116  0020F4  D7F1               	goto	i2u323_40
  8117  0020F6                     i2l1524:
  8118  0020F6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  8119  0020FA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  8120  0020FE  0012               	return		;funcret
  8121  002100                     __end_of___lwmod:
  8122                           	opt stack 0
  8123                           pclatu	equ	0xFFB
  8124                           pclath	equ	0xFFA
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           prodh	equ	0xFF4
  8130                           prodl	equ	0xFF3
  8131                           intcon	equ	0xFF2
  8132                           intcon2	equ	0xFF1
  8133                           postinc0	equ	0xFEE
  8134                           fsr0h	equ	0xFEA
  8135                           fsr0l	equ	0xFE9
  8136                           wreg	equ	0xFE8
  8137                           indf1	equ	0xFE7
  8138                           postdec1	equ	0xFE5
  8139                           plusw1	equ	0xFE3
  8140                           fsr1h	equ	0xFE2
  8141                           fsr1l	equ	0xFE1
  8142                           indf2	equ	0xFDF
  8143                           postinc2	equ	0xFDE
  8144                           postdec2	equ	0xFDD
  8145                           plusw2	equ	0xFDB
  8146                           fsr2h	equ	0xFDA
  8147                           fsr2l	equ	0xFD9
  8148                           status	equ	0xFD8
  8149                           
  8150 ;; *************** function ___almod *****************
  8151 ;; Defined at:
  8152 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\almod.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  dividend        4    0[COMRAM] long 
  8155 ;;  divisor         4    4[COMRAM] long 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  sign            1    9[COMRAM] unsigned char 
  8158 ;;  counter         1    8[COMRAM] unsigned char 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  4    0[COMRAM] long 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8168 ;;      Params:         8       0       0       0       0       0       0
  8169 ;;      Locals:         2       0       0       0       0       0       0
  8170 ;;      Temps:          0       0       0       0       0       0       0
  8171 ;;      Totals:        10       0       0       0       0       0       0
  8172 ;;Total ram usage:       10 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; This function calls:
  8175 ;;		Nothing
  8176 ;; This function is called by:
  8177 ;;		_gmtime
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text39
  8182  001864                     __ptext39:
  8183                           	opt stack 0
  8184  001864                     ___almod:
  8185                           	opt stack 23
  8186                           
  8187                           ;incstack = 0
  8188  001864  0E00               	movlw	0
  8189  001866  6E0A               	movwf	___almod@sign,c
  8190  001868  AE04               	btfss	___almod@dividend+3,7,c
  8191  00186A  D00A               	goto	i2l1133
  8192  00186C  1E04               	comf	___almod@dividend+3,f,c
  8193  00186E  1E03               	comf	___almod@dividend+2,f,c
  8194  001870  1E02               	comf	___almod@dividend+1,f,c
  8195  001872  6C01               	negf	___almod@dividend,c
  8196  001874  0E00               	movlw	0
  8197  001876  2202               	addwfc	___almod@dividend+1,f,c
  8198  001878  2203               	addwfc	___almod@dividend+2,f,c
  8199  00187A  2204               	addwfc	___almod@dividend+3,f,c
  8200  00187C  0E01               	movlw	1
  8201  00187E  6E0A               	movwf	___almod@sign,c
  8202  001880                     i2l1133:
  8203  001880  AE08               	btfss	___almod@divisor+3,7,c
  8204  001882  D008               	goto	i2l1134
  8205  001884  1E08               	comf	___almod@divisor+3,f,c
  8206  001886  1E07               	comf	___almod@divisor+2,f,c
  8207  001888  1E06               	comf	___almod@divisor+1,f,c
  8208  00188A  6C05               	negf	___almod@divisor,c
  8209  00188C  0E00               	movlw	0
  8210  00188E  2206               	addwfc	___almod@divisor+1,f,c
  8211  001890  2207               	addwfc	___almod@divisor+2,f,c
  8212  001892  2208               	addwfc	___almod@divisor+3,f,c
  8213  001894                     i2l1134:
  8214  001894  5005               	movf	___almod@divisor,w,c
  8215  001896  1006               	iorwf	___almod@divisor+1,w,c
  8216  001898  1007               	iorwf	___almod@divisor+2,w,c
  8217  00189A  1008               	iorwf	___almod@divisor+3,w,c
  8218  00189C  B4D8               	btfsc	status,2,c
  8219  00189E  D024               	goto	i2l1141
  8220  0018A0  0E01               	movlw	1
  8221  0018A2  6E09               	movwf	___almod@counter,c
  8222  0018A4  D006               	goto	i2l1136
  8223  0018A6  90D8               	bcf	status,0,c
  8224  0018A8  3605               	rlcf	___almod@divisor,f,c
  8225  0018AA  3606               	rlcf	___almod@divisor+1,f,c
  8226  0018AC  3607               	rlcf	___almod@divisor+2,f,c
  8227  0018AE  3608               	rlcf	___almod@divisor+3,f,c
  8228  0018B0  2A09               	incf	___almod@counter,f,c
  8229  0018B2                     i2l1136:
  8230  0018B2  AE08               	btfss	___almod@divisor+3,7,c
  8231  0018B4  D7F8               	goto	i2l1137
  8232  0018B6                     i2u345_40:
  8233  0018B6  5005               	movf	___almod@divisor,w,c
  8234  0018B8  5C01               	subwf	___almod@dividend,w,c
  8235  0018BA  5006               	movf	___almod@divisor+1,w,c
  8236  0018BC  5802               	subwfb	___almod@dividend+1,w,c
  8237  0018BE  5007               	movf	___almod@divisor+2,w,c
  8238  0018C0  5803               	subwfb	___almod@dividend+2,w,c
  8239  0018C2  5008               	movf	___almod@divisor+3,w,c
  8240  0018C4  5804               	subwfb	___almod@dividend+3,w,c
  8241  0018C6  A0D8               	btfss	status,0,c
  8242  0018C8  D008               	goto	i2l1140
  8243  0018CA  5005               	movf	___almod@divisor,w,c
  8244  0018CC  5E01               	subwf	___almod@dividend,f,c
  8245  0018CE  5006               	movf	___almod@divisor+1,w,c
  8246  0018D0  5A02               	subwfb	___almod@dividend+1,f,c
  8247  0018D2  5007               	movf	___almod@divisor+2,w,c
  8248  0018D4  5A03               	subwfb	___almod@dividend+2,f,c
  8249  0018D6  5008               	movf	___almod@divisor+3,w,c
  8250  0018D8  5A04               	subwfb	___almod@dividend+3,f,c
  8251  0018DA                     i2l1140:
  8252  0018DA  90D8               	bcf	status,0,c
  8253  0018DC  3208               	rrcf	___almod@divisor+3,f,c
  8254  0018DE  3207               	rrcf	___almod@divisor+2,f,c
  8255  0018E0  3206               	rrcf	___almod@divisor+1,f,c
  8256  0018E2  3205               	rrcf	___almod@divisor,f,c
  8257  0018E4  2E09               	decfsz	___almod@counter,f,c
  8258  0018E6  D7E7               	goto	i2u345_40
  8259  0018E8                     i2l1141:
  8260  0018E8  500A               	movf	___almod@sign,w,c
  8261  0018EA  B4D8               	btfsc	status,2,c
  8262  0018EC  D008               	goto	i2l1142
  8263  0018EE  1E04               	comf	___almod@dividend+3,f,c
  8264  0018F0  1E03               	comf	___almod@dividend+2,f,c
  8265  0018F2  1E02               	comf	___almod@dividend+1,f,c
  8266  0018F4  6C01               	negf	___almod@dividend,c
  8267  0018F6  0E00               	movlw	0
  8268  0018F8  2202               	addwfc	___almod@dividend+1,f,c
  8269  0018FA  2203               	addwfc	___almod@dividend+2,f,c
  8270  0018FC  2204               	addwfc	___almod@dividend+3,f,c
  8271  0018FE                     i2l1142:
  8272  0018FE  C001  F001         	movff	___almod@dividend,?___almod
  8273  001902  C002  F002         	movff	___almod@dividend+1,?___almod+1
  8274  001906  C003  F003         	movff	___almod@dividend+2,?___almod+2
  8275  00190A  C004  F004         	movff	___almod@dividend+3,?___almod+3
  8276  00190E  0012               	return	
  8277  001910                     __end_of___almod:
  8278                           	opt stack 0
  8279                           pclatu	equ	0xFFB
  8280                           pclath	equ	0xFFA
  8281                           tblptru	equ	0xFF8
  8282                           tblptrh	equ	0xFF7
  8283                           tblptrl	equ	0xFF6
  8284                           tablat	equ	0xFF5
  8285                           prodh	equ	0xFF4
  8286                           prodl	equ	0xFF3
  8287                           intcon	equ	0xFF2
  8288                           intcon2	equ	0xFF1
  8289                           postinc0	equ	0xFEE
  8290                           fsr0h	equ	0xFEA
  8291                           fsr0l	equ	0xFE9
  8292                           wreg	equ	0xFE8
  8293                           indf1	equ	0xFE7
  8294                           postdec1	equ	0xFE5
  8295                           plusw1	equ	0xFE3
  8296                           fsr1h	equ	0xFE2
  8297                           fsr1l	equ	0xFE1
  8298                           indf2	equ	0xFDF
  8299                           postinc2	equ	0xFDE
  8300                           postdec2	equ	0xFDD
  8301                           plusw2	equ	0xFDB
  8302                           fsr2h	equ	0xFDA
  8303                           fsr2l	equ	0xFD9
  8304                           status	equ	0xFD8
  8305                           
  8306 ;; *************** function ___aldiv *****************
  8307 ;; Defined at:
  8308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\aldiv.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  dividend        4    0[COMRAM] long 
  8311 ;;  divisor         4    4[COMRAM] long 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  quotient        4   10[COMRAM] long 
  8314 ;;  sign            1    9[COMRAM] unsigned char 
  8315 ;;  counter         1    8[COMRAM] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  4    0[COMRAM] long 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8325 ;;      Params:         8       0       0       0       0       0       0
  8326 ;;      Locals:         6       0       0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0
  8328 ;;      Totals:        14       0       0       0       0       0       0
  8329 ;;Total ram usage:       14 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_gmtime
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text40
  8339  001798                     __ptext40:
  8340                           	opt stack 0
  8341  001798                     ___aldiv:
  8342                           	opt stack 23
  8343                           
  8344                           ;incstack = 0
  8345  001798  0E00               	movlw	0
  8346  00179A  6E0A               	movwf	___aldiv@sign,c
  8347  00179C  AE08               	btfss	___aldiv@divisor+3,7,c
  8348  00179E  D00A               	goto	i2l1120
  8349  0017A0  1E08               	comf	___aldiv@divisor+3,f,c
  8350  0017A2  1E07               	comf	___aldiv@divisor+2,f,c
  8351  0017A4  1E06               	comf	___aldiv@divisor+1,f,c
  8352  0017A6  6C05               	negf	___aldiv@divisor,c
  8353  0017A8  0E00               	movlw	0
  8354  0017AA  2206               	addwfc	___aldiv@divisor+1,f,c
  8355  0017AC  2207               	addwfc	___aldiv@divisor+2,f,c
  8356  0017AE  2208               	addwfc	___aldiv@divisor+3,f,c
  8357  0017B0  0E01               	movlw	1
  8358  0017B2  6E0A               	movwf	___aldiv@sign,c
  8359  0017B4                     i2l1120:
  8360  0017B4  AE04               	btfss	___aldiv@dividend+3,7,c
  8361  0017B6  D00A               	goto	i2l1121
  8362  0017B8  1E04               	comf	___aldiv@dividend+3,f,c
  8363  0017BA  1E03               	comf	___aldiv@dividend+2,f,c
  8364  0017BC  1E02               	comf	___aldiv@dividend+1,f,c
  8365  0017BE  6C01               	negf	___aldiv@dividend,c
  8366  0017C0  0E00               	movlw	0
  8367  0017C2  2202               	addwfc	___aldiv@dividend+1,f,c
  8368  0017C4  2203               	addwfc	___aldiv@dividend+2,f,c
  8369  0017C6  2204               	addwfc	___aldiv@dividend+3,f,c
  8370  0017C8  0E01               	movlw	1
  8371  0017CA  1A0A               	xorwf	___aldiv@sign,f,c
  8372  0017CC                     i2l1121:
  8373  0017CC  0E00               	movlw	0
  8374  0017CE  6E0B               	movwf	___aldiv@quotient,c
  8375  0017D0  0E00               	movlw	0
  8376  0017D2  6E0C               	movwf	___aldiv@quotient+1,c
  8377  0017D4  0E00               	movlw	0
  8378  0017D6  6E0D               	movwf	___aldiv@quotient+2,c
  8379  0017D8  0E00               	movlw	0
  8380  0017DA  6E0E               	movwf	___aldiv@quotient+3,c
  8381  0017DC  5005               	movf	___aldiv@divisor,w,c
  8382  0017DE  1006               	iorwf	___aldiv@divisor+1,w,c
  8383  0017E0  1007               	iorwf	___aldiv@divisor+2,w,c
  8384  0017E2  1008               	iorwf	___aldiv@divisor+3,w,c
  8385  0017E4  B4D8               	btfsc	status,2,c
  8386  0017E6  D02A               	goto	i2l1128
  8387  0017E8  0E01               	movlw	1
  8388  0017EA  6E09               	movwf	___aldiv@counter,c
  8389  0017EC  D006               	goto	i2l1123
  8390  0017EE  90D8               	bcf	status,0,c
  8391  0017F0  3605               	rlcf	___aldiv@divisor,f,c
  8392  0017F2  3606               	rlcf	___aldiv@divisor+1,f,c
  8393  0017F4  3607               	rlcf	___aldiv@divisor+2,f,c
  8394  0017F6  3608               	rlcf	___aldiv@divisor+3,f,c
  8395  0017F8  2A09               	incf	___aldiv@counter,f,c
  8396  0017FA                     i2l1123:
  8397  0017FA  AE08               	btfss	___aldiv@divisor+3,7,c
  8398  0017FC  D7F8               	goto	i2l1124
  8399  0017FE                     i2u339_40:
  8400  0017FE  90D8               	bcf	status,0,c
  8401  001800  360B               	rlcf	___aldiv@quotient,f,c
  8402  001802  360C               	rlcf	___aldiv@quotient+1,f,c
  8403  001804  360D               	rlcf	___aldiv@quotient+2,f,c
  8404  001806  360E               	rlcf	___aldiv@quotient+3,f,c
  8405  001808  5005               	movf	___aldiv@divisor,w,c
  8406  00180A  5C01               	subwf	___aldiv@dividend,w,c
  8407  00180C  5006               	movf	___aldiv@divisor+1,w,c
  8408  00180E  5802               	subwfb	___aldiv@dividend+1,w,c
  8409  001810  5007               	movf	___aldiv@divisor+2,w,c
  8410  001812  5803               	subwfb	___aldiv@dividend+2,w,c
  8411  001814  5008               	movf	___aldiv@divisor+3,w,c
  8412  001816  5804               	subwfb	___aldiv@dividend+3,w,c
  8413  001818  A0D8               	btfss	status,0,c
  8414  00181A  D009               	goto	i2l1127
  8415  00181C  5005               	movf	___aldiv@divisor,w,c
  8416  00181E  5E01               	subwf	___aldiv@dividend,f,c
  8417  001820  5006               	movf	___aldiv@divisor+1,w,c
  8418  001822  5A02               	subwfb	___aldiv@dividend+1,f,c
  8419  001824  5007               	movf	___aldiv@divisor+2,w,c
  8420  001826  5A03               	subwfb	___aldiv@dividend+2,f,c
  8421  001828  5008               	movf	___aldiv@divisor+3,w,c
  8422  00182A  5A04               	subwfb	___aldiv@dividend+3,f,c
  8423  00182C  800B               	bsf	___aldiv@quotient,0,c
  8424  00182E                     i2l1127:
  8425  00182E  90D8               	bcf	status,0,c
  8426  001830  3208               	rrcf	___aldiv@divisor+3,f,c
  8427  001832  3207               	rrcf	___aldiv@divisor+2,f,c
  8428  001834  3206               	rrcf	___aldiv@divisor+1,f,c
  8429  001836  3205               	rrcf	___aldiv@divisor,f,c
  8430  001838  2E09               	decfsz	___aldiv@counter,f,c
  8431  00183A  D7E1               	goto	i2u339_40
  8432  00183C                     i2l1128:
  8433  00183C  500A               	movf	___aldiv@sign,w,c
  8434  00183E  B4D8               	btfsc	status,2,c
  8435  001840  D008               	goto	i2l1129
  8436  001842  1E0E               	comf	___aldiv@quotient+3,f,c
  8437  001844  1E0D               	comf	___aldiv@quotient+2,f,c
  8438  001846  1E0C               	comf	___aldiv@quotient+1,f,c
  8439  001848  6C0B               	negf	___aldiv@quotient,c
  8440  00184A  0E00               	movlw	0
  8441  00184C  220C               	addwfc	___aldiv@quotient+1,f,c
  8442  00184E  220D               	addwfc	___aldiv@quotient+2,f,c
  8443  001850  220E               	addwfc	___aldiv@quotient+3,f,c
  8444  001852                     i2l1129:
  8445  001852  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  8446  001856  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  8447  00185A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  8448  00185E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  8449  001862  0012               	return	
  8450  001864                     __end_of___aldiv:
  8451                           	opt stack 0
  8452                           pclatu	equ	0xFFB
  8453                           pclath	equ	0xFFA
  8454                           tblptru	equ	0xFF8
  8455                           tblptrh	equ	0xFF7
  8456                           tblptrl	equ	0xFF6
  8457                           tablat	equ	0xFF5
  8458                           prodh	equ	0xFF4
  8459                           prodl	equ	0xFF3
  8460                           intcon	equ	0xFF2
  8461                           intcon2	equ	0xFF1
  8462                           postinc0	equ	0xFEE
  8463                           fsr0h	equ	0xFEA
  8464                           fsr0l	equ	0xFE9
  8465                           wreg	equ	0xFE8
  8466                           indf1	equ	0xFE7
  8467                           postdec1	equ	0xFE5
  8468                           plusw1	equ	0xFE3
  8469                           fsr1h	equ	0xFE2
  8470                           fsr1l	equ	0xFE1
  8471                           indf2	equ	0xFDF
  8472                           postinc2	equ	0xFDE
  8473                           postdec2	equ	0xFDD
  8474                           plusw2	equ	0xFDB
  8475                           fsr2h	equ	0xFDA
  8476                           fsr2l	equ	0xFD9
  8477                           status	equ	0xFD8
  8478                           
  8479 ;; *************** function ___lmul *****************
  8480 ;; Defined at:
  8481 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  multiplier      4    0[COMRAM] unsigned long 
  8484 ;;  multiplicand    4    4[COMRAM] unsigned long 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;  product         4    8[COMRAM] unsigned long 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  4    0[COMRAM] unsigned long 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8496 ;;      Params:         8       0       0       0       0       0       0
  8497 ;;      Locals:         4       0       0       0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0
  8499 ;;      Totals:        12       0       0       0       0       0       0
  8500 ;;Total ram usage:       12 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_localtime
  8506 ;;		_strtol
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text41
  8511  001FDA                     __ptext41:
  8512                           	opt stack 0
  8513  001FDA                     ___lmul:
  8514                           	opt stack 24
  8515                           
  8516                           ;incstack = 0
  8517  001FDA  0E00               	movlw	0
  8518  001FDC  6E09               	movwf	___lmul@product,c
  8519  001FDE  0E00               	movlw	0
  8520  001FE0  6E0A               	movwf	___lmul@product+1,c
  8521  001FE2  0E00               	movlw	0
  8522  001FE4  6E0B               	movwf	___lmul@product+2,c
  8523  001FE6  0E00               	movlw	0
  8524  001FE8  6E0C               	movwf	___lmul@product+3,c
  8525  001FEA  A001               	btfss	___lmul@multiplier,0,c
  8526  001FEC  D008               	goto	i2l1077
  8527  001FEE  5005               	movf	___lmul@multiplicand,w,c
  8528  001FF0  2609               	addwf	___lmul@product,f,c
  8529  001FF2  5006               	movf	___lmul@multiplicand+1,w,c
  8530  001FF4  220A               	addwfc	___lmul@product+1,f,c
  8531  001FF6  5007               	movf	___lmul@multiplicand+2,w,c
  8532  001FF8  220B               	addwfc	___lmul@product+2,f,c
  8533  001FFA  5008               	movf	___lmul@multiplicand+3,w,c
  8534  001FFC  220C               	addwfc	___lmul@product+3,f,c
  8535  001FFE                     i2l1077:
  8536  001FFE  90D8               	bcf	status,0,c
  8537  002000  3605               	rlcf	___lmul@multiplicand,f,c
  8538  002002  3606               	rlcf	___lmul@multiplicand+1,f,c
  8539  002004  3607               	rlcf	___lmul@multiplicand+2,f,c
  8540  002006  3608               	rlcf	___lmul@multiplicand+3,f,c
  8541  002008  90D8               	bcf	status,0,c
  8542  00200A  3204               	rrcf	___lmul@multiplier+3,f,c
  8543  00200C  3203               	rrcf	___lmul@multiplier+2,f,c
  8544  00200E  3202               	rrcf	___lmul@multiplier+1,f,c
  8545  002010  3201               	rrcf	___lmul@multiplier,f,c
  8546  002012  5001               	movf	___lmul@multiplier,w,c
  8547  002014  1002               	iorwf	___lmul@multiplier+1,w,c
  8548  002016  1003               	iorwf	___lmul@multiplier+2,w,c
  8549  002018  1004               	iorwf	___lmul@multiplier+3,w,c
  8550  00201A  A4D8               	btfss	status,2,c
  8551  00201C  D7E6               	goto	i2l1076
  8552  00201E  C009  F001         	movff	___lmul@product,?___lmul
  8553  002022  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  8554  002026  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  8555  00202A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  8556  00202E  0012               	return		;funcret
  8557  002030                     __end_of___lmul:
  8558                           	opt stack 0
  8559                           pclatu	equ	0xFFB
  8560                           pclath	equ	0xFFA
  8561                           tblptru	equ	0xFF8
  8562                           tblptrh	equ	0xFF7
  8563                           tblptrl	equ	0xFF6
  8564                           tablat	equ	0xFF5
  8565                           prodh	equ	0xFF4
  8566                           prodl	equ	0xFF3
  8567                           intcon	equ	0xFF2
  8568                           intcon2	equ	0xFF1
  8569                           postinc0	equ	0xFEE
  8570                           fsr0h	equ	0xFEA
  8571                           fsr0l	equ	0xFE9
  8572                           wreg	equ	0xFE8
  8573                           indf1	equ	0xFE7
  8574                           postdec1	equ	0xFE5
  8575                           plusw1	equ	0xFE3
  8576                           fsr1h	equ	0xFE2
  8577                           fsr1l	equ	0xFE1
  8578                           indf2	equ	0xFDF
  8579                           postinc2	equ	0xFDE
  8580                           postdec2	equ	0xFDD
  8581                           plusw2	equ	0xFDB
  8582                           fsr2h	equ	0xFDA
  8583                           fsr2l	equ	0xFD9
  8584                           status	equ	0xFD8
  8585                           
  8586 ;; *************** function _getTimeStemp *****************
  8587 ;; Defined at:
  8588 ;;		line 11 in file "timeStemp.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  4    0[COMRAM] unsigned long 
  8595 ;; Registers used:
  8596 ;;		None
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8602 ;;      Params:         4       0       0       0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0
  8605 ;;      Totals:         4       0       0       0       0       0       0
  8606 ;;Total ram usage:        4 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_uart_receiv_isr
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text42
  8616  0023FE                     __ptext42:
  8617                           	opt stack 0
  8618  0023FE                     _getTimeStemp:
  8619                           	opt stack 25
  8620                           
  8621                           ;timeStemp.c: 13: return timestamp;
  8622                           
  8623                           ;incstack = 0
  8624  0023FE  C0C7  F001         	movff	_timestamp,?_getTimeStemp
  8625  002402  C0C8  F002         	movff	_timestamp+1,?_getTimeStemp+1
  8626  002406  C0C9  F003         	movff	_timestamp+2,?_getTimeStemp+2
  8627  00240A  C0CA  F004         	movff	_timestamp+3,?_getTimeStemp+3
  8628  00240E  0012               	return		;funcret
  8629  002410                     __end_of_getTimeStemp:
  8630                           	opt stack 0
  8631                           pclatu	equ	0xFFB
  8632                           pclath	equ	0xFFA
  8633                           tblptru	equ	0xFF8
  8634                           tblptrh	equ	0xFF7
  8635                           tblptrl	equ	0xFF6
  8636                           tablat	equ	0xFF5
  8637                           prodh	equ	0xFF4
  8638                           prodl	equ	0xFF3
  8639                           intcon	equ	0xFF2
  8640                           intcon2	equ	0xFF1
  8641                           postinc0	equ	0xFEE
  8642                           fsr0h	equ	0xFEA
  8643                           fsr0l	equ	0xFE9
  8644                           wreg	equ	0xFE8
  8645                           indf1	equ	0xFE7
  8646                           postdec1	equ	0xFE5
  8647                           plusw1	equ	0xFE3
  8648                           fsr1h	equ	0xFE2
  8649                           fsr1l	equ	0xFE1
  8650                           indf2	equ	0xFDF
  8651                           postinc2	equ	0xFDE
  8652                           postdec2	equ	0xFDD
  8653                           plusw2	equ	0xFDB
  8654                           fsr2h	equ	0xFDA
  8655                           fsr2l	equ	0xFD9
  8656                           status	equ	0xFD8
  8657                           
  8658 ;; *************** function _asctime *****************
  8659 ;; Defined at:
  8660 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\asctime.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  tim             2   33[COMRAM] PTR const struct tm
  8663 ;;		 -> gmtime@tim(18), 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  cp              2   38[COMRAM] PTR unsigned char 
  8666 ;;		 -> asctime@buf(27), 
  8667 ;;  s               2   36[COMRAM] PTR const unsigned char 
  8668 ;;		 -> STR_38(37), STR_37(22), 
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  2   33[COMRAM] PTR unsigned char 
  8671 ;; Registers used:
  8672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8678 ;;      Params:         2       0       0       0       0       0       0
  8679 ;;      Locals:         5       0       0       0       0       0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0
  8681 ;;      Totals:         7       0       0       0       0       0       0
  8682 ;;Total ram usage:        7 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; Hardware stack levels required when called:    2
  8685 ;; This function calls:
  8686 ;;		___awdiv
  8687 ;;		___awmod
  8688 ;;		___wmul
  8689 ;;		_put2d
  8690 ;; This function is called by:
  8691 ;;		_uart_receiv_isr
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text43
  8696  000C40                     __ptext43:
  8697                           	opt stack 0
  8698  000C40                     _asctime:
  8699                           	opt stack 23
  8700                           
  8701                           ;incstack = 0
  8702  000C40  EE20 F00C          	lfsr	2,12
  8703  000C44  5022               	movf	asctime@tim,w,c
  8704  000C46  26D9               	addwf	fsr2l,f,c
  8705  000C48  5023               	movf	asctime@tim+1,w,c
  8706  000C4A  22DA               	addwfc	fsr2h,f,c
  8707  000C4C  CFDE F001          	movff	postinc2,___wmul@multiplier
  8708  000C50  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  8709  000C54  0E00               	movlw	0
  8710  000C56  6E04               	movwf	___wmul@multiplicand+1,c
  8711  000C58  0E03               	movlw	3
  8712  000C5A  6E03               	movwf	___wmul@multiplicand,c
  8713  000C5C  EC77  F011         	call	___wmul	;wreg free
  8714  000C60  0E34               	movlw	low STR_37
  8715  000C62  2401               	addwf	?___wmul,w,c
  8716  000C64  6E25               	movwf	asctime@s,c
  8717  000C66  0E7F               	movlw	high STR_37
  8718  000C68  2002               	addwfc	?___wmul+1,w,c
  8719  000C6A  6E26               	movwf	asctime@s+1,c
  8720  000C6C  0E75               	movlw	low asctime@buf
  8721  000C6E  6E27               	movwf	asctime@cp,c
  8722  000C70  0E01               	movlw	high asctime@buf
  8723  000C72  6E28               	movwf	asctime@cp+1,c
  8724  000C74  C025  FFF6         	movff	asctime@s,tblptrl
  8725  000C78  C026  FFF7         	movff	asctime@s+1,tblptrh
  8726  000C7C                     	if	0	;tblptru may be non-zero
  8727  000C7C                     	endif
  8728  000C7C                     	if	0	;tblptru may be non-zero
  8729  000C7C                     	endif
  8730  000C7C  C027  FFD9         	movff	asctime@cp,fsr2l
  8731  000C80  C028  FFDA         	movff	asctime@cp+1,fsr2h
  8732  000C84  0008               	tblrd		*
  8733  000C86  CFF5 FFDF          	movff	tablat,indf2
  8734  000C8A  4A25               	infsnz	asctime@s,f,c
  8735  000C8C  2A26               	incf	asctime@s+1,f,c
  8736  000C8E  4A27               	infsnz	asctime@cp,f,c
  8737  000C90  2A28               	incf	asctime@cp+1,f,c
  8738  000C92  C025  FFF6         	movff	asctime@s,tblptrl
  8739  000C96  C026  FFF7         	movff	asctime@s+1,tblptrh
  8740  000C9A                     	if	0	;tblptru may be non-zero
  8741  000C9A                     	endif
  8742  000C9A                     	if	0	;tblptru may be non-zero
  8743  000C9A                     	endif
  8744  000C9A  C027  FFD9         	movff	asctime@cp,fsr2l
  8745  000C9E  C028  FFDA         	movff	asctime@cp+1,fsr2h
  8746  000CA2  0008               	tblrd		*
  8747  000CA4  CFF5 FFDF          	movff	tablat,indf2
  8748  000CA8  4A25               	infsnz	asctime@s,f,c
  8749  000CAA  2A26               	incf	asctime@s+1,f,c
  8750  000CAC  4A27               	infsnz	asctime@cp,f,c
  8751  000CAE  2A28               	incf	asctime@cp+1,f,c
  8752  000CB0  C025  FFF6         	movff	asctime@s,tblptrl
  8753  000CB4  C026  FFF7         	movff	asctime@s+1,tblptrh
  8754  000CB8                     	if	0	;tblptru may be non-zero
  8755  000CB8                     	endif
  8756  000CB8                     	if	0	;tblptru may be non-zero
  8757  000CB8                     	endif
  8758  000CB8  C027  FFD9         	movff	asctime@cp,fsr2l
  8759  000CBC  C028  FFDA         	movff	asctime@cp+1,fsr2h
  8760  000CC0  0008               	tblrd		*
  8761  000CC2  CFF5 FFDF          	movff	tablat,indf2
  8762  000CC6  4A27               	infsnz	asctime@cp,f,c
  8763  000CC8  2A28               	incf	asctime@cp+1,f,c
  8764  000CCA  C027  FFD9         	movff	asctime@cp,fsr2l
  8765  000CCE  C028  FFDA         	movff	asctime@cp+1,fsr2h
  8766  000CD2  0E20               	movlw	32
  8767  000CD4  6EDF               	movwf	indf2,c
  8768  000CD6  4A27               	infsnz	asctime@cp,f,c
  8769  000CD8  2A28               	incf	asctime@cp+1,f,c
  8770  000CDA  EE20 F008          	lfsr	2,8
  8771  000CDE  5022               	movf	asctime@tim,w,c
  8772  000CE0  26D9               	addwf	fsr2l,f,c
  8773  000CE2  5023               	movf	asctime@tim+1,w,c
  8774  000CE4  22DA               	addwfc	fsr2h,f,c
  8775  000CE6  CFDE F001          	movff	postinc2,___wmul@multiplier
  8776  000CEA  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  8777  000CEE  0E00               	movlw	0
  8778  000CF0  6E04               	movwf	___wmul@multiplicand+1,c
  8779  000CF2  0E03               	movlw	3
  8780  000CF4  6E03               	movwf	___wmul@multiplicand,c
  8781  000CF6  EC77  F011         	call	___wmul	;wreg free
  8782  000CFA  0E0F               	movlw	low STR_38
  8783  000CFC  2401               	addwf	?___wmul,w,c
  8784  000CFE  6E25               	movwf	asctime@s,c
  8785  000D00  0E7F               	movlw	high STR_38
  8786  000D02  2002               	addwfc	?___wmul+1,w,c
  8787  000D04  6E26               	movwf	asctime@s+1,c
  8788  000D06  C025  FFF6         	movff	asctime@s,tblptrl
  8789  000D0A  C026  FFF7         	movff	asctime@s+1,tblptrh
  8790  000D0E                     	if	0	;tblptru may be non-zero
  8791  000D0E                     	endif
  8792  000D0E                     	if	0	;tblptru may be non-zero
  8793  000D0E                     	endif
  8794  000D0E  C027  FFD9         	movff	asctime@cp,fsr2l
  8795  000D12  C028  FFDA         	movff	asctime@cp+1,fsr2h
  8796  000D16  0008               	tblrd		*
  8797  000D18  CFF5 FFDF          	movff	tablat,indf2
  8798  000D1C  4A25               	infsnz	asctime@s,f,c
  8799  000D1E  2A26               	incf	asctime@s+1,f,c
  8800  000D20  4A27               	infsnz	asctime@cp,f,c
  8801  000D22  2A28               	incf	asctime@cp+1,f,c
  8802  000D24  C025  FFF6         	movff	asctime@s,tblptrl
  8803  000D28  C026  FFF7         	movff	asctime@s+1,tblptrh
  8804  000D2C                     	if	0	;tblptru may be non-zero
  8805  000D2C                     	endif
  8806  000D2C                     	if	0	;tblptru may be non-zero
  8807  000D2C                     	endif
  8808  000D2C  C027  FFD9         	movff	asctime@cp,fsr2l
  8809  000D30  C028  FFDA         	movff	asctime@cp+1,fsr2h
  8810  000D34  0008               	tblrd		*
  8811  000D36  CFF5 FFDF          	movff	tablat,indf2
  8812  000D3A  4A25               	infsnz	asctime@s,f,c
  8813  000D3C  2A26               	incf	asctime@s+1,f,c
  8814  000D3E  4A27               	infsnz	asctime@cp,f,c
  8815  000D40  2A28               	incf	asctime@cp+1,f,c
  8816  000D42  C025  FFF6         	movff	asctime@s,tblptrl
  8817  000D46  C026  FFF7         	movff	asctime@s+1,tblptrh
  8818  000D4A                     	if	0	;tblptru may be non-zero
  8819  000D4A                     	endif
  8820  000D4A                     	if	0	;tblptru may be non-zero
  8821  000D4A                     	endif
  8822  000D4A  C027  FFD9         	movff	asctime@cp,fsr2l
  8823  000D4E  C028  FFDA         	movff	asctime@cp+1,fsr2h
  8824  000D52  0008               	tblrd		*
  8825  000D54  CFF5 FFDF          	movff	tablat,indf2
  8826  000D58  0E20               	movlw	32
  8827  000D5A  0101               	movlb	1	; () banked
  8828  000D5C  6F7C               	movwf	(asctime@buf+7)& (0+255),b
  8829                           
  8830                           ; BSR set to: 1
  8831  000D5E  0E7F               	movlw	low (asctime@buf+10)
  8832  000D60  6E09               	movwf	put2d@cp,c
  8833  000D62  0E01               	movlw	high (asctime@buf+10)
  8834  000D64  6E0A               	movwf	put2d@cp+1,c
  8835  000D66  EE20 F006          	lfsr	2,6
  8836  000D6A  5022               	movf	asctime@tim,w,c
  8837  000D6C  26D9               	addwf	fsr2l,f,c
  8838  000D6E  5023               	movf	asctime@tim+1,w,c
  8839  000D70  22DA               	addwfc	fsr2h,f,c
  8840  000D72  50DF               	movf	indf2,w,c
  8841  000D74  6E0B               	movwf	put2d@i,c
  8842  000D76  0E20               	movlw	32
  8843  000D78  6E0C               	movwf	put2d@cl,c
  8844  000D7A  0E20               	movlw	32
  8845  000D7C  6E0D               	movwf	put2d@ct,c
  8846  000D7E  EC20  F00F         	call	_put2d	;wreg free
  8847  000D82  0E82               	movlw	low (asctime@buf+13)
  8848  000D84  6E09               	movwf	put2d@cp,c
  8849  000D86  0E01               	movlw	high (asctime@buf+13)
  8850  000D88  6E0A               	movwf	put2d@cp+1,c
  8851  000D8A  EE20 F004          	lfsr	2,4
  8852  000D8E  5022               	movf	asctime@tim,w,c
  8853  000D90  26D9               	addwf	fsr2l,f,c
  8854  000D92  5023               	movf	asctime@tim+1,w,c
  8855  000D94  22DA               	addwfc	fsr2h,f,c
  8856  000D96  50DF               	movf	indf2,w,c
  8857  000D98  6E0B               	movwf	put2d@i,c
  8858  000D9A  0E30               	movlw	48
  8859  000D9C  6E0C               	movwf	put2d@cl,c
  8860  000D9E  0E3A               	movlw	58
  8861  000DA0  6E0D               	movwf	put2d@ct,c
  8862  000DA2  EC20  F00F         	call	_put2d	;wreg free
  8863  000DA6  0E85               	movlw	low (asctime@buf+16)
  8864  000DA8  6E09               	movwf	put2d@cp,c
  8865  000DAA  0E01               	movlw	high (asctime@buf+16)
  8866  000DAC  6E0A               	movwf	put2d@cp+1,c
  8867  000DAE  EE20 F002          	lfsr	2,2
  8868  000DB2  5022               	movf	asctime@tim,w,c
  8869  000DB4  26D9               	addwf	fsr2l,f,c
  8870  000DB6  5023               	movf	asctime@tim+1,w,c
  8871  000DB8  22DA               	addwfc	fsr2h,f,c
  8872  000DBA  50DF               	movf	indf2,w,c
  8873  000DBC  6E0B               	movwf	put2d@i,c
  8874  000DBE  0E30               	movlw	48
  8875  000DC0  6E0C               	movwf	put2d@cl,c
  8876  000DC2  0E3A               	movlw	58
  8877  000DC4  6E0D               	movwf	put2d@ct,c
  8878  000DC6  EC20  F00F         	call	_put2d	;wreg free
  8879  000DCA  0E88               	movlw	low (asctime@buf+19)
  8880  000DCC  6E09               	movwf	put2d@cp,c
  8881  000DCE  0E01               	movlw	high (asctime@buf+19)
  8882  000DD0  6E0A               	movwf	put2d@cp+1,c
  8883  000DD2  C022  FFD9         	movff	asctime@tim,fsr2l
  8884  000DD6  C023  FFDA         	movff	asctime@tim+1,fsr2h
  8885  000DDA  50DF               	movf	indf2,w,c
  8886  000DDC  6E0B               	movwf	put2d@i,c
  8887  000DDE  0E30               	movlw	48
  8888  000DE0  6E0C               	movwf	put2d@cl,c
  8889  000DE2  0E20               	movlw	32
  8890  000DE4  6E0D               	movwf	put2d@ct,c
  8891  000DE6  EC20  F00F         	call	_put2d	;wreg free
  8892  000DEA  0E8B               	movlw	low (asctime@buf+22)
  8893  000DEC  6E09               	movwf	put2d@cp,c
  8894  000DEE  0E01               	movlw	high (asctime@buf+22)
  8895  000DF0  6E0A               	movwf	put2d@cp+1,c
  8896  000DF2  EE20 F00A          	lfsr	2,10
  8897  000DF6  5022               	movf	asctime@tim,w,c
  8898  000DF8  26D9               	addwf	fsr2l,f,c
  8899  000DFA  5023               	movf	asctime@tim+1,w,c
  8900  000DFC  22DA               	addwfc	fsr2h,f,c
  8901  000DFE  CFDE F001          	movff	postinc2,___awdiv@dividend
  8902  000E02  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  8903  000E06  0E00               	movlw	0
  8904  000E08  6E04               	movwf	___awdiv@divisor+1,c
  8905  000E0A  0E64               	movlw	100
  8906  000E0C  6E03               	movwf	___awdiv@divisor,c
  8907  000E0E  EC78  F00D         	call	___awdiv	;wreg free
  8908  000E12  5001               	movf	?___awdiv,w,c
  8909  000E14  0F13               	addlw	19
  8910  000E16  6E0B               	movwf	put2d@i,c
  8911  000E18  0E20               	movlw	32
  8912  000E1A  6E0C               	movwf	put2d@cl,c
  8913  000E1C  0E00               	movlw	0
  8914  000E1E  6E0D               	movwf	put2d@ct,c
  8915  000E20  EC20  F00F         	call	_put2d	;wreg free
  8916  000E24  EE20 F00A          	lfsr	2,10
  8917  000E28  5022               	movf	asctime@tim,w,c
  8918  000E2A  26D9               	addwf	fsr2l,f,c
  8919  000E2C  5023               	movf	asctime@tim+1,w,c
  8920  000E2E  22DA               	addwfc	fsr2h,f,c
  8921  000E30  CFDE F001          	movff	postinc2,___awmod@dividend
  8922  000E34  CFDD F002          	movff	postdec2,___awmod@dividend+1
  8923  000E38  0E00               	movlw	0
  8924  000E3A  6E04               	movwf	___awmod@divisor+1,c
  8925  000E3C  0E64               	movlw	100
  8926  000E3E  6E03               	movwf	___awmod@divisor,c
  8927  000E40  ECE8  F00E         	call	___awmod	;wreg free
  8928  000E44  5001               	movf	?___awmod,w,c
  8929  000E46  6E24               	movwf	_asctime$3948,c
  8930  000E48  0E8D               	movlw	low (asctime@buf+24)
  8931  000E4A  6E09               	movwf	put2d@cp,c
  8932  000E4C  0E01               	movlw	high (asctime@buf+24)
  8933  000E4E  6E0A               	movwf	put2d@cp+1,c
  8934  000E50  C024  F00B         	movff	_asctime$3948,put2d@i
  8935  000E54  0E30               	movlw	48
  8936  000E56  6E0C               	movwf	put2d@cl,c
  8937  000E58  0E0A               	movlw	10
  8938  000E5A  6E0D               	movwf	put2d@ct,c
  8939  000E5C  EC20  F00F         	call	_put2d	;wreg free
  8940  000E60  0E75               	movlw	low asctime@buf
  8941  000E62  6E22               	movwf	?_asctime,c
  8942  000E64  0E01               	movlw	high asctime@buf
  8943  000E66  6E23               	movwf	?_asctime+1,c
  8944  000E68  0012               	return	
  8945  000E6A                     __end_of_asctime:
  8946                           	opt stack 0
  8947                           pclatu	equ	0xFFB
  8948                           pclath	equ	0xFFA
  8949                           tblptru	equ	0xFF8
  8950                           tblptrh	equ	0xFF7
  8951                           tblptrl	equ	0xFF6
  8952                           tablat	equ	0xFF5
  8953                           prodh	equ	0xFF4
  8954                           prodl	equ	0xFF3
  8955                           intcon	equ	0xFF2
  8956                           intcon2	equ	0xFF1
  8957                           postinc0	equ	0xFEE
  8958                           fsr0h	equ	0xFEA
  8959                           fsr0l	equ	0xFE9
  8960                           wreg	equ	0xFE8
  8961                           indf1	equ	0xFE7
  8962                           postdec1	equ	0xFE5
  8963                           plusw1	equ	0xFE3
  8964                           fsr1h	equ	0xFE2
  8965                           fsr1l	equ	0xFE1
  8966                           indf2	equ	0xFDF
  8967                           postinc2	equ	0xFDE
  8968                           postdec2	equ	0xFDD
  8969                           plusw2	equ	0xFDB
  8970                           fsr2h	equ	0xFDA
  8971                           fsr2l	equ	0xFD9
  8972                           status	equ	0xFD8
  8973                           
  8974 ;; *************** function _put2d *****************
  8975 ;; Defined at:
  8976 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\asctime.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  cp              2    8[COMRAM] PTR unsigned char 
  8979 ;;		 -> asctime@buf(27), 
  8980 ;;  i               1   10[COMRAM] unsigned char 
  8981 ;;  cl              1   11[COMRAM] unsigned char 
  8982 ;;  ct              1   12[COMRAM] unsigned char 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  2    8[COMRAM] int 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8994 ;;      Params:         5       0       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0
  8997 ;;      Totals:         5       0       0       0       0       0       0
  8998 ;;Total ram usage:        5 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    1
  9001 ;; This function calls:
  9002 ;;		___awmod
  9003 ;;		___lbdiv
  9004 ;; This function is called by:
  9005 ;;		_asctime
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text44
  9010  001E40                     __ptext44:
  9011                           	opt stack 0
  9012  001E40                     _put2d:
  9013                           	opt stack 23
  9014                           
  9015                           ;incstack = 0
  9016  001E40  C009  FFD9         	movff	put2d@cp,fsr2l
  9017  001E44  C00A  FFDA         	movff	put2d@cp+1,fsr2h
  9018  001E48  C00D  FFDF         	movff	put2d@ct,indf2
  9019  001E4C  C00B  F001         	movff	put2d@i,___awmod@dividend
  9020  001E50  6A02               	clrf	___awmod@dividend+1,c
  9021  001E52  0E00               	movlw	0
  9022  001E54  6E04               	movwf	___awmod@divisor+1,c
  9023  001E56  0E0A               	movlw	10
  9024  001E58  6E03               	movwf	___awmod@divisor,c
  9025  001E5A  ECE8  F00E         	call	___awmod	;wreg free
  9026  001E5E  5001               	movf	?___awmod,w,c
  9027  001E60  0F30               	addlw	48
  9028  001E62  0609               	decf	put2d@cp,f,c
  9029  001E64  A0D8               	btfss	status,0,c
  9030  001E66  060A               	decf	put2d@cp+1,f,c
  9031  001E68  C009  FFD9         	movff	put2d@cp,fsr2l
  9032  001E6C  C00A  FFDA         	movff	put2d@cp+1,fsr2h
  9033  001E70  6EDF               	movwf	indf2,c
  9034  001E72  0E0A               	movlw	10
  9035  001E74  6E01               	movwf	___lbdiv@divisor,c
  9036  001E76  500B               	movf	put2d@i,w,c
  9037  001E78  ECD9  F010         	call	___lbdiv
  9038  001E7C  6E0B               	movwf	put2d@i,c
  9039  001E7E  500B               	movf	put2d@i,w,c
  9040  001E80  B4D8               	btfsc	status,2,c
  9041  001E82  D00B               	goto	i2l1155
  9042  001E84  500B               	movf	put2d@i,w,c
  9043  001E86  0F30               	addlw	48
  9044  001E88  0609               	decf	put2d@cp,f,c
  9045  001E8A  A0D8               	btfss	status,0,c
  9046  001E8C  060A               	decf	put2d@cp+1,f,c
  9047  001E8E  C009  FFD9         	movff	put2d@cp,fsr2l
  9048  001E92  C00A  FFDA         	movff	put2d@cp+1,fsr2h
  9049  001E96  6EDF               	movwf	indf2,c
  9050  001E98  0012               	return	
  9051  001E9A                     i2l1155:
  9052  001E9A  0609               	decf	put2d@cp,f,c
  9053  001E9C  A0D8               	btfss	status,0,c
  9054  001E9E  060A               	decf	put2d@cp+1,f,c
  9055  001EA0  C009  FFD9         	movff	put2d@cp,fsr2l
  9056  001EA4  C00A  FFDA         	movff	put2d@cp+1,fsr2h
  9057  001EA8  C00C  FFDF         	movff	put2d@cl,indf2
  9058  001EAC  0012               	return	
  9059  001EAE                     __end_of_put2d:
  9060                           	opt stack 0
  9061                           pclatu	equ	0xFFB
  9062                           pclath	equ	0xFFA
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           intcon2	equ	0xFF1
  9071                           postinc0	equ	0xFEE
  9072                           fsr0h	equ	0xFEA
  9073                           fsr0l	equ	0xFE9
  9074                           wreg	equ	0xFE8
  9075                           indf1	equ	0xFE7
  9076                           postdec1	equ	0xFE5
  9077                           plusw1	equ	0xFE3
  9078                           fsr1h	equ	0xFE2
  9079                           fsr1l	equ	0xFE1
  9080                           indf2	equ	0xFDF
  9081                           postinc2	equ	0xFDE
  9082                           postdec2	equ	0xFDD
  9083                           plusw2	equ	0xFDB
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function ___lbdiv *****************
  9089 ;; Defined at:
  9090 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lbdiv.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  dividend        1    wreg     unsigned char 
  9093 ;;  divisor         1    0[COMRAM] unsigned char 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  dividend        1    1[COMRAM] unsigned char 
  9096 ;;  quotient        1    3[COMRAM] unsigned char 
  9097 ;;  counter         1    2[COMRAM] unsigned char 
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1    wreg      unsigned char 
  9100 ;; Registers used:
  9101 ;;		wreg, status,2, status,0
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9107 ;;      Params:         1       0       0       0       0       0       0
  9108 ;;      Locals:         3       0       0       0       0       0       0
  9109 ;;      Temps:          0       0       0       0       0       0       0
  9110 ;;      Totals:         4       0       0       0       0       0       0
  9111 ;;Total ram usage:        4 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; This function calls:
  9114 ;;		Nothing
  9115 ;; This function is called by:
  9116 ;;		_put2d
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text45
  9121  0021B2                     __ptext45:
  9122                           	opt stack 0
  9123  0021B2                     ___lbdiv:
  9124                           	opt stack 23
  9125                           
  9126                           ;incstack = 0
  9127                           ;___lbdiv@dividend stored from wreg
  9128  0021B2  6E02               	movwf	___lbdiv@dividend,c
  9129  0021B4  0E00               	movlw	0
  9130  0021B6  6E04               	movwf	___lbdiv@quotient,c
  9131  0021B8  5001               	movf	___lbdiv@divisor,w,c
  9132  0021BA  B4D8               	btfsc	status,2,c
  9133  0021BC  D015               	goto	i2l1440
  9134  0021BE  0E01               	movlw	1
  9135  0021C0  6E03               	movwf	___lbdiv@counter,c
  9136  0021C2  D003               	goto	i2l1435
  9137  0021C4  90D8               	bcf	status,0,c
  9138  0021C6  3601               	rlcf	___lbdiv@divisor,f,c
  9139  0021C8  2A03               	incf	___lbdiv@counter,f,c
  9140  0021CA                     i2l1435:
  9141  0021CA  AE01               	btfss	___lbdiv@divisor,7,c
  9142  0021CC  D7FB               	goto	i2l1436
  9143  0021CE                     i2u358_40:
  9144  0021CE  90D8               	bcf	status,0,c
  9145  0021D0  3604               	rlcf	___lbdiv@quotient,f,c
  9146  0021D2  5001               	movf	___lbdiv@divisor,w,c
  9147  0021D4  5C02               	subwf	___lbdiv@dividend,w,c
  9148  0021D6  A0D8               	btfss	status,0,c
  9149  0021D8  D003               	goto	i2l1439
  9150  0021DA  5001               	movf	___lbdiv@divisor,w,c
  9151  0021DC  5E02               	subwf	___lbdiv@dividend,f,c
  9152  0021DE  8004               	bsf	___lbdiv@quotient,0,c
  9153  0021E0                     i2l1439:
  9154  0021E0  90D8               	bcf	status,0,c
  9155  0021E2  3201               	rrcf	___lbdiv@divisor,f,c
  9156  0021E4  2E03               	decfsz	___lbdiv@counter,f,c
  9157  0021E6  D7F3               	goto	i2u358_40
  9158  0021E8                     i2l1440:
  9159  0021E8  5004               	movf	___lbdiv@quotient,w,c
  9160  0021EA  0012               	return	
  9161  0021EC                     __end_of___lbdiv:
  9162                           	opt stack 0
  9163                           pclatu	equ	0xFFB
  9164                           pclath	equ	0xFFA
  9165                           tblptru	equ	0xFF8
  9166                           tblptrh	equ	0xFF7
  9167                           tblptrl	equ	0xFF6
  9168                           tablat	equ	0xFF5
  9169                           prodh	equ	0xFF4
  9170                           prodl	equ	0xFF3
  9171                           intcon	equ	0xFF2
  9172                           intcon2	equ	0xFF1
  9173                           postinc0	equ	0xFEE
  9174                           fsr0h	equ	0xFEA
  9175                           fsr0l	equ	0xFE9
  9176                           wreg	equ	0xFE8
  9177                           indf1	equ	0xFE7
  9178                           postdec1	equ	0xFE5
  9179                           plusw1	equ	0xFE3
  9180                           fsr1h	equ	0xFE2
  9181                           fsr1l	equ	0xFE1
  9182                           indf2	equ	0xFDF
  9183                           postinc2	equ	0xFDE
  9184                           postdec2	equ	0xFDD
  9185                           plusw2	equ	0xFDB
  9186                           fsr2h	equ	0xFDA
  9187                           fsr2l	equ	0xFD9
  9188                           status	equ	0xFD8
  9189                           
  9190 ;; *************** function ___awmod *****************
  9191 ;; Defined at:
  9192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awmod.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  dividend        2    0[COMRAM] int 
  9195 ;;  divisor         2    2[COMRAM] int 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;  sign            1    5[COMRAM] unsigned char 
  9198 ;;  counter         1    4[COMRAM] unsigned char 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  2    0[COMRAM] int 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9208 ;;      Params:         4       0       0       0       0       0       0
  9209 ;;      Locals:         2       0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0
  9211 ;;      Totals:         6       0       0       0       0       0       0
  9212 ;;Total ram usage:        6 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		_put2d
  9218 ;;		_asctime
  9219 ;;		_gmtime
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text46
  9224  001DD0                     __ptext46:
  9225                           	opt stack 0
  9226  001DD0                     ___awmod:
  9227                           	opt stack 23
  9228                           
  9229                           ;incstack = 0
  9230  001DD0  0E00               	movlw	0
  9231  001DD2  6E06               	movwf	___awmod@sign,c
  9232  001DD4  AE02               	btfss	___awmod@dividend+1,7,c
  9233  001DD6  D006               	goto	i2l1255
  9234  001DD8  6C01               	negf	___awmod@dividend,c
  9235  001DDA  1E02               	comf	___awmod@dividend+1,f,c
  9236  001DDC  B0D8               	btfsc	status,0,c
  9237  001DDE  2A02               	incf	___awmod@dividend+1,f,c
  9238  001DE0  0E01               	movlw	1
  9239  001DE2  6E06               	movwf	___awmod@sign,c
  9240  001DE4                     i2l1255:
  9241  001DE4  AE04               	btfss	___awmod@divisor+1,7,c
  9242  001DE6  D004               	goto	i2l1256
  9243  001DE8  6C03               	negf	___awmod@divisor,c
  9244  001DEA  1E04               	comf	___awmod@divisor+1,f,c
  9245  001DEC  B0D8               	btfsc	status,0,c
  9246  001DEE  2A04               	incf	___awmod@divisor+1,f,c
  9247  001DF0                     i2l1256:
  9248  001DF0  5003               	movf	___awmod@divisor,w,c
  9249  001DF2  1004               	iorwf	___awmod@divisor+1,w,c
  9250  001DF4  B4D8               	btfsc	status,2,c
  9251  001DF6  D018               	goto	i2l1263
  9252  001DF8  0E01               	movlw	1
  9253  001DFA  6E05               	movwf	___awmod@counter,c
  9254  001DFC  D004               	goto	i2l1258
  9255  001DFE  90D8               	bcf	status,0,c
  9256  001E00  3603               	rlcf	___awmod@divisor,f,c
  9257  001E02  3604               	rlcf	___awmod@divisor+1,f,c
  9258  001E04  2A05               	incf	___awmod@counter,f,c
  9259  001E06                     i2l1258:
  9260  001E06  AE04               	btfss	___awmod@divisor+1,7,c
  9261  001E08  D7FA               	goto	i2l1259
  9262  001E0A                     i2u351_40:
  9263  001E0A  5003               	movf	___awmod@divisor,w,c
  9264  001E0C  5C01               	subwf	___awmod@dividend,w,c
  9265  001E0E  5004               	movf	___awmod@divisor+1,w,c
  9266  001E10  5802               	subwfb	___awmod@dividend+1,w,c
  9267  001E12  A0D8               	btfss	status,0,c
  9268  001E14  D004               	goto	i2l1262
  9269  001E16  5003               	movf	___awmod@divisor,w,c
  9270  001E18  5E01               	subwf	___awmod@dividend,f,c
  9271  001E1A  5004               	movf	___awmod@divisor+1,w,c
  9272  001E1C  5A02               	subwfb	___awmod@dividend+1,f,c
  9273  001E1E                     i2l1262:
  9274  001E1E  90D8               	bcf	status,0,c
  9275  001E20  3204               	rrcf	___awmod@divisor+1,f,c
  9276  001E22  3203               	rrcf	___awmod@divisor,f,c
  9277  001E24  2E05               	decfsz	___awmod@counter,f,c
  9278  001E26  D7F1               	goto	i2u351_40
  9279  001E28                     i2l1263:
  9280  001E28  5006               	movf	___awmod@sign,w,c
  9281  001E2A  B4D8               	btfsc	status,2,c
  9282  001E2C  D004               	goto	i2l1264
  9283  001E2E  6C01               	negf	___awmod@dividend,c
  9284  001E30  1E02               	comf	___awmod@dividend+1,f,c
  9285  001E32  B0D8               	btfsc	status,0,c
  9286  001E34  2A02               	incf	___awmod@dividend+1,f,c
  9287  001E36                     i2l1264:
  9288  001E36  C001  F001         	movff	___awmod@dividend,?___awmod
  9289  001E3A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9290  001E3E  0012               	return	
  9291  001E40                     __end_of___awmod:
  9292                           	opt stack 0
  9293                           pclatu	equ	0xFFB
  9294                           pclath	equ	0xFFA
  9295                           tblptru	equ	0xFF8
  9296                           tblptrh	equ	0xFF7
  9297                           tblptrl	equ	0xFF6
  9298                           tablat	equ	0xFF5
  9299                           prodh	equ	0xFF4
  9300                           prodl	equ	0xFF3
  9301                           intcon	equ	0xFF2
  9302                           intcon2	equ	0xFF1
  9303                           postinc0	equ	0xFEE
  9304                           fsr0h	equ	0xFEA
  9305                           fsr0l	equ	0xFE9
  9306                           wreg	equ	0xFE8
  9307                           indf1	equ	0xFE7
  9308                           postdec1	equ	0xFE5
  9309                           plusw1	equ	0xFE3
  9310                           fsr1h	equ	0xFE2
  9311                           fsr1l	equ	0xFE1
  9312                           indf2	equ	0xFDF
  9313                           postinc2	equ	0xFDE
  9314                           postdec2	equ	0xFDD
  9315                           plusw2	equ	0xFDB
  9316                           fsr2h	equ	0xFDA
  9317                           fsr2l	equ	0xFD9
  9318                           status	equ	0xFD8
  9319                           
  9320 ;; *************** function ___wmul *****************
  9321 ;; Defined at:
  9322 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  multiplier      2    0[COMRAM] unsigned int 
  9325 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  product         2    4[COMRAM] unsigned int 
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  2    0[COMRAM] unsigned int 
  9330 ;; Registers used:
  9331 ;;		wreg, status,2, status,0, prodl, prodh
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9337 ;;      Params:         4       0       0       0       0       0       0
  9338 ;;      Locals:         2       0       0       0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0
  9340 ;;      Totals:         6       0       0       0       0       0       0
  9341 ;;Total ram usage:        6 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_asctime
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text47
  9351  0022EE                     __ptext47:
  9352                           	opt stack 0
  9353  0022EE                     ___wmul:
  9354                           	opt stack 24
  9355                           
  9356                           ;incstack = 0
  9357  0022EE  5001               	movf	___wmul@multiplier,w,c
  9358  0022F0  0203               	mulwf	___wmul@multiplicand,c
  9359  0022F2  CFF3 F005          	movff	prodl,___wmul@product
  9360  0022F6  CFF4 F006          	movff	prodh,___wmul@product+1
  9361  0022FA  5001               	movf	___wmul@multiplier,w,c
  9362  0022FC  0204               	mulwf	___wmul@multiplicand+1,c
  9363  0022FE  50F3               	movf	prodl,w,c
  9364  002300  2606               	addwf	___wmul@product+1,f,c
  9365  002302  5002               	movf	___wmul@multiplier+1,w,c
  9366  002304  0203               	mulwf	___wmul@multiplicand,c
  9367  002306  50F3               	movf	prodl,w,c
  9368  002308  2606               	addwf	___wmul@product+1,f,c
  9369  00230A  C005  F001         	movff	___wmul@product,?___wmul
  9370  00230E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9371  002312  0012               	return	
  9372  002314                     __end_of___wmul:
  9373                           	opt stack 0
  9374                           pclatu	equ	0xFFB
  9375                           pclath	equ	0xFFA
  9376                           tblptru	equ	0xFF8
  9377                           tblptrh	equ	0xFF7
  9378                           tblptrl	equ	0xFF6
  9379                           tablat	equ	0xFF5
  9380                           prodh	equ	0xFF4
  9381                           prodl	equ	0xFF3
  9382                           intcon	equ	0xFF2
  9383                           intcon2	equ	0xFF1
  9384                           postinc0	equ	0xFEE
  9385                           fsr0h	equ	0xFEA
  9386                           fsr0l	equ	0xFE9
  9387                           wreg	equ	0xFE8
  9388                           indf1	equ	0xFE7
  9389                           postdec1	equ	0xFE5
  9390                           plusw1	equ	0xFE3
  9391                           fsr1h	equ	0xFE2
  9392                           fsr1l	equ	0xFE1
  9393                           indf2	equ	0xFDF
  9394                           postinc2	equ	0xFDE
  9395                           postdec2	equ	0xFDD
  9396                           plusw2	equ	0xFDB
  9397                           fsr2h	equ	0xFDA
  9398                           fsr2l	equ	0xFD9
  9399                           status	equ	0xFD8
  9400                           
  9401 ;; *************** function ___awdiv *****************
  9402 ;; Defined at:
  9403 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  dividend        2    0[COMRAM] int 
  9406 ;;  divisor         2    2[COMRAM] int 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;  quotient        2    6[COMRAM] int 
  9409 ;;  sign            1    5[COMRAM] unsigned char 
  9410 ;;  counter         1    4[COMRAM] unsigned char 
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  2    0[COMRAM] int 
  9413 ;; Registers used:
  9414 ;;		wreg, status,2, status,0
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9420 ;;      Params:         4       0       0       0       0       0       0
  9421 ;;      Locals:         4       0       0       0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0
  9423 ;;      Totals:         8       0       0       0       0       0       0
  9424 ;;Total ram usage:        8 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; This function calls:
  9427 ;;		Nothing
  9428 ;; This function is called by:
  9429 ;;		_asctime
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text48
  9434  001AF0                     __ptext48:
  9435                           	opt stack 0
  9436  001AF0                     ___awdiv:
  9437                           	opt stack 24
  9438                           
  9439                           ;incstack = 0
  9440  001AF0  0E00               	movlw	0
  9441  001AF2  6E06               	movwf	___awdiv@sign,c
  9442  001AF4  AE04               	btfss	___awdiv@divisor+1,7,c
  9443  001AF6  D006               	goto	i2l1242
  9444  001AF8  6C03               	negf	___awdiv@divisor,c
  9445  001AFA  1E04               	comf	___awdiv@divisor+1,f,c
  9446  001AFC  B0D8               	btfsc	status,0,c
  9447  001AFE  2A04               	incf	___awdiv@divisor+1,f,c
  9448  001B00  0E01               	movlw	1
  9449  001B02  6E06               	movwf	___awdiv@sign,c
  9450  001B04                     i2l1242:
  9451  001B04  AE02               	btfss	___awdiv@dividend+1,7,c
  9452  001B06  D006               	goto	i2l1243
  9453  001B08  6C01               	negf	___awdiv@dividend,c
  9454  001B0A  1E02               	comf	___awdiv@dividend+1,f,c
  9455  001B0C  B0D8               	btfsc	status,0,c
  9456  001B0E  2A02               	incf	___awdiv@dividend+1,f,c
  9457  001B10  0E01               	movlw	1
  9458  001B12  1A06               	xorwf	___awdiv@sign,f,c
  9459  001B14                     i2l1243:
  9460  001B14  0E00               	movlw	0
  9461  001B16  6E08               	movwf	___awdiv@quotient+1,c
  9462  001B18  0E00               	movlw	0
  9463  001B1A  6E07               	movwf	___awdiv@quotient,c
  9464  001B1C  5003               	movf	___awdiv@divisor,w,c
  9465  001B1E  1004               	iorwf	___awdiv@divisor+1,w,c
  9466  001B20  B4D8               	btfsc	status,2,c
  9467  001B22  D01C               	goto	i2l1250
  9468  001B24  0E01               	movlw	1
  9469  001B26  6E05               	movwf	___awdiv@counter,c
  9470  001B28  D004               	goto	i2l1245
  9471  001B2A  90D8               	bcf	status,0,c
  9472  001B2C  3603               	rlcf	___awdiv@divisor,f,c
  9473  001B2E  3604               	rlcf	___awdiv@divisor+1,f,c
  9474  001B30  2A05               	incf	___awdiv@counter,f,c
  9475  001B32                     i2l1245:
  9476  001B32  AE04               	btfss	___awdiv@divisor+1,7,c
  9477  001B34  D7FA               	goto	i2l1246
  9478  001B36                     i2u371_40:
  9479  001B36  90D8               	bcf	status,0,c
  9480  001B38  3607               	rlcf	___awdiv@quotient,f,c
  9481  001B3A  3608               	rlcf	___awdiv@quotient+1,f,c
  9482  001B3C  5003               	movf	___awdiv@divisor,w,c
  9483  001B3E  5C01               	subwf	___awdiv@dividend,w,c
  9484  001B40  5004               	movf	___awdiv@divisor+1,w,c
  9485  001B42  5802               	subwfb	___awdiv@dividend+1,w,c
  9486  001B44  A0D8               	btfss	status,0,c
  9487  001B46  D005               	goto	i2l1249
  9488  001B48  5003               	movf	___awdiv@divisor,w,c
  9489  001B4A  5E01               	subwf	___awdiv@dividend,f,c
  9490  001B4C  5004               	movf	___awdiv@divisor+1,w,c
  9491  001B4E  5A02               	subwfb	___awdiv@dividend+1,f,c
  9492  001B50  8007               	bsf	___awdiv@quotient,0,c
  9493  001B52                     i2l1249:
  9494  001B52  90D8               	bcf	status,0,c
  9495  001B54  3204               	rrcf	___awdiv@divisor+1,f,c
  9496  001B56  3203               	rrcf	___awdiv@divisor,f,c
  9497  001B58  2E05               	decfsz	___awdiv@counter,f,c
  9498  001B5A  D7ED               	goto	i2u371_40
  9499  001B5C                     i2l1250:
  9500  001B5C  5006               	movf	___awdiv@sign,w,c
  9501  001B5E  B4D8               	btfsc	status,2,c
  9502  001B60  D004               	goto	i2l1251
  9503  001B62  6C07               	negf	___awdiv@quotient,c
  9504  001B64  1E08               	comf	___awdiv@quotient+1,f,c
  9505  001B66  B0D8               	btfsc	status,0,c
  9506  001B68  2A08               	incf	___awdiv@quotient+1,f,c
  9507  001B6A                     i2l1251:
  9508  001B6A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9509  001B6E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9510  001B72  0012               	return	
  9511  001B74                     __end_of___awdiv:
  9512                           	opt stack 0
  9513                           pclatu	equ	0xFFB
  9514                           pclath	equ	0xFFA
  9515                           tblptru	equ	0xFF8
  9516                           tblptrh	equ	0xFF7
  9517                           tblptrl	equ	0xFF6
  9518                           tablat	equ	0xFF5
  9519                           prodh	equ	0xFF4
  9520                           prodl	equ	0xFF3
  9521                           intcon	equ	0xFF2
  9522                           intcon2	equ	0xFF1
  9523                           postinc0	equ	0xFEE
  9524                           fsr0h	equ	0xFEA
  9525                           fsr0l	equ	0xFE9
  9526                           wreg	equ	0xFE8
  9527                           indf1	equ	0xFE7
  9528                           postdec1	equ	0xFE5
  9529                           plusw1	equ	0xFE3
  9530                           fsr1h	equ	0xFE2
  9531                           fsr1l	equ	0xFE1
  9532                           indf2	equ	0xFDF
  9533                           postinc2	equ	0xFDE
  9534                           postdec2	equ	0xFDD
  9535                           plusw2	equ	0xFDB
  9536                           fsr2h	equ	0xFDA
  9537                           fsr2l	equ	0xFD9
  9538                           status	equ	0xFD8
  9539                           
  9540 ;; *************** function _TMR2_ISR *****************
  9541 ;; Defined at:
  9542 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9556 ;;      Params:         0       0       0       0       0       0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0
  9559 ;;      Totals:         0       0       0       0       0       0       0
  9560 ;;Total ram usage:        0 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    4
  9563 ;; This function calls:
  9564 ;;		Absolute function
  9565 ;;		_TMR2_DefaultInterruptHandler
  9566 ;;		_button_input_isr
  9567 ;; This function is called by:
  9568 ;;		_INTERRUPT_InterruptManager
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text49
  9573  00233A                     __ptext49:
  9574                           	opt stack 0
  9575  00233A                     _TMR2_ISR:
  9576                           	opt stack 22
  9577                           
  9578                           ;tmr2.c: 125: PIR1bits.TMR2IF = 0;
  9579                           
  9580                           ;incstack = 0
  9581  00233A  929E               	bcf	3998,1,c	;volatile
  9582                           
  9583                           ;tmr2.c: 127: if(TMR2_InterruptHandler)
  9584  00233C  504F               	movf	_TMR2_InterruptHandler,w,c
  9585  00233E  1050               	iorwf	_TMR2_InterruptHandler+1,w,c
  9586  002340  B4D8               	btfsc	status,2,c
  9587  002342  0012               	return	
  9588                           
  9589                           ;tmr2.c: 128: {
  9590                           ;tmr2.c: 129: TMR2_InterruptHandler();
  9591  002344  D801               	call	i2u560_48
  9592  002346  0012               	return	
  9593  002348                     i2u560_48:
  9594  002348  0005               	push	
  9595  00234A  6EFA               	movwf	pclath,c
  9596  00234C  504F               	movf	_TMR2_InterruptHandler,w,c
  9597  00234E  6EFD               	movwf	tosl,c
  9598  002350  5050               	movf	_TMR2_InterruptHandler+1,w,c
  9599  002352  6EFE               	movwf	tosh,c
  9600  002354  50F8               	movf	tblptru,w,c
  9601  002356  6EFF               	movwf	tosu,c
  9602  002358  50FA               	movf	pclath,w,c
  9603  00235A  0012               	return		;indir
  9604  00235C                     __end_of_TMR2_ISR:
  9605                           	opt stack 0
  9606                           tosu	equ	0xFFF
  9607                           tosh	equ	0xFFE
  9608                           tosl	equ	0xFFD
  9609                           pclatu	equ	0xFFB
  9610                           pclath	equ	0xFFA
  9611                           tblptru	equ	0xFF8
  9612                           tblptrh	equ	0xFF7
  9613                           tblptrl	equ	0xFF6
  9614                           tablat	equ	0xFF5
  9615                           prodh	equ	0xFF4
  9616                           prodl	equ	0xFF3
  9617                           intcon	equ	0xFF2
  9618                           intcon2	equ	0xFF1
  9619                           postinc0	equ	0xFEE
  9620                           fsr0h	equ	0xFEA
  9621                           fsr0l	equ	0xFE9
  9622                           wreg	equ	0xFE8
  9623                           indf1	equ	0xFE7
  9624                           postdec1	equ	0xFE5
  9625                           plusw1	equ	0xFE3
  9626                           fsr1h	equ	0xFE2
  9627                           fsr1l	equ	0xFE1
  9628                           indf2	equ	0xFDF
  9629                           postinc2	equ	0xFDE
  9630                           postdec2	equ	0xFDD
  9631                           plusw2	equ	0xFDB
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  9637 ;; Defined at:
  9638 ;;		line 138 in file "mcc_generated_files/tmr2.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;		None
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;		None
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  1    wreg      void 
  9645 ;; Registers used:
  9646 ;;		None
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9652 ;;      Params:         0       0       0       0       0       0       0
  9653 ;;      Locals:         0       0       0       0       0       0       0
  9654 ;;      Temps:          0       0       0       0       0       0       0
  9655 ;;      Totals:         0       0       0       0       0       0       0
  9656 ;;Total ram usage:        0 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_TMR2_Initialize
  9662 ;;		_TMR2_ISR
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text50
  9667  00246C                     __ptext50:
  9668                           	opt stack 0
  9669  00246C                     _TMR2_DefaultInterruptHandler:
  9670                           	opt stack 25
  9671                           
  9672                           ;incstack = 0
  9673  00246C  0012               	return		;funcret
  9674  00246E                     __end_of_TMR2_DefaultInterruptHandler:
  9675                           	opt stack 0
  9676                           tosu	equ	0xFFF
  9677                           tosh	equ	0xFFE
  9678                           tosl	equ	0xFFD
  9679                           pclatu	equ	0xFFB
  9680                           pclath	equ	0xFFA
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           intcon2	equ	0xFF1
  9689                           postinc0	equ	0xFEE
  9690                           fsr0h	equ	0xFEA
  9691                           fsr0l	equ	0xFE9
  9692                           wreg	equ	0xFE8
  9693                           indf1	equ	0xFE7
  9694                           postdec1	equ	0xFE5
  9695                           plusw1	equ	0xFE3
  9696                           fsr1h	equ	0xFE2
  9697                           fsr1l	equ	0xFE1
  9698                           indf2	equ	0xFDF
  9699                           postinc2	equ	0xFDE
  9700                           postdec2	equ	0xFDD
  9701                           plusw2	equ	0xFDB
  9702                           fsr2h	equ	0xFDA
  9703                           fsr2l	equ	0xFD9
  9704                           status	equ	0xFD8
  9705                           
  9706 ;; *************** function _button_input_isr *****************
  9707 ;; Defined at:
  9708 ;;		line 52 in file "button_input_isr.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  x               2    6[COMRAM] int 
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9722 ;;      Params:         0       0       0       0       0       0       0
  9723 ;;      Locals:         2       0       0       0       0       0       0
  9724 ;;      Temps:          1       0       0       0       0       0       0
  9725 ;;      Totals:         3       0       0       0       0       0       0
  9726 ;;Total ram usage:        3 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    3
  9729 ;; This function calls:
  9730 ;;		_getInputPin
  9731 ;; This function is called by:
  9732 ;;		_main
  9733 ;;		_old_main
  9734 ;;		_TMR2_ISR
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text51
  9739  00108A                     __ptext51:
  9740                           	opt stack 0
  9741  00108A                     _button_input_isr:
  9742                           	opt stack 22
  9743                           
  9744                           ;button_input_isr.c: 54: IN_PulsCounter++;
  9745                           
  9746                           ;incstack = 0
  9747  00108A  2A59               	incf	_IN_PulsCounter,f,c
  9748                           
  9749                           ;button_input_isr.c: 56: if(IN_PulsCounter < 125)
  9750  00108C  0E7D               	movlw	125
  9751  00108E  6059               	cpfslt	_IN_PulsCounter,c
  9752  001090  D038               	goto	i2l537
  9753                           
  9754                           ;button_input_isr.c: 57: {
  9755                           ;button_input_isr.c: 58: _channel_pulses[0] = _channel_pulses[0] + getInputPin(0);
  9756  001092  0E00               	movlw	0
  9757  001094  EC88  F00C         	call	_getInputPin
  9758  001098  0100               	movlb	0	; () banked
  9759  00109A  25BB               	addwf	__channel_pulses& (0+255),w,b
  9760  00109C  0100               	movlb	0	; () banked
  9761  00109E  6FBB               	movwf	__channel_pulses& (0+255),b
  9762                           
  9763                           ;button_input_isr.c: 59: _channel_pulses[1] = _channel_pulses[1] + getInputPin(1);
  9764  0010A0  0E01               	movlw	1
  9765  0010A2  EC88  F00C         	call	_getInputPin
  9766  0010A6  0100               	movlb	0	; () banked
  9767  0010A8  25BC               	addwf	(__channel_pulses+1)& (0+255),w,b
  9768  0010AA  0100               	movlb	0	; () banked
  9769  0010AC  6FBC               	movwf	(__channel_pulses+1)& (0+255),b
  9770                           
  9771                           ;button_input_isr.c: 60: _channel_pulses[2] = _channel_pulses[2] + getInputPin(2);
  9772  0010AE  0E02               	movlw	2
  9773  0010B0  EC88  F00C         	call	_getInputPin
  9774  0010B4  0100               	movlb	0	; () banked
  9775  0010B6  25BD               	addwf	(__channel_pulses+2)& (0+255),w,b
  9776  0010B8  0100               	movlb	0	; () banked
  9777  0010BA  6FBD               	movwf	(__channel_pulses+2)& (0+255),b
  9778                           
  9779                           ;button_input_isr.c: 61: _channel_pulses[3] = _channel_pulses[3] + getInputPin(3);
  9780  0010BC  0E03               	movlw	3
  9781  0010BE  EC88  F00C         	call	_getInputPin
  9782  0010C2  0100               	movlb	0	; () banked
  9783  0010C4  25BE               	addwf	(__channel_pulses+3)& (0+255),w,b
  9784  0010C6  0100               	movlb	0	; () banked
  9785  0010C8  6FBE               	movwf	(__channel_pulses+3)& (0+255),b
  9786                           
  9787                           ;button_input_isr.c: 62: _channel_pulses[4] = _channel_pulses[4] + getInputPin(4);
  9788  0010CA  0E04               	movlw	4
  9789  0010CC  EC88  F00C         	call	_getInputPin
  9790  0010D0  0100               	movlb	0	; () banked
  9791  0010D2  25BF               	addwf	(__channel_pulses+4)& (0+255),w,b
  9792  0010D4  0100               	movlb	0	; () banked
  9793  0010D6  6FBF               	movwf	(__channel_pulses+4)& (0+255),b
  9794                           
  9795                           ;button_input_isr.c: 63: _channel_pulses[5] = _channel_pulses[5] + getInputPin(5);
  9796  0010D8  0E05               	movlw	5
  9797  0010DA  EC88  F00C         	call	_getInputPin
  9798  0010DE  0100               	movlb	0	; () banked
  9799  0010E0  25C0               	addwf	(__channel_pulses+5)& (0+255),w,b
  9800  0010E2  0100               	movlb	0	; () banked
  9801  0010E4  6FC0               	movwf	(__channel_pulses+5)& (0+255),b
  9802                           
  9803                           ;button_input_isr.c: 64: _channel_pulses[6] = _channel_pulses[6] + getInputPin(6);
  9804  0010E6  0E06               	movlw	6
  9805  0010E8  EC88  F00C         	call	_getInputPin
  9806  0010EC  0100               	movlb	0	; () banked
  9807  0010EE  25C1               	addwf	(__channel_pulses+6)& (0+255),w,b
  9808  0010F0  0100               	movlb	0	; () banked
  9809  0010F2  6FC1               	movwf	(__channel_pulses+6)& (0+255),b
  9810                           
  9811                           ;button_input_isr.c: 65: _channel_pulses[7] = _channel_pulses[7] + getInputPin(7);
  9812  0010F4  0E07               	movlw	7
  9813  0010F6  EC88  F00C         	call	_getInputPin
  9814  0010FA  0100               	movlb	0	; () banked
  9815  0010FC  25C2               	addwf	(__channel_pulses+7)& (0+255),w,b
  9816  0010FE  0100               	movlb	0	; () banked
  9817  001100  6FC2               	movwf	(__channel_pulses+7)& (0+255),b
  9818  001102                     i2l537:
  9819                           
  9820                           ;button_input_isr.c: 66: }
  9821                           ;button_input_isr.c: 67: if (IN_PulsCounter == 125)
  9822                           
  9823                           ; BSR set to: 0
  9824  001102  0E7D               	movlw	125
  9825  001104  1859               	xorwf	_IN_PulsCounter,w,c
  9826  001106  A4D8               	btfss	status,2,c
  9827  001108  D078               	goto	i2u404_40
  9828                           
  9829                           ;button_input_isr.c: 68: {
  9830                           ;button_input_isr.c: 69: for(int x=7; x>=0; x--)
  9831  00110A  0E00               	movlw	0
  9832  00110C  6E08               	movwf	button_input_isr@x+1,c
  9833  00110E  0E07               	movlw	7
  9834  001110  6E07               	movwf	button_input_isr@x,c
  9835  001112                     i2l4196:
  9836  001112  BE08               	btfsc	button_input_isr@x+1,7,c
  9837  001114  D072               	goto	i2u404_40
  9838                           
  9839                           ;button_input_isr.c: 70: {
  9840                           ;button_input_isr.c: 71: if(_channel_pulses[x]<70)
  9841  001116  0EBB               	movlw	low __channel_pulses
  9842  001118  2407               	addwf	button_input_isr@x,w,c
  9843  00111A  6ED9               	movwf	fsr2l,c
  9844  00111C  0E00               	movlw	high __channel_pulses
  9845  00111E  2008               	addwfc	button_input_isr@x+1,w,c
  9846  001120  6EDA               	movwf	fsr2h,c
  9847  001122  0E46               	movlw	70
  9848  001124  60DF               	cpfslt	indf2,c
  9849  001126  D03B               	goto	i2l541
  9850                           
  9851                           ;button_input_isr.c: 72: {
  9852                           ;button_input_isr.c: 74: if (IN_ChanelCyclesCounterUp[x]<1)
  9853  001128  0E66               	movlw	low _IN_ChanelCyclesCounterUp
  9854  00112A  2407               	addwf	button_input_isr@x,w,c
  9855  00112C  6ED9               	movwf	fsr2l,c
  9856  00112E  0E01               	movlw	high _IN_ChanelCyclesCounterUp
  9857  001130  2008               	addwfc	button_input_isr@x+1,w,c
  9858  001132  6EDA               	movwf	fsr2h,c
  9859  001134  50DF               	movf	indf2,w,c
  9860  001136  A4D8               	btfss	status,2,c
  9861  001138  D007               	goto	i2l542
  9862                           
  9863                           ;button_input_isr.c: 75: {
  9864                           ;button_input_isr.c: 76: IN_ChanelCyclesCounterUp[x]++;
  9865  00113A  0E66               	movlw	low _IN_ChanelCyclesCounterUp
  9866  00113C  2407               	addwf	button_input_isr@x,w,c
  9867  00113E  6ED9               	movwf	fsr2l,c
  9868  001140  0E01               	movlw	high _IN_ChanelCyclesCounterUp
  9869  001142  2008               	addwfc	button_input_isr@x+1,w,c
  9870  001144  6EDA               	movwf	fsr2h,c
  9871  001146  2ADF               	incf	indf2,f,c
  9872  001148                     i2l542:
  9873                           
  9874                           ;button_input_isr.c: 77: }
  9875                           ;button_input_isr.c: 78: if (IN_ChanelCyclesCounterUp[x] >= 1)
  9876  001148  0E66               	movlw	low _IN_ChanelCyclesCounterUp
  9877  00114A  2407               	addwf	button_input_isr@x,w,c
  9878  00114C  6ED9               	movwf	fsr2l,c
  9879  00114E  0E01               	movlw	high _IN_ChanelCyclesCounterUp
  9880  001150  2008               	addwfc	button_input_isr@x+1,w,c
  9881  001152  6EDA               	movwf	fsr2h,c
  9882  001154  50DF               	movf	indf2,w,c
  9883  001156  B4D8               	btfsc	status,2,c
  9884  001158  D04C               	goto	i2l552
  9885                           
  9886                           ;button_input_isr.c: 79: {
  9887                           ;button_input_isr.c: 80: if(IN_ChanelAktivated[x]==0)
  9888  00115A  0E56               	movlw	low _IN_ChanelAktivated
  9889  00115C  2407               	addwf	button_input_isr@x,w,c
  9890  00115E  6ED9               	movwf	fsr2l,c
  9891  001160  0E01               	movlw	high _IN_ChanelAktivated
  9892  001162  2008               	addwfc	button_input_isr@x+1,w,c
  9893  001164  6EDA               	movwf	fsr2h,c
  9894  001166  50DF               	movf	indf2,w,c
  9895  001168  A4D8               	btfss	status,2,c
  9896  00116A  D043               	goto	i2l552
  9897                           
  9898                           ;button_input_isr.c: 83: if (1==1)
  9899  00116C  0E56               	movlw	low _IN_ChanelAktivated
  9900  00116E  2407               	addwf	button_input_isr@x,w,c
  9901  001170  6ED9               	movwf	fsr2l,c
  9902  001172  0E01               	movlw	high _IN_ChanelAktivated
  9903  001174  2008               	addwfc	button_input_isr@x+1,w,c
  9904  001176  6EDA               	movwf	fsr2h,c
  9905  001178  0E01               	movlw	1
  9906  00117A  6EDF               	movwf	indf2,c
  9907                           
  9908                           ;button_input_isr.c: 84: {
  9909                           ;button_input_isr.c: 85: IN_ChanelOutputBuffer[x]= !(IN_ChanelOutputBuffer[x]);
  9910  00117C  0EB3               	movlw	low _IN_ChanelOutputBuffer
  9911  00117E  2407               	addwf	button_input_isr@x,w,c
  9912  001180  6ED9               	movwf	fsr2l,c
  9913  001182  0E00               	movlw	high _IN_ChanelOutputBuffer
  9914  001184  2008               	addwfc	button_input_isr@x+1,w,c
  9915  001186  6EDA               	movwf	fsr2h,c
  9916  001188  0EB3               	movlw	low _IN_ChanelOutputBuffer
  9917  00118A  2407               	addwf	button_input_isr@x,w,c
  9918  00118C  6EE1               	movwf	fsr1l,c
  9919  00118E  0E00               	movlw	high _IN_ChanelOutputBuffer
  9920  001190  2008               	addwfc	button_input_isr@x+1,w,c
  9921  001192  6EE2               	movwf	fsr1h,c
  9922  001194  50E7               	movf	indf1,w,c
  9923  001196  A4D8               	btfss	status,2,c
  9924  001198  D02A               	goto	L6
  9925  00119A  0E01               	movlw	1
  9926  00119C  D029               	goto	L5
  9927  00119E                     i2l541:
  9928                           
  9929                           ;button_input_isr.c: 94: else
  9930                           ;button_input_isr.c: 95: {
  9931                           ;button_input_isr.c: 96: if (IN_ChanelCyclesCounterDown[x]<1)
  9932  00119E  0E5E               	movlw	low _IN_ChanelCyclesCounterDown
  9933  0011A0  2407               	addwf	button_input_isr@x,w,c
  9934  0011A2  6ED9               	movwf	fsr2l,c
  9935  0011A4  0E01               	movlw	high _IN_ChanelCyclesCounterDown
  9936  0011A6  2008               	addwfc	button_input_isr@x+1,w,c
  9937  0011A8  6EDA               	movwf	fsr2h,c
  9938  0011AA  50DF               	movf	indf2,w,c
  9939  0011AC  A4D8               	btfss	status,2,c
  9940  0011AE  D007               	goto	i2l548
  9941                           
  9942                           ;button_input_isr.c: 97: {
  9943                           ;button_input_isr.c: 98: IN_ChanelCyclesCounterDown[x]++;
  9944  0011B0  0E5E               	movlw	low _IN_ChanelCyclesCounterDown
  9945  0011B2  2407               	addwf	button_input_isr@x,w,c
  9946  0011B4  6ED9               	movwf	fsr2l,c
  9947  0011B6  0E01               	movlw	high _IN_ChanelCyclesCounterDown
  9948  0011B8  2008               	addwfc	button_input_isr@x+1,w,c
  9949  0011BA  6EDA               	movwf	fsr2h,c
  9950  0011BC  2ADF               	incf	indf2,f,c
  9951  0011BE                     i2l548:
  9952                           
  9953                           ;button_input_isr.c: 99: }
  9954                           ;button_input_isr.c: 100: if (IN_ChanelCyclesCounterDown[x] >= 1)
  9955  0011BE  0E5E               	movlw	low _IN_ChanelCyclesCounterDown
  9956  0011C0  2407               	addwf	button_input_isr@x,w,c
  9957  0011C2  6ED9               	movwf	fsr2l,c
  9958  0011C4  0E01               	movlw	high _IN_ChanelCyclesCounterDown
  9959  0011C6  2008               	addwfc	button_input_isr@x+1,w,c
  9960  0011C8  6EDA               	movwf	fsr2h,c
  9961  0011CA  50DF               	movf	indf2,w,c
  9962  0011CC  B4D8               	btfsc	status,2,c
  9963  0011CE  D011               	goto	i2l552
  9964                           
  9965                           ;button_input_isr.c: 101: {
  9966                           ;button_input_isr.c: 102: if(IN_ChanelAktivated[x]==1)
  9967  0011D0  0E56               	movlw	low _IN_ChanelAktivated
  9968  0011D2  2407               	addwf	button_input_isr@x,w,c
  9969  0011D4  6ED9               	movwf	fsr2l,c
  9970  0011D6  0E01               	movlw	high _IN_ChanelAktivated
  9971  0011D8  2008               	addwfc	button_input_isr@x+1,w,c
  9972  0011DA  6EDA               	movwf	fsr2h,c
  9973  0011DC  04DE               	decf	postinc2,w,c
  9974  0011DE  A4D8               	btfss	status,2,c
  9975  0011E0  D008               	goto	i2l552
  9976                           
  9977                           ;button_input_isr.c: 105: if (1==1)
  9978  0011E2  0E56               	movlw	low _IN_ChanelAktivated
  9979  0011E4  2407               	addwf	button_input_isr@x,w,c
  9980  0011E6  6ED9               	movwf	fsr2l,c
  9981  0011E8  0E01               	movlw	high _IN_ChanelAktivated
  9982                           
  9983                           ;button_input_isr.c: 109: else
  9984                           ;button_input_isr.c: 110: {
  9985                           ;button_input_isr.c: 111: IN_ChanelOutputBuffer[x]=0;
  9986                           
  9987                           ;button_input_isr.c: 106: {
  9988                           ;button_input_isr.c: 108: }
  9989  0011EA  2008               	addwfc	button_input_isr@x+1,w,c
  9990  0011EC  6EDA               	movwf	fsr2h,c
  9991  0011EE                     L6:
  9992  0011EE  0E00               	movlw	0
  9993  0011F0                     L5:
  9994  0011F0  6EDF               	movwf	indf2,c
  9995  0011F2                     i2l552:
  9996  0011F2  0607               	decf	button_input_isr@x,f,c
  9997  0011F4  A0D8               	btfss	status,0,c
  9998  0011F6  0608               	decf	button_input_isr@x+1,f,c
  9999  0011F8  D78C               	goto	i2l4196
 10000  0011FA                     i2u404_40:
 10001                           
 10002                           ;button_input_isr.c: 112: }
 10003                           ;button_input_isr.c: 113: }
 10004                           ;button_input_isr.c: 114: }
 10005                           ;button_input_isr.c: 115: }
 10006                           ;button_input_isr.c: 116: }
 10007                           ;button_input_isr.c: 117: }
 10008                           ;button_input_isr.c: 118: if (IN_PulsCounter >= 125)
 10009  0011FA  0E7C               	movlw	124
 10010  0011FC  6459               	cpfsgt	_IN_PulsCounter,c
 10011  0011FE  0012               	return	
 10012                           
 10013                           ;button_input_isr.c: 119: {
 10014                           ;button_input_isr.c: 121: IN_PulsCounter=0;
 10015  001200  0E00               	movlw	0
 10016  001202  6E59               	movwf	_IN_PulsCounter,c
 10017                           
 10018                           ;button_input_isr.c: 122: _channel_pulses[0]=0;
 10019  001204  0E00               	movlw	0
 10020  001206  0100               	movlb	0	; () banked
 10021  001208  6FBB               	movwf	__channel_pulses& (0+255),b
 10022                           
 10023                           ;button_input_isr.c: 123: _channel_pulses[1]=0;
 10024  00120A  0E00               	movlw	0
 10025  00120C  0100               	movlb	0	; () banked
 10026  00120E  6FBC               	movwf	(__channel_pulses+1)& (0+255),b
 10027                           
 10028                           ;button_input_isr.c: 124: _channel_pulses[2]=0;
 10029  001210  0E00               	movlw	0
 10030  001212  0100               	movlb	0	; () banked
 10031  001214  6FBD               	movwf	(__channel_pulses+2)& (0+255),b
 10032                           
 10033                           ;button_input_isr.c: 125: _channel_pulses[3]=0;
 10034  001216  0E00               	movlw	0
 10035  001218  0100               	movlb	0	; () banked
 10036  00121A  6FBE               	movwf	(__channel_pulses+3)& (0+255),b
 10037                           
 10038                           ;button_input_isr.c: 126: _channel_pulses[4]=0;
 10039  00121C  0E00               	movlw	0
 10040  00121E  0100               	movlb	0	; () banked
 10041  001220  6FBF               	movwf	(__channel_pulses+4)& (0+255),b
 10042                           
 10043                           ;button_input_isr.c: 127: _channel_pulses[5]=0;
 10044  001222  0E00               	movlw	0
 10045  001224  0100               	movlb	0	; () banked
 10046  001226  6FC0               	movwf	(__channel_pulses+5)& (0+255),b
 10047                           
 10048                           ;button_input_isr.c: 128: _channel_pulses[6]=0;
 10049  001228  0E00               	movlw	0
 10050  00122A  0100               	movlb	0	; () banked
 10051  00122C  6FC1               	movwf	(__channel_pulses+6)& (0+255),b
 10052                           
 10053                           ;button_input_isr.c: 129: _channel_pulses[7]=0;
 10054  00122E  0E00               	movlw	0
 10055  001230  0100               	movlb	0	; () banked
 10056  001232  6FC2               	movwf	(__channel_pulses+7)& (0+255),b
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;button_input_isr.c: 135: outBufferGlobal[7]=IN_ChanelOutputBuffer[7];
 10060  001234  C0BA  F1C6         	movff	_IN_ChanelOutputBuffer+7,_outBufferGlobal+14
 10061  001238  0101               	movlb	1	; () banked
 10062  00123A  6BC7               	clrf	(_outBufferGlobal+15)& (0+255),b
 10063                           
 10064                           ; BSR set to: 1
 10065                           ;button_input_isr.c: 136: outBufferGlobal[6]=IN_ChanelOutputBuffer[6];
 10066  00123C  C0B9  F1C4         	movff	_IN_ChanelOutputBuffer+6,_outBufferGlobal+12
 10067  001240  0101               	movlb	1	; () banked
 10068  001242  6BC5               	clrf	(_outBufferGlobal+13)& (0+255),b
 10069                           
 10070                           ; BSR set to: 1
 10071                           ;button_input_isr.c: 137: outBufferGlobal[5]=IN_ChanelOutputBuffer[5];
 10072  001244  C0B8  F1C2         	movff	_IN_ChanelOutputBuffer+5,_outBufferGlobal+10
 10073  001248  0101               	movlb	1	; () banked
 10074  00124A  6BC3               	clrf	(_outBufferGlobal+11)& (0+255),b
 10075                           
 10076                           ; BSR set to: 1
 10077                           ;button_input_isr.c: 138: outBufferGlobal[4]=IN_ChanelOutputBuffer[4];
 10078  00124C  C0B7  F1C0         	movff	_IN_ChanelOutputBuffer+4,_outBufferGlobal+8
 10079  001250  0101               	movlb	1	; () banked
 10080  001252  6BC1               	clrf	(_outBufferGlobal+9)& (0+255),b
 10081                           
 10082                           ; BSR set to: 1
 10083                           ;button_input_isr.c: 139: outBufferGlobal[3]=IN_ChanelOutputBuffer[3];
 10084  001254  C0B6  F1BE         	movff	_IN_ChanelOutputBuffer+3,_outBufferGlobal+6
 10085  001258  0101               	movlb	1	; () banked
 10086  00125A  6BBF               	clrf	(_outBufferGlobal+7)& (0+255),b
 10087                           
 10088                           ; BSR set to: 1
 10089                           ;button_input_isr.c: 140: outBufferGlobal[2]=IN_ChanelOutputBuffer[2];
 10090  00125C  C0B5  F1BC         	movff	_IN_ChanelOutputBuffer+2,_outBufferGlobal+4
 10091  001260  0101               	movlb	1	; () banked
 10092  001262  6BBD               	clrf	(_outBufferGlobal+5)& (0+255),b
 10093                           
 10094                           ; BSR set to: 1
 10095                           ;button_input_isr.c: 141: outBufferGlobal[1]=IN_ChanelOutputBuffer[1];
 10096  001264  C0B4  F1BA         	movff	_IN_ChanelOutputBuffer+1,_outBufferGlobal+2
 10097  001268  0101               	movlb	1	; () banked
 10098  00126A  6BBB               	clrf	(_outBufferGlobal+3)& (0+255),b
 10099                           
 10100                           ; BSR set to: 1
 10101                           ;button_input_isr.c: 142: outBufferGlobal[0]=IN_ChanelOutputBuffer[0];
 10102  00126C  C0B3  F1B8         	movff	_IN_ChanelOutputBuffer,_outBufferGlobal
 10103  001270  0101               	movlb	1	; () banked
 10104  001272  6BB9               	clrf	(_outBufferGlobal+1)& (0+255),b
 10105  001274  0012               	return	
 10106  001276                     __end_of_button_input_isr:
 10107                           	opt stack 0
 10108                           tosu	equ	0xFFF
 10109                           tosh	equ	0xFFE
 10110                           tosl	equ	0xFFD
 10111                           pclatu	equ	0xFFB
 10112                           pclath	equ	0xFFA
 10113                           tblptru	equ	0xFF8
 10114                           tblptrh	equ	0xFF7
 10115                           tblptrl	equ	0xFF6
 10116                           tablat	equ	0xFF5
 10117                           prodh	equ	0xFF4
 10118                           prodl	equ	0xFF3
 10119                           intcon	equ	0xFF2
 10120                           intcon2	equ	0xFF1
 10121                           postinc0	equ	0xFEE
 10122                           fsr0h	equ	0xFEA
 10123                           fsr0l	equ	0xFE9
 10124                           wreg	equ	0xFE8
 10125                           indf1	equ	0xFE7
 10126                           postdec1	equ	0xFE5
 10127                           plusw1	equ	0xFE3
 10128                           fsr1h	equ	0xFE2
 10129                           fsr1l	equ	0xFE1
 10130                           indf2	equ	0xFDF
 10131                           postinc2	equ	0xFDE
 10132                           postdec2	equ	0xFDD
 10133                           plusw2	equ	0xFDB
 10134                           fsr2h	equ	0xFDA
 10135                           fsr2l	equ	0xFD9
 10136                           status	equ	0xFD8
 10137                           
 10138 ;; *************** function _getInputPin *****************
 10139 ;; Defined at:
 10140 ;;		line 28 in file "board_interface.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;  in              1    wreg     unsigned char 
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;  in              1    4[COMRAM] unsigned char 
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  1    wreg      unsigned char 
 10147 ;; Registers used:
 10148 ;;		wreg, status,2, status,0, cstack
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 0/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10154 ;;      Params:         0       0       0       0       0       0       0
 10155 ;;      Locals:         1       0       0       0       0       0       0
 10156 ;;      Temps:          0       0       0       0       0       0       0
 10157 ;;      Totals:         1       0       0       0       0       0       0
 10158 ;;Total ram usage:        1 bytes
 10159 ;; Hardware stack levels used:    1
 10160 ;; Hardware stack levels required when called:    2
 10161 ;; This function calls:
 10162 ;;		_readPortPin
 10163 ;; This function is called by:
 10164 ;;		_button_input_isr
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           	psect	text52
 10169  001910                     __ptext52:
 10170                           	opt stack 0
 10171  001910                     _getInputPin:
 10172                           	opt stack 22
 10173                           
 10174                           ;incstack = 0
 10175                           ;getInputPin@in stored from wreg
 10176  001910  6E05               	movwf	getInputPin@in,c
 10177                           
 10178                           ;board_interface.c: 31: switch(in)
 10179  001912  D032               	goto	i2l202
 10180  001914  0E00               	movlw	0
 10181  001916  6E02               	movwf	readPortPin@Pin,c
 10182  001918  0E42               	movlw	66
 10183  00191A  ECDA  F00C         	call	_readPortPin
 10184  00191E  0012               	return	
 10185  001920  0E01               	movlw	1
 10186  001922  6E02               	movwf	readPortPin@Pin,c
 10187  001924  0E42               	movlw	66
 10188  001926  ECDA  F00C         	call	_readPortPin
 10189  00192A  0012               	return	
 10190  00192C  0E02               	movlw	2
 10191  00192E  6E02               	movwf	readPortPin@Pin,c
 10192  001930  0E42               	movlw	66
 10193  001932  ECDA  F00C         	call	_readPortPin
 10194  001936  0012               	return	
 10195  001938  0E03               	movlw	3
 10196  00193A  6E02               	movwf	readPortPin@Pin,c
 10197  00193C  0E42               	movlw	66
 10198  00193E  ECDA  F00C         	call	_readPortPin
 10199  001942  0012               	return	
 10200  001944  0E04               	movlw	4
 10201  001946  6E02               	movwf	readPortPin@Pin,c
 10202  001948  0E42               	movlw	66
 10203  00194A  ECDA  F00C         	call	_readPortPin
 10204  00194E  0012               	return	
 10205  001950  0E05               	movlw	5
 10206  001952  6E02               	movwf	readPortPin@Pin,c
 10207  001954  0E42               	movlw	66
 10208  001956  ECDA  F00C         	call	_readPortPin
 10209  00195A  0012               	return	
 10210  00195C  0E06               	movlw	6
 10211  00195E  6E02               	movwf	readPortPin@Pin,c
 10212  001960  0E42               	movlw	66
 10213  001962  ECDA  F00C         	call	_readPortPin
 10214  001966  0012               	return	
 10215  001968  0E07               	movlw	7
 10216  00196A  6E02               	movwf	readPortPin@Pin,c
 10217  00196C  0E42               	movlw	66
 10218  00196E  ECDA  F00C         	call	_readPortPin
 10219  001972  0012               	return	
 10220  001974  0E00               	movlw	0
 10221  001976  0012               	return	
 10222  001978                     i2l202:
 10223  001978  5005               	movf	getInputPin@in,w,c
 10224                           
 10225                           ; Switch size 1, requested type "space"
 10226                           ; Number of cases is 9, Range of values is 0 to 8
 10227                           ; switch strategies available:
 10228                           ; Name         Instructions Cycles
 10229                           ; simple_byte           28    15 (average)
 10230                           ;	Chosen strategy is simple_byte
 10231  00197A  0A00               	xorlw	0	; case 0
 10232  00197C  B4D8               	btfsc	status,2,c
 10233  00197E  D7CA               	goto	i2l203
 10234  001980  0A01               	xorlw	1	; case 1
 10235  001982  B4D8               	btfsc	status,2,c
 10236  001984  D7CD               	goto	i2l205
 10237  001986  0A03               	xorlw	3	; case 2
 10238  001988  B4D8               	btfsc	status,2,c
 10239  00198A  D7D0               	goto	i2l206
 10240  00198C  0A01               	xorlw	1	; case 3
 10241  00198E  B4D8               	btfsc	status,2,c
 10242  001990  D7D3               	goto	i2l207
 10243  001992  0A07               	xorlw	7	; case 4
 10244  001994  B4D8               	btfsc	status,2,c
 10245  001996  D7D6               	goto	i2l208
 10246  001998  0A01               	xorlw	1	; case 5
 10247  00199A  B4D8               	btfsc	status,2,c
 10248  00199C  D7D9               	goto	i2l209
 10249  00199E  0A03               	xorlw	3	; case 6
 10250  0019A0  B4D8               	btfsc	status,2,c
 10251  0019A2  D7DC               	goto	i2l210
 10252  0019A4  0A01               	xorlw	1	; case 7
 10253  0019A6  B4D8               	btfsc	status,2,c
 10254  0019A8  D7DF               	goto	i2l211
 10255  0019AA  0A0F               	xorlw	15	; case 8
 10256  0019AC  B4D8               	btfsc	status,2,c
 10257  0019AE  D7E2               	goto	i2l212
 10258                           
 10259                           ;board_interface.c: 45: return(0);
 10260  0019B0  0E00               	movlw	0
 10261  0019B2  0012               	return	
 10262  0019B4                     __end_of_getInputPin:
 10263                           	opt stack 0
 10264                           tosu	equ	0xFFF
 10265                           tosh	equ	0xFFE
 10266                           tosl	equ	0xFFD
 10267                           pclatu	equ	0xFFB
 10268                           pclath	equ	0xFFA
 10269                           tblptru	equ	0xFF8
 10270                           tblptrh	equ	0xFF7
 10271                           tblptrl	equ	0xFF6
 10272                           tablat	equ	0xFF5
 10273                           prodh	equ	0xFF4
 10274                           prodl	equ	0xFF3
 10275                           intcon	equ	0xFF2
 10276                           intcon2	equ	0xFF1
 10277                           postinc0	equ	0xFEE
 10278                           fsr0h	equ	0xFEA
 10279                           fsr0l	equ	0xFE9
 10280                           wreg	equ	0xFE8
 10281                           indf1	equ	0xFE7
 10282                           postdec1	equ	0xFE5
 10283                           plusw1	equ	0xFE3
 10284                           fsr1h	equ	0xFE2
 10285                           fsr1l	equ	0xFE1
 10286                           indf2	equ	0xFDF
 10287                           postinc2	equ	0xFDE
 10288                           postdec2	equ	0xFDD
 10289                           plusw2	equ	0xFDB
 10290                           fsr2h	equ	0xFDA
 10291                           fsr2l	equ	0xFD9
 10292                           status	equ	0xFD8
 10293                           
 10294 ;; *************** function _readPortPin *****************
 10295 ;; Defined at:
 10296 ;;		line 21 in file "hadware_interface.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  Port            1    wreg     unsigned char 
 10299 ;;  Pin             1    1[COMRAM] unsigned char 
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;  Port            1    2[COMRAM] unsigned char 
 10302 ;;  data            1    3[COMRAM] struct bit_byte
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  1    wreg      unsigned char 
 10305 ;; Registers used:
 10306 ;;		wreg, status,2, status,0, cstack
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10312 ;;      Params:         1       0       0       0       0       0       0
 10313 ;;      Locals:         2       0       0       0       0       0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0
 10315 ;;      Totals:         3       0       0       0       0       0       0
 10316 ;;Total ram usage:        3 bytes
 10317 ;; Hardware stack levels used:    1
 10318 ;; Hardware stack levels required when called:    1
 10319 ;; This function calls:
 10320 ;;		_readPort
 10321 ;; This function is called by:
 10322 ;;		_getInputPin
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text53
 10327  0019B4                     __ptext53:
 10328                           	opt stack 0
 10329  0019B4                     _readPortPin:
 10330                           	opt stack 22
 10331                           
 10332                           ;incstack = 0
 10333                           ;readPortPin@Port stored from wreg
 10334  0019B4  6E03               	movwf	readPortPin@Port,c
 10335                           
 10336                           ;hadware_interface.c: 23: union bit_byte data;
 10337                           ;hadware_interface.c: 24: data.byte=readPort(Port);
 10338  0019B6  5003               	movf	readPortPin@Port,w,c
 10339  0019B8  EC9E  F010         	call	_readPort
 10340  0019BC  6E04               	movwf	readPortPin@data,c
 10341                           
 10342                           ;hadware_interface.c: 26: switch(Pin)
 10343  0019BE  D030               	goto	i2l39
 10344  0019C0  A004               	btfss	readPortPin@data,0,c
 10345  0019C2  D002               	goto	i2u325_40
 10346  0019C4  0E01               	movlw	1
 10347  0019C6  0012               	return	
 10348  0019C8                     i2u325_40:
 10349  0019C8  0E00               	movlw	0
 10350  0019CA  0012               	return	
 10351  0019CC  A204               	btfss	readPortPin@data,1,c
 10352  0019CE  D002               	goto	i2u326_40
 10353  0019D0  0E01               	movlw	1
 10354  0019D2  0012               	return	
 10355  0019D4                     i2u326_40:
 10356  0019D4  0E00               	movlw	0
 10357  0019D6  0012               	return	
 10358  0019D8  A404               	btfss	readPortPin@data,2,c
 10359  0019DA  D002               	goto	i2u327_40
 10360  0019DC  0E01               	movlw	1
 10361  0019DE  0012               	return	
 10362  0019E0                     i2u327_40:
 10363  0019E0  0E00               	movlw	0
 10364  0019E2  0012               	return	
 10365  0019E4  A604               	btfss	readPortPin@data,3,c
 10366  0019E6  D002               	goto	i2u328_40
 10367  0019E8  0E01               	movlw	1
 10368  0019EA  0012               	return	
 10369  0019EC                     i2u328_40:
 10370  0019EC  0E00               	movlw	0
 10371  0019EE  0012               	return	
 10372  0019F0  A804               	btfss	readPortPin@data,4,c
 10373  0019F2  D002               	goto	i2u329_40
 10374  0019F4  0E01               	movlw	1
 10375  0019F6  0012               	return	
 10376  0019F8                     i2u329_40:
 10377  0019F8  0E00               	movlw	0
 10378  0019FA  0012               	return	
 10379  0019FC  AA04               	btfss	readPortPin@data,5,c
 10380  0019FE  D002               	goto	i2u330_40
 10381  001A00  0E01               	movlw	1
 10382  001A02  0012               	return	
 10383  001A04                     i2u330_40:
 10384  001A04  0E00               	movlw	0
 10385  001A06  0012               	return	
 10386  001A08  AC04               	btfss	readPortPin@data,6,c
 10387  001A0A  D002               	goto	i2u331_40
 10388  001A0C  0E01               	movlw	1
 10389  001A0E  0012               	return	
 10390  001A10                     i2u331_40:
 10391  001A10  0E00               	movlw	0
 10392  001A12  0012               	return	
 10393  001A14  AE04               	btfss	readPortPin@data,7,c
 10394  001A16  D002               	goto	i2u332_40
 10395  001A18  0E01               	movlw	1
 10396  001A1A  0012               	return	
 10397  001A1C                     i2u332_40:
 10398  001A1C  0E00               	movlw	0
 10399  001A1E  0012               	return	
 10400  001A20                     i2l39:
 10401  001A20  5002               	movf	readPortPin@Pin,w,c
 10402                           
 10403                           ; Switch size 1, requested type "space"
 10404                           ; Number of cases is 8, Range of values is 0 to 7
 10405                           ; switch strategies available:
 10406                           ; Name         Instructions Cycles
 10407                           ; simple_byte           25    13 (average)
 10408                           ;	Chosen strategy is simple_byte
 10409  001A22  0A00               	xorlw	0	; case 0
 10410  001A24  B4D8               	btfsc	status,2,c
 10411  001A26  D7CC               	goto	i2l40
 10412  001A28  0A01               	xorlw	1	; case 1
 10413  001A2A  B4D8               	btfsc	status,2,c
 10414  001A2C  D7CF               	goto	i2l42
 10415  001A2E  0A03               	xorlw	3	; case 2
 10416  001A30  B4D8               	btfsc	status,2,c
 10417  001A32  D7D2               	goto	i2l43
 10418  001A34  0A01               	xorlw	1	; case 3
 10419  001A36  B4D8               	btfsc	status,2,c
 10420  001A38  D7D5               	goto	i2l44
 10421  001A3A  0A07               	xorlw	7	; case 4
 10422  001A3C  B4D8               	btfsc	status,2,c
 10423  001A3E  D7D8               	goto	i2l45
 10424  001A40  0A01               	xorlw	1	; case 5
 10425  001A42  B4D8               	btfsc	status,2,c
 10426  001A44  D7DB               	goto	i2l46
 10427  001A46  0A03               	xorlw	3	; case 6
 10428  001A48  B4D8               	btfsc	status,2,c
 10429  001A4A  D7DE               	goto	i2l47
 10430  001A4C  0A01               	xorlw	1	; case 7
 10431  001A4E  B4D8               	btfsc	status,2,c
 10432  001A50  D7E1               	goto	i2l48
 10433                           
 10434                           ;hadware_interface.c: 38: return(0);
 10435  001A52  0E00               	movlw	0
 10436  001A54  0012               	return	
 10437  001A56                     __end_of_readPortPin:
 10438                           	opt stack 0
 10439                           tosu	equ	0xFFF
 10440                           tosh	equ	0xFFE
 10441                           tosl	equ	0xFFD
 10442                           pclatu	equ	0xFFB
 10443                           pclath	equ	0xFFA
 10444                           tblptru	equ	0xFF8
 10445                           tblptrh	equ	0xFF7
 10446                           tblptrl	equ	0xFF6
 10447                           tablat	equ	0xFF5
 10448                           prodh	equ	0xFF4
 10449                           prodl	equ	0xFF3
 10450                           intcon	equ	0xFF2
 10451                           intcon2	equ	0xFF1
 10452                           postinc0	equ	0xFEE
 10453                           fsr0h	equ	0xFEA
 10454                           fsr0l	equ	0xFE9
 10455                           wreg	equ	0xFE8
 10456                           indf1	equ	0xFE7
 10457                           postdec1	equ	0xFE5
 10458                           plusw1	equ	0xFE3
 10459                           fsr1h	equ	0xFE2
 10460                           fsr1l	equ	0xFE1
 10461                           indf2	equ	0xFDF
 10462                           postinc2	equ	0xFDE
 10463                           postdec2	equ	0xFDD
 10464                           plusw2	equ	0xFDB
 10465                           fsr2h	equ	0xFDA
 10466                           fsr2l	equ	0xFD9
 10467                           status	equ	0xFD8
 10468                           
 10469 ;; *************** function _readPort *****************
 10470 ;; Defined at:
 10471 ;;		line 7 in file "hadware_interface.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  Port            1    wreg     unsigned char 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;  Port            1    0[COMRAM] unsigned char 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      unsigned char 
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10485 ;;      Params:         0       0       0       0       0       0       0
 10486 ;;      Locals:         1       0       0       0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0
 10488 ;;      Totals:         1       0       0       0       0       0       0
 10489 ;;Total ram usage:        1 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; This function calls:
 10492 ;;		Nothing
 10493 ;; This function is called by:
 10494 ;;		_readPortPin
 10495 ;;		_readPortNippel
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text54
 10500  00213C                     __ptext54:
 10501                           	opt stack 0
 10502  00213C                     _readPort:
 10503                           	opt stack 22
 10504                           
 10505                           ;incstack = 0
 10506                           ;readPort@Port stored from wreg
 10507  00213C  6E01               	movwf	readPort@Port,c
 10508                           
 10509                           ;hadware_interface.c: 9: switch(Port)
 10510  00213E  D00A               	goto	i2l29
 10511  002140                     i2l30:
 10512  002140  5080               	movf	3968,w,c	;volatile
 10513  002142  0012               	return	
 10514  002144                     i2l32:
 10515  002144  5081               	movf	3969,w,c	;volatile
 10516  002146  0012               	return	
 10517  002148                     i2l33:
 10518  002148  5082               	movf	3970,w,c	;volatile
 10519  00214A  0012               	return	
 10520  00214C                     i2l34:
 10521  00214C  5083               	movf	3971,w,c	;volatile
 10522  00214E  0012               	return	
 10523  002150                     i2l35:
 10524  002150  5084               	movf	3972,w,c	;volatile
 10525  002152  0012               	return	
 10526  002154                     i2l29:
 10527  002154  5001               	movf	readPort@Port,w,c
 10528                           
 10529                           ; Switch size 1, requested type "space"
 10530                           ; Number of cases is 5, Range of values is 65 to 69
 10531                           ; switch strategies available:
 10532                           ; Name         Instructions Cycles
 10533                           ; simple_byte           16     9 (average)
 10534                           ;	Chosen strategy is simple_byte
 10535  002156  0A41               	xorlw	65	; case 65
 10536  002158  B4D8               	btfsc	status,2,c
 10537  00215A  D7F2               	goto	i2l30
 10538  00215C  0A03               	xorlw	3	; case 66
 10539  00215E  B4D8               	btfsc	status,2,c
 10540  002160  D7F1               	goto	i2l32
 10541  002162  0A01               	xorlw	1	; case 67
 10542  002164  B4D8               	btfsc	status,2,c
 10543  002166  D7F0               	goto	i2l33
 10544  002168  0A07               	xorlw	7	; case 68
 10545  00216A  B4D8               	btfsc	status,2,c
 10546  00216C  D7EF               	goto	i2l34
 10547  00216E  0A01               	xorlw	1	; case 69
 10548  002170  B4D8               	btfsc	status,2,c
 10549  002172  D7EE               	goto	i2l35
 10550                           
 10551                           ;hadware_interface.c: 18: return 0;
 10552  002174  0E00               	movlw	0
 10553  002176  0012               	return	
 10554  002178                     __end_of_readPort:
 10555                           	opt stack 0
 10556                           tosu	equ	0xFFF
 10557                           tosh	equ	0xFFE
 10558                           tosl	equ	0xFFD
 10559                           pclatu	equ	0xFFB
 10560                           pclath	equ	0xFFA
 10561                           tblptru	equ	0xFF8
 10562                           tblptrh	equ	0xFF7
 10563                           tblptrl	equ	0xFF6
 10564                           tablat	equ	0xFF5
 10565                           prodh	equ	0xFF4
 10566                           prodl	equ	0xFF3
 10567                           intcon	equ	0xFF2
 10568                           intcon2	equ	0xFF1
 10569                           postinc0	equ	0xFEE
 10570                           fsr0h	equ	0xFEA
 10571                           fsr0l	equ	0xFE9
 10572                           wreg	equ	0xFE8
 10573                           indf1	equ	0xFE7
 10574                           postdec1	equ	0xFE5
 10575                           plusw1	equ	0xFE3
 10576                           fsr1h	equ	0xFE2
 10577                           fsr1l	equ	0xFE1
 10578                           indf2	equ	0xFDF
 10579                           postinc2	equ	0xFDE
 10580                           postdec2	equ	0xFDD
 10581                           plusw2	equ	0xFDB
 10582                           fsr2h	equ	0xFDA
 10583                           fsr2l	equ	0xFD9
 10584                           status	equ	0xFD8
 10585                           
 10586 ;; *************** function _TMR0_ISR *****************
 10587 ;; Defined at:
 10588 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;		None
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10602 ;;      Params:         0       0       0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0
 10605 ;;      Totals:         0       0       0       0       0       0       0
 10606 ;;Total ram usage:        0 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    3
 10609 ;; This function calls:
 10610 ;;		_TMR0_CallBack
 10611 ;; This function is called by:
 10612 ;;		_INTERRUPT_InterruptManager
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           	psect	text55
 10617  002410                     __ptext55:
 10618                           	opt stack 0
 10619  002410                     _TMR0_ISR:
 10620                           	opt stack 23
 10621                           
 10622                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
 10623                           
 10624                           ;incstack = 0
 10625  002410  94F2               	bcf	intcon,2,c	;volatile
 10626                           
 10627                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
 10628  002412  0101               	movlb	1	; () banked
 10629  002414  516F               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
 10630  002416  6ED7               	movwf	4055,c	;volatile
 10631                           
 10632                           ; BSR set to: 1
 10633                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
 10634  002418  C16E  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10635                           
 10636                           ; BSR set to: 1
 10637                           ;tmr0.c: 147: TMR0_CallBack();
 10638  00241C  EC8A  F011         	call	_TMR0_CallBack	;wreg free
 10639  002420  0012               	return		;funcret
 10640  002422                     __end_of_TMR0_ISR:
 10641                           	opt stack 0
 10642                           tosu	equ	0xFFF
 10643                           tosh	equ	0xFFE
 10644                           tosl	equ	0xFFD
 10645                           pclatu	equ	0xFFB
 10646                           pclath	equ	0xFFA
 10647                           tblptru	equ	0xFF8
 10648                           tblptrh	equ	0xFF7
 10649                           tblptrl	equ	0xFF6
 10650                           tablat	equ	0xFF5
 10651                           prodh	equ	0xFF4
 10652                           prodl	equ	0xFF3
 10653                           intcon	equ	0xFF2
 10654                           intcon2	equ	0xFF1
 10655                           postinc0	equ	0xFEE
 10656                           fsr0h	equ	0xFEA
 10657                           fsr0l	equ	0xFE9
 10658                           wreg	equ	0xFE8
 10659                           indf1	equ	0xFE7
 10660                           postdec1	equ	0xFE5
 10661                           plusw1	equ	0xFE3
 10662                           fsr1h	equ	0xFE2
 10663                           fsr1l	equ	0xFE1
 10664                           indf2	equ	0xFDF
 10665                           postinc2	equ	0xFDE
 10666                           postdec2	equ	0xFDD
 10667                           plusw2	equ	0xFDB
 10668                           fsr2h	equ	0xFDA
 10669                           fsr2l	equ	0xFD9
 10670                           status	equ	0xFD8
 10671                           
 10672 ;; *************** function _TMR0_CallBack *****************
 10673 ;; Defined at:
 10674 ;;		line 152 in file "mcc_generated_files/tmr0.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;		None
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;                  1    wreg      void 
 10681 ;; Registers used:
 10682 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10688 ;;      Params:         0       0       0       0       0       0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0
 10691 ;;      Totals:         0       0       0       0       0       0       0
 10692 ;;Total ram usage:        0 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:    2
 10695 ;; This function calls:
 10696 ;;		Absolute function
 10697 ;;		_TMR0_DefaultInterruptHandler
 10698 ;;		_combineIO_KG_Timer
 10699 ;;		_timer_mult_isr
 10700 ;; This function is called by:
 10701 ;;		_TMR0_ISR
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           	psect	text56
 10706  002314                     __ptext56:
 10707                           	opt stack 0
 10708  002314                     _TMR0_CallBack:
 10709                           	opt stack 23
 10710                           
 10711                           ;tmr0.c: 156: if(TMR0_InterruptHandler)
 10712                           
 10713                           ;incstack = 0
 10714  002314  0101               	movlb	1	; () banked
 10715  002316  5170               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10716  002318  0101               	movlb	1	; () banked
 10717  00231A  1171               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10718  00231C  B4D8               	btfsc	status,2,c
 10719  00231E  0012               	return	
 10720                           
 10721                           ; BSR set to: 1
 10722                           ;tmr0.c: 157: {
 10723                           ;tmr0.c: 158: TMR0_InterruptHandler();
 10724  002320  D801               	call	i2u431_48
 10725  002322  0012               	return	
 10726  002324                     i2u431_48:
 10727  002324  0005               	push	
 10728  002326  0101               	movlb	1	; () banked
 10729  002328  6EFA               	movwf	pclath,c
 10730  00232A  5170               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10731  00232C  6EFD               	movwf	tosl,c
 10732  00232E  5171               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10733  002330  6EFE               	movwf	tosh,c
 10734  002332  50F8               	movf	tblptru,w,c
 10735  002334  6EFF               	movwf	tosu,c
 10736  002336  50FA               	movf	pclath,w,c
 10737  002338  0012               	return		;indir
 10738  00233A                     __end_of_TMR0_CallBack:
 10739                           	opt stack 0
 10740                           tosu	equ	0xFFF
 10741                           tosh	equ	0xFFE
 10742                           tosl	equ	0xFFD
 10743                           pclatu	equ	0xFFB
 10744                           pclath	equ	0xFFA
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           intcon	equ	0xFF2
 10752                           intcon2	equ	0xFF1
 10753                           postinc0	equ	0xFEE
 10754                           fsr0h	equ	0xFEA
 10755                           fsr0l	equ	0xFE9
 10756                           wreg	equ	0xFE8
 10757                           indf1	equ	0xFE7
 10758                           postdec1	equ	0xFE5
 10759                           plusw1	equ	0xFE3
 10760                           fsr1h	equ	0xFE2
 10761                           fsr1l	equ	0xFE1
 10762                           indf2	equ	0xFDF
 10763                           postinc2	equ	0xFDE
 10764                           postdec2	equ	0xFDD
 10765                           plusw2	equ	0xFDB
 10766                           fsr2h	equ	0xFDA
 10767                           fsr2l	equ	0xFD9
 10768                           status	equ	0xFD8
 10769                           
 10770 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10771 ;; Defined at:
 10772 ;;		line 166 in file "mcc_generated_files/tmr0.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;		None
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		None
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10786 ;;      Params:         0       0       0       0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0
 10789 ;;      Totals:         0       0       0       0       0       0       0
 10790 ;;Total ram usage:        0 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; This function calls:
 10793 ;;		Nothing
 10794 ;; This function is called by:
 10795 ;;		_TMR0_Initialize
 10796 ;;		_TMR0_CallBack
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text57
 10801  00246E                     __ptext57:
 10802                           	opt stack 0
 10803  00246E                     _TMR0_DefaultInterruptHandler:
 10804                           	opt stack 24
 10805                           
 10806                           ;incstack = 0
 10807  00246E  0012               	return		;funcret
 10808  002470                     __end_of_TMR0_DefaultInterruptHandler:
 10809                           	opt stack 0
 10810                           tosu	equ	0xFFF
 10811                           tosh	equ	0xFFE
 10812                           tosl	equ	0xFFD
 10813                           pclatu	equ	0xFFB
 10814                           pclath	equ	0xFFA
 10815                           tblptru	equ	0xFF8
 10816                           tblptrh	equ	0xFF7
 10817                           tblptrl	equ	0xFF6
 10818                           tablat	equ	0xFF5
 10819                           prodh	equ	0xFF4
 10820                           prodl	equ	0xFF3
 10821                           intcon	equ	0xFF2
 10822                           intcon2	equ	0xFF1
 10823                           postinc0	equ	0xFEE
 10824                           fsr0h	equ	0xFEA
 10825                           fsr0l	equ	0xFE9
 10826                           wreg	equ	0xFE8
 10827                           indf1	equ	0xFE7
 10828                           postdec1	equ	0xFE5
 10829                           plusw1	equ	0xFE3
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           postdec2	equ	0xFDD
 10835                           plusw2	equ	0xFDB
 10836                           fsr2h	equ	0xFDA
 10837                           fsr2l	equ	0xFD9
 10838                           status	equ	0xFD8
 10839                           
 10840 ;; *************** function _combineIO_KG_Timer *****************
 10841 ;; Defined at:
 10842 ;;		line 73 in file "app_h8_kg_mapIO.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;		None
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;		None
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      void 
 10849 ;; Registers used:
 10850 ;;		wreg, status,2, status,0
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10856 ;;      Params:         0       0       0       0       0       0       0
 10857 ;;      Locals:         0       0       0       0       0       0       0
 10858 ;;      Temps:          0       0       0       0       0       0       0
 10859 ;;      Totals:         0       0       0       0       0       0       0
 10860 ;;Total ram usage:        0 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; This function calls:
 10863 ;;		Nothing
 10864 ;; This function is called by:
 10865 ;;		_timer_mult_isr
 10866 ;;		_old_main
 10867 ;;		_TMR0_CallBack
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           	psect	text58
 10872  001C70                     __ptext58:
 10873                           	opt stack 0
 10874  001C70                     _combineIO_KG_Timer:
 10875                           	opt stack 23
 10876                           
 10877                           ;app_h8_kg_mapIO.c: 79: (timerInputBufferGlobal[4]>0)?timerInputBufferGlobal[4]--:timerI
      +                          nputBufferGlobal[4]=0;
 10878                           
 10879                           ;incstack = 0
 10880  001C70  0101               	movlb	1	; () banked
 10881  001C72  BF1D               	btfsc	(_timerInputBufferGlobal+9)& (0+255),7,b
 10882  001C74  D00C               	goto	i2l272
 10883  001C76  0101               	movlb	1	; () banked
 10884  001C78  511D               	movf	(_timerInputBufferGlobal+9)& (0+255),w,b
 10885  001C7A  E104               	bnz	i2u333_40
 10886  001C7C  0101               	movlb	1	; () banked
 10887  001C7E  051C               	decf	(_timerInputBufferGlobal+8)& (0+255),w,b
 10888  001C80  A0D8               	btfss	status,0,c
 10889  001C82  D005               	goto	i2l272
 10890  001C84                     i2u333_40:
 10891                           
 10892                           ; BSR set to: 1
 10893  001C84  0101               	movlb	1	; () banked
 10894  001C86  071C               	decf	(_timerInputBufferGlobal+8)& (0+255),f,b
 10895  001C88  A0D8               	btfss	status,0,c
 10896  001C8A  071D               	decf	(_timerInputBufferGlobal+9)& (0+255),f,b
 10897  001C8C  D005               	goto	i2l274
 10898  001C8E                     i2l272:
 10899                           
 10900                           ; BSR set to: 1
 10901                           
 10902                           ; BSR set to: 1
 10903  001C8E  0E00               	movlw	0
 10904  001C90  0101               	movlb	1	; () banked
 10905  001C92  6F1D               	movwf	(_timerInputBufferGlobal+9)& (0+255),b
 10906  001C94  0E00               	movlw	0
 10907  001C96  6F1C               	movwf	(_timerInputBufferGlobal+8)& (0+255),b
 10908  001C98                     i2l274:
 10909                           
 10910                           ; BSR set to: 1
 10911                           ;app_h8_kg_mapIO.c: 80: (timerInputBufferGlobal[5]>0)?timerInputBufferGlobal[5]--:timerI
      +                          nputBufferGlobal[5]=0;
 10912                           
 10913                           ; BSR set to: 1
 10914  001C98  0101               	movlb	1	; () banked
 10915  001C9A  BF1F               	btfsc	(_timerInputBufferGlobal+11)& (0+255),7,b
 10916  001C9C  D00C               	goto	i2l276
 10917  001C9E  0101               	movlb	1	; () banked
 10918  001CA0  511F               	movf	(_timerInputBufferGlobal+11)& (0+255),w,b
 10919  001CA2  E104               	bnz	i2u334_40
 10920  001CA4  0101               	movlb	1	; () banked
 10921  001CA6  051E               	decf	(_timerInputBufferGlobal+10)& (0+255),w,b
 10922  001CA8  A0D8               	btfss	status,0,c
 10923  001CAA  D005               	goto	i2l276
 10924  001CAC                     i2u334_40:
 10925                           
 10926                           ; BSR set to: 1
 10927  001CAC  0101               	movlb	1	; () banked
 10928  001CAE  071E               	decf	(_timerInputBufferGlobal+10)& (0+255),f,b
 10929  001CB0  A0D8               	btfss	status,0,c
 10930  001CB2  071F               	decf	(_timerInputBufferGlobal+11)& (0+255),f,b
 10931  001CB4  D005               	goto	i2l278
 10932  001CB6                     i2l276:
 10933                           
 10934                           ; BSR set to: 1
 10935                           
 10936                           ; BSR set to: 1
 10937  001CB6  0E00               	movlw	0
 10938  001CB8  0101               	movlb	1	; () banked
 10939  001CBA  6F1F               	movwf	(_timerInputBufferGlobal+11)& (0+255),b
 10940  001CBC  0E00               	movlw	0
 10941  001CBE  6F1E               	movwf	(_timerInputBufferGlobal+10)& (0+255),b
 10942  001CC0                     i2l278:
 10943                           
 10944                           ; BSR set to: 1
 10945                           ;app_h8_kg_mapIO.c: 84: (timerUartBufferGlobal[4]>0)?timerUartBufferGlobal[4]--:timerUar
      +                          tBufferGlobal[4]=0;
 10946                           
 10947                           ; BSR set to: 1
 10948  001CC0  0101               	movlb	1	; () banked
 10949  001CC2  BF09               	btfsc	(_timerUartBufferGlobal+9)& (0+255),7,b
 10950  001CC4  D00C               	goto	i2l280
 10951  001CC6  0101               	movlb	1	; () banked
 10952  001CC8  5109               	movf	(_timerUartBufferGlobal+9)& (0+255),w,b
 10953  001CCA  E104               	bnz	i2u335_40
 10954  001CCC  0101               	movlb	1	; () banked
 10955  001CCE  0508               	decf	(_timerUartBufferGlobal+8)& (0+255),w,b
 10956  001CD0  A0D8               	btfss	status,0,c
 10957  001CD2  D005               	goto	i2l280
 10958  001CD4                     i2u335_40:
 10959                           
 10960                           ; BSR set to: 1
 10961  001CD4  0101               	movlb	1	; () banked
 10962  001CD6  0708               	decf	(_timerUartBufferGlobal+8)& (0+255),f,b
 10963  001CD8  A0D8               	btfss	status,0,c
 10964  001CDA  0709               	decf	(_timerUartBufferGlobal+9)& (0+255),f,b
 10965  001CDC  0012               	return	
 10966  001CDE                     i2l280:
 10967                           
 10968                           ; BSR set to: 1
 10969                           
 10970                           ; BSR set to: 1
 10971  001CDE  0E00               	movlw	0
 10972  001CE0  0101               	movlb	1	; () banked
 10973  001CE2  6F09               	movwf	(_timerUartBufferGlobal+9)& (0+255),b
 10974  001CE4  0E00               	movlw	0
 10975  001CE6  6F08               	movwf	(_timerUartBufferGlobal+8)& (0+255),b
 10976  001CE8  0012               	return	
 10977  001CEA                     __end_of_combineIO_KG_Timer:
 10978                           	opt stack 0
 10979                           tosu	equ	0xFFF
 10980                           tosh	equ	0xFFE
 10981                           tosl	equ	0xFFD
 10982                           pclatu	equ	0xFFB
 10983                           pclath	equ	0xFFA
 10984                           tblptru	equ	0xFF8
 10985                           tblptrh	equ	0xFF7
 10986                           tblptrl	equ	0xFF6
 10987                           tablat	equ	0xFF5
 10988                           prodh	equ	0xFF4
 10989                           prodl	equ	0xFF3
 10990                           intcon	equ	0xFF2
 10991                           intcon2	equ	0xFF1
 10992                           postinc0	equ	0xFEE
 10993                           fsr0h	equ	0xFEA
 10994                           fsr0l	equ	0xFE9
 10995                           wreg	equ	0xFE8
 10996                           indf1	equ	0xFE7
 10997                           postdec1	equ	0xFE5
 10998                           plusw1	equ	0xFE3
 10999                           fsr1h	equ	0xFE2
 11000                           fsr1l	equ	0xFE1
 11001                           indf2	equ	0xFDF
 11002                           postinc2	equ	0xFDE
 11003                           postdec2	equ	0xFDD
 11004                           plusw2	equ	0xFDB
 11005                           fsr2h	equ	0xFDA
 11006                           fsr2l	equ	0xFD9
 11007                           status	equ	0xFD8
 11008                           
 11009 ;; *************** function _timer_mult_isr *****************
 11010 ;; Defined at:
 11011 ;;		line 138 in file "app_h8_kg_main.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;		None
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;		None
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  1    wreg      void 
 11018 ;; Registers used:
 11019 ;;		wreg, status,2, status,0, cstack
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11025 ;;      Params:         0       0       0       0       0       0       0
 11026 ;;      Locals:         0       0       0       0       0       0       0
 11027 ;;      Temps:          0       0       0       0       0       0       0
 11028 ;;      Totals:         0       0       0       0       0       0       0
 11029 ;;Total ram usage:        0 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:    1
 11032 ;; This function calls:
 11033 ;;		_combineIO_KG_Timer
 11034 ;;		_time_isr
 11035 ;; This function is called by:
 11036 ;;		_main
 11037 ;;		_TMR0_CallBack
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text59
 11042  002446                     __ptext59:
 11043                           	opt stack 0
 11044  002446                     _timer_mult_isr:
 11045                           	opt stack 23
 11046                           
 11047                           ;app_h8_kg_main.c: 140: combineIO_KG_Timer();
 11048                           
 11049                           ; BSR set to: 1
 11050                           ;incstack = 0
 11051  002446  EC38  F00E         	call	_combineIO_KG_Timer	;wreg free
 11052                           
 11053                           ;app_h8_kg_main.c: 141: time_isr();
 11054  00244A  EC11  F012         	call	_time_isr	;wreg free
 11055  00244E  0012               	return		;funcret
 11056  002450                     __end_of_timer_mult_isr:
 11057                           	opt stack 0
 11058                           tosu	equ	0xFFF
 11059                           tosh	equ	0xFFE
 11060                           tosl	equ	0xFFD
 11061                           pclatu	equ	0xFFB
 11062                           pclath	equ	0xFFA
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           postinc0	equ	0xFEE
 11072                           fsr0h	equ	0xFEA
 11073                           fsr0l	equ	0xFE9
 11074                           wreg	equ	0xFE8
 11075                           indf1	equ	0xFE7
 11076                           postdec1	equ	0xFE5
 11077                           plusw1	equ	0xFE3
 11078                           fsr1h	equ	0xFE2
 11079                           fsr1l	equ	0xFE1
 11080                           indf2	equ	0xFDF
 11081                           postinc2	equ	0xFDE
 11082                           postdec2	equ	0xFDD
 11083                           plusw2	equ	0xFDB
 11084                           fsr2h	equ	0xFDA
 11085                           fsr2l	equ	0xFD9
 11086                           status	equ	0xFD8
 11087                           
 11088 ;; *************** function _time_isr *****************
 11089 ;; Defined at:
 11090 ;;		line 6 in file "timeStemp.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;		None
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;		None
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		wreg, status,2, status,0
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11104 ;;      Params:         0       0       0       0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0       0       0
 11107 ;;      Totals:         0       0       0       0       0       0       0
 11108 ;;Total ram usage:        0 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; This function calls:
 11111 ;;		Nothing
 11112 ;; This function is called by:
 11113 ;;		_timer_mult_isr
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           	psect	text60
 11118  002422                     __ptext60:
 11119                           	opt stack 0
 11120  002422                     _time_isr:
 11121                           	opt stack 23
 11122                           
 11123                           ;timeStemp.c: 8: timestamp++;
 11124                           
 11125                           ;incstack = 0
 11126  002422  0E01               	movlw	1
 11127  002424  0100               	movlb	0	; () banked
 11128  002426  27C7               	addwf	_timestamp& (0+255),f,b
 11129  002428  0E00               	movlw	0
 11130  00242A  23C8               	addwfc	(_timestamp+1)& (0+255),f,b
 11131  00242C  23C9               	addwfc	(_timestamp+2)& (0+255),f,b
 11132  00242E  23CA               	addwfc	(_timestamp+3)& (0+255),f,b
 11133                           
 11134                           ; BSR set to: 0
 11135  002430  0012               	return		;funcret
 11136  002432                     __end_of_time_isr:
 11137                           	opt stack 0
 11138                           tosu	equ	0xFFF
 11139                           tosh	equ	0xFFE
 11140                           tosl	equ	0xFFD
 11141                           pclatu	equ	0xFFB
 11142                           pclath	equ	0xFFA
 11143                           tblptru	equ	0xFF8
 11144                           tblptrh	equ	0xFF7
 11145                           tblptrl	equ	0xFF6
 11146                           tablat	equ	0xFF5
 11147                           prodh	equ	0xFF4
 11148                           prodl	equ	0xFF3
 11149                           intcon	equ	0xFF2
 11150                           intcon2	equ	0xFF1
 11151                           postinc0	equ	0xFEE
 11152                           fsr0h	equ	0xFEA
 11153                           fsr0l	equ	0xFE9
 11154                           wreg	equ	0xFE8
 11155                           indf1	equ	0xFE7
 11156                           postdec1	equ	0xFE5
 11157                           plusw1	equ	0xFE3
 11158                           fsr1h	equ	0xFE2
 11159                           fsr1l	equ	0xFE1
 11160                           indf2	equ	0xFDF
 11161                           postinc2	equ	0xFDE
 11162                           postdec2	equ	0xFDD
 11163                           plusw2	equ	0xFDB
 11164                           fsr2h	equ	0xFDA
 11165                           fsr2l	equ	0xFD9
 11166                           status	equ	0xFD8
 11167                           
 11168 ;; *************** function _EUSART2_Transmit_ISR *****************
 11169 ;; Defined at:
 11170 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;		None
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;		None
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  1    wreg      void 
 11177 ;; Registers used:
 11178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11179 ;; Tracked objects:
 11180 ;;		On entry : 0/0
 11181 ;;		On exit  : 0/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11184 ;;      Params:         0       0       0       0       0       0       0
 11185 ;;      Locals:         0       0       0       0       0       0       0
 11186 ;;      Temps:          0       0       0       0       0       0       0
 11187 ;;      Totals:         0       0       0       0       0       0       0
 11188 ;;Total ram usage:        0 bytes
 11189 ;; Hardware stack levels used:    1
 11190 ;; This function calls:
 11191 ;;		Nothing
 11192 ;; This function is called by:
 11193 ;;		_INTERRUPT_InterruptManager
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text61
 11198  002220                     __ptext61:
 11199                           	opt stack 0
 11200  002220                     _EUSART2_Transmit_ISR:
 11201                           	opt stack 26
 11202                           
 11203                           ;eusart2.c: 159: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;incstack = 0
 11207  002220  0E40               	movlw	64
 11208  002222  6056               	cpfslt	_eusart2TxBufferRemaining,c	;volatile
 11209  002224  D012               	goto	i2l907
 11210                           
 11211                           ;eusart2.c: 160: {
 11212                           ;eusart2.c: 161: TXREG2 = eusart2TxBuffer[eusart2TxTail++];
 11213  002226  5057               	movf	_eusart2TxTail,w,c	;volatile
 11214  002228  0D01               	mullw	1
 11215  00222A  0E00               	movlw	low _eusart2TxBuffer
 11216  00222C  24F3               	addwf	prodl,w,c
 11217  00222E  6ED9               	movwf	fsr2l,c
 11218  002230  0E02               	movlw	high _eusart2TxBuffer
 11219  002232  20F4               	addwfc	prodh,w,c
 11220  002234  6EDA               	movwf	fsr2h,c
 11221  002236  50DF               	movf	indf2,w,c
 11222  002238  6E73               	movwf	3955,c	;volatile
 11223  00223A  2A57               	incf	_eusart2TxTail,f,c	;volatile
 11224                           
 11225                           ;eusart2.c: 162: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 11226  00223C  0E3F               	movlw	63
 11227  00223E  6457               	cpfsgt	_eusart2TxTail,c	;volatile
 11228  002240  D002               	goto	i2l908
 11229                           
 11230                           ;eusart2.c: 163: {
 11231                           ;eusart2.c: 164: eusart2TxTail = 0;
 11232  002242  0E00               	movlw	0
 11233  002244  6E57               	movwf	_eusart2TxTail,c	;volatile
 11234  002246                     i2l908:
 11235                           
 11236                           ;eusart2.c: 165: }
 11237                           ;eusart2.c: 166: eusart2TxBufferRemaining++;
 11238  002246  2A56               	incf	_eusart2TxBufferRemaining,f,c	;volatile
 11239                           
 11240                           ;eusart2.c: 167: }
 11241  002248  0012               	return	
 11242  00224A                     i2l907:
 11243                           
 11244                           ;eusart2.c: 168: else
 11245                           ;eusart2.c: 169: {
 11246                           ;eusart2.c: 170: PIE3bits.TX2IE = 0;
 11247  00224A  98A3               	bcf	4003,4,c	;volatile
 11248  00224C  0012               	return	
 11249  00224E                     __end_of_EUSART2_Transmit_ISR:
 11250                           	opt stack 0
 11251                           tosu	equ	0xFFF
 11252                           tosh	equ	0xFFE
 11253                           tosl	equ	0xFFD
 11254                           pclatu	equ	0xFFB
 11255                           pclath	equ	0xFFA
 11256                           tblptru	equ	0xFF8
 11257                           tblptrh	equ	0xFF7
 11258                           tblptrl	equ	0xFF6
 11259                           tablat	equ	0xFF5
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           intcon	equ	0xFF2
 11263                           intcon2	equ	0xFF1
 11264                           postinc0	equ	0xFEE
 11265                           fsr0h	equ	0xFEA
 11266                           fsr0l	equ	0xFE9
 11267                           wreg	equ	0xFE8
 11268                           indf1	equ	0xFE7
 11269                           postdec1	equ	0xFE5
 11270                           plusw1	equ	0xFE3
 11271                           fsr1h	equ	0xFE2
 11272                           fsr1l	equ	0xFE1
 11273                           indf2	equ	0xFDF
 11274                           postinc2	equ	0xFDE
 11275                           postdec2	equ	0xFDD
 11276                           plusw2	equ	0xFDB
 11277                           fsr2h	equ	0xFDA
 11278                           fsr2l	equ	0xFD9
 11279                           status	equ	0xFD8
 11280                           tosu	equ	0xFFF
 11281                           tosh	equ	0xFFE
 11282                           tosl	equ	0xFFD
 11283                           pclatu	equ	0xFFB
 11284                           pclath	equ	0xFFA
 11285                           tblptru	equ	0xFF8
 11286                           tblptrh	equ	0xFF7
 11287                           tblptrl	equ	0xFF6
 11288                           tablat	equ	0xFF5
 11289                           prodh	equ	0xFF4
 11290                           prodl	equ	0xFF3
 11291                           intcon	equ	0xFF2
 11292                           intcon2	equ	0xFF1
 11293                           postinc0	equ	0xFEE
 11294                           fsr0h	equ	0xFEA
 11295                           fsr0l	equ	0xFE9
 11296                           wreg	equ	0xFE8
 11297                           indf1	equ	0xFE7
 11298                           postdec1	equ	0xFE5
 11299                           plusw1	equ	0xFE3
 11300                           fsr1h	equ	0xFE2
 11301                           fsr1l	equ	0xFE1
 11302                           indf2	equ	0xFDF
 11303                           postinc2	equ	0xFDE
 11304                           postdec2	equ	0xFDD
 11305                           plusw2	equ	0xFDB
 11306                           fsr2h	equ	0xFDA
 11307                           fsr2l	equ	0xFD9
 11308                           status	equ	0xFD8
 11309                           
 11310                           	psect	text62
 11311  000000                     __ptext62:
 11312                           	opt stack 0
 11313                           tosu	equ	0xFFF
 11314                           tosh	equ	0xFFE
 11315                           tosl	equ	0xFFD
 11316                           pclatu	equ	0xFFB
 11317                           pclath	equ	0xFFA
 11318                           tblptru	equ	0xFF8
 11319                           tblptrh	equ	0xFF7
 11320                           tblptrl	equ	0xFF6
 11321                           tablat	equ	0xFF5
 11322                           prodh	equ	0xFF4
 11323                           prodl	equ	0xFF3
 11324                           intcon	equ	0xFF2
 11325                           intcon2	equ	0xFF1
 11326                           postinc0	equ	0xFEE
 11327                           fsr0h	equ	0xFEA
 11328                           fsr0l	equ	0xFE9
 11329                           wreg	equ	0xFE8
 11330                           indf1	equ	0xFE7
 11331                           postdec1	equ	0xFE5
 11332                           plusw1	equ	0xFE3
 11333                           fsr1h	equ	0xFE2
 11334                           fsr1l	equ	0xFE1
 11335                           indf2	equ	0xFDF
 11336                           postinc2	equ	0xFDE
 11337                           postdec2	equ	0xFDD
 11338                           plusw2	equ	0xFDB
 11339                           fsr2h	equ	0xFDA
 11340                           fsr2l	equ	0xFD9
 11341                           status	equ	0xFD8
 11342                           
 11343                           	psect	rparam
 11344  0000                     tosu	equ	0xFFF
 11345                           tosh	equ	0xFFE
 11346                           tosl	equ	0xFFD
 11347                           pclatu	equ	0xFFB
 11348                           pclath	equ	0xFFA
 11349                           tblptru	equ	0xFF8
 11350                           tblptrh	equ	0xFF7
 11351                           tblptrl	equ	0xFF6
 11352                           tablat	equ	0xFF5
 11353                           prodh	equ	0xFF4
 11354                           prodl	equ	0xFF3
 11355                           intcon	equ	0xFF2
 11356                           intcon2	equ	0xFF1
 11357                           postinc0	equ	0xFEE
 11358                           fsr0h	equ	0xFEA
 11359                           fsr0l	equ	0xFE9
 11360                           wreg	equ	0xFE8
 11361                           indf1	equ	0xFE7
 11362                           postdec1	equ	0xFE5
 11363                           plusw1	equ	0xFE3
 11364                           fsr1h	equ	0xFE2
 11365                           fsr1l	equ	0xFE1
 11366                           indf2	equ	0xFDF
 11367                           postinc2	equ	0xFDE
 11368                           postdec2	equ	0xFDD
 11369                           plusw2	equ	0xFDB
 11370                           fsr2h	equ	0xFDA
 11371                           fsr2l	equ	0xFD9
 11372                           status	equ	0xFD8
 11373                           
 11374                           	psect	temp
 11375  00005F                     btemp:
 11376                           	opt stack 0
 11377  00005F                     	ds	1
 11378  0000                     int$flags	set	btemp
 11379  0000                     wtemp6	set	btemp+1
 11380                           tosu	equ	0xFFF
 11381                           tosh	equ	0xFFE
 11382                           tosl	equ	0xFFD
 11383                           pclatu	equ	0xFFB
 11384                           pclath	equ	0xFFA
 11385                           tblptru	equ	0xFF8
 11386                           tblptrh	equ	0xFF7
 11387                           tblptrl	equ	0xFF6
 11388                           tablat	equ	0xFF5
 11389                           prodh	equ	0xFF4
 11390                           prodl	equ	0xFF3
 11391                           intcon	equ	0xFF2
 11392                           intcon2	equ	0xFF1
 11393                           postinc0	equ	0xFEE
 11394                           fsr0h	equ	0xFEA
 11395                           fsr0l	equ	0xFE9
 11396                           wreg	equ	0xFE8
 11397                           indf1	equ	0xFE7
 11398                           postdec1	equ	0xFE5
 11399                           plusw1	equ	0xFE3
 11400                           fsr1h	equ	0xFE2
 11401                           fsr1l	equ	0xFE1
 11402                           indf2	equ	0xFDF
 11403                           postinc2	equ	0xFDE
 11404                           postdec2	equ	0xFDD
 11405                           plusw2	equ	0xFDB
 11406                           fsr2h	equ	0xFDA
 11407                           fsr2l	equ	0xFD9
 11408                           status	equ	0xFD8


Data Sizes:
    Strings     239
    Constant    32
    Data        6
    BSS         390
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      94
    BANK0           160     83     155
    BANK1           256     40     244
    BANK2           256      0     104
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0

    strtol@s	PTR const unsigned char  size(2) Largest target is 20
		 -> uart_receiv_isr@in_buff(BANK0[20]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> uart_receiv_isr@in_buff(BANK0[20]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_35(CODE[6]), STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), 
		 -> STR_30(CODE[6]), STR_29(CODE[5]), STR_28(CODE[6]), STR_27(CODE[5]), 
		 -> STR_26(CODE[6]), 

    memset@p1	PTR void  size(2) Largest target is 20
		 -> uart_receiv_isr@in_buff(BANK0[20]), 

    memset@p	PTR unsigned char  size(2) Largest target is 20
		 -> uart_receiv_isr@in_buff(BANK0[20]), 

    sp__ctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK1[27]), 

    gmtime@tp	PTR const long  size(2) Largest target is 4
		 -> localtime@t(COMRAM[4]), 

    sp__gmtime	PTR struct tm size(2) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    localtime@tp	PTR const long  size(2) Largest target is 4
		 -> uart_receiv_isr@aa(BANK0[4]), 

    asctime@cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK1[27]), 

    asctime@tim	PTR const struct tm size(2) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    asctime@s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_38(CODE[37]), STR_37(CODE[22]), 

    put2d@cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK1[27]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_34(CODE[13]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK1[27]), STR_36(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> uart_receiv_isr@text(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    putUartStrings@text	PTR unsigned char  size(2) Largest target is 40
		 -> uart_receiv_isr@text(BANK0[40]), STR_25(CODE[9]), STR_23(CODE[9]), STR_21(CODE[9]), 
		 -> STR_19(CODE[9]), STR_17(CODE[9]), STR_15(CODE[9]), STR_13(CODE[9]), 
		 -> STR_11(CODE[9]), STR_9(CODE[9]), STR_7(CODE[9]), STR_5(CODE[9]), 
		 -> STR_3(CODE[9]), STR_1(CODE[9]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), button_input_isr(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), button_input_isr(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), timer_mult_isr(), combineIO_KG_Timer(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), timer_mult_isr(), combineIO_KG_Timer(), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK1[27]), 

    sp__localtime	PTR struct tm size(2) Largest target is 18
		 -> gmtime@tim(BANK0[18]), 

    sp__memset	PTR void  size(2) Largest target is 20
		 -> uart_receiv_isr@in_buff(BANK0[20]), 

    array2char@array	PTR int  size(2) Largest target is 20
		 -> netBufferGlobal(BANK1[20]), outBufferGlobal(BANK1[20]), netBufferGlobal_new(BANK1[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_uart_receiv_isr
    _uart_receiv_isr->_sprintf
    i2_putUartStrings->i2_EUSART2_Write
    _strtol->___lmul
    _isalpha->_isupper
    _sprintf->_asctime
    _localtime->_gmtime
    _gmtime->___aldiv
    _dylen->___lwmod
    _asctime->_localtime
    _put2d->___awdiv
    _TMR2_ISR->_button_input_isr
    _button_input_isr->_getInputPin
    _getInputPin->_readPortPin
    _readPortPin->_readPort

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_uart_receiv_isr

Critical Paths under _main in BANK1

    _main->_combineIO_KG_TEST
    _combineIO_KG_TEST->_putUartStrings
    _putUartStrings->_EUSART2_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    7212
                                             28 BANK1     12    12      0
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
                            _InitApp
              _OSCILLATOR_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                               _WNOP
                         _array2char
                  _combineIO_KG_TEST
                         _pushOutput
                           _timeInit
 ---------------------------------------------------------------------------------
 (1) _timeInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pushOutput                                           3     2      1     351
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _combineIO_KG_TEST                                   16    11      5    4303
                                             12 BANK1     16    11      5
                     _putUartStrings
 ---------------------------------------------------------------------------------
 (2) _putUartStrings                                      11     7      4    2210
                                              1 BANK1     11     7      4
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART2_Write                                        1     1      0      44
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _array2char                                           4     2      2     662
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _WNOP                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     500
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     250
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     250
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      2     2      0     250
                                              2 BANK1      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     250
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _InitPort
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0   15775
                                             60 COMRAM    18    18      0
               _EUSART2_Transmit_ISR
                           _TMR0_ISR
                           _TMR2_ISR
                    _uart_receiv_isr
 ---------------------------------------------------------------------------------
 (5) _uart_receiv_isr                                     91    91      0   14526
                                             52 COMRAM     8     8      0
                                              0 BANK0     83    83      0
                            _asctime
                       _getTimeStemp
                          _localtime
                             _memset
                       _setTimeStemp
                            _sprintf
                            _strncmp
                             _strtol
                   i2_putUartStrings
 ---------------------------------------------------------------------------------
 (6) i2_putUartStrings                                    11     7      4     186
                                              1 COMRAM    11     7      4
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (7) i2_EUSART2_Write                                      1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    1770
                                             12 COMRAM    16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     158
                                              3 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              8     2      6    2186
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             21    15      6     404
                                             40 COMRAM    12     6      6
                            _asctime (ARG)
                          _localtime (ARG)
 ---------------------------------------------------------------------------------
 (6) _setTimeStemp                                         4     0      4      98
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     552
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _localtime                                           10     8      2    3974
                                             23 COMRAM    10     8      2
                             ___lmul
                             _gmtime
 ---------------------------------------------------------------------------------
 (7) _gmtime                                               9     7      2    3267
                                             14 COMRAM     9     7      2
                            ___aldiv
                            ___almod
                            ___awmod
                              _dylen
 ---------------------------------------------------------------------------------
 (8) _dylen                                                4     2      2     757
                                              5 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) ___almod                                             10     2      8     752
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     756
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _getTimeStemp                                         4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _asctime                                              7     5      2    5047
                                             33 COMRAM     7     5      2
                            ___awdiv
                            ___awmod
                             ___wmul
                          _localtime (ARG)
                              _put2d
 ---------------------------------------------------------------------------------
 (7) _put2d                                                5     0      5    2959
                                              8 COMRAM     5     0      5
                            ___awdiv (ARG)
                            ___awmod
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (8) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     698
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     398
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0    1249
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _button_input_isr *
 ---------------------------------------------------------------------------------
 (6) _button_input_isr                                     3     3      0    1249
                                              5 COMRAM     3     3      0
                        _getInputPin
 ---------------------------------------------------------------------------------
 (7) _getInputPin                                          1     1      0     873
                                              4 COMRAM     1     1      0
                        _readPortPin
 ---------------------------------------------------------------------------------
 (8) _readPortPin                                          3     2      1     851
                                              1 COMRAM     3     2      1
                           _readPort
 ---------------------------------------------------------------------------------
 (9) _readPort                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                 _combineIO_KG_Timer *
                     _timer_mult_isr *
 ---------------------------------------------------------------------------------
 (7) _timer_mult_isr                                       0     0      0       0
                 _combineIO_KG_Timer
                           _time_isr
 ---------------------------------------------------------------------------------
 (8) _time_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _combineIO_KG_Timer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART2_Initialize
   _INTERRUPT_Initialize
   _InitApp
     _InitPort
   _OSCILLATOR_Initialize
   _SYSTEM_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
   _TMR0_Initialize
     _TMR0_SetInterruptHandler
     _TMR0_StartTimer
   _TMR0_SetInterruptHandler
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
   _TMR2_SetInterruptHandler
   _WNOP
   _array2char
   _combineIO_KG_TEST
     _putUartStrings
       _EUSART2_Write
   _pushOutput
   _timeInit

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART2_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _combineIO_KG_Timer *
       _timer_mult_isr *
         _combineIO_KG_Timer
         _time_isr
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _button_input_isr *
       _getInputPin
         _readPortPin
           _readPort
   _uart_receiv_isr
     _asctime
       ___awdiv
       ___awmod
       ___wmul
       _localtime (ARG)
         ___lmul
         _gmtime
           ___aldiv
           ___almod
           ___awmod
           _dylen
             ___lwmod
       _put2d (ARG)
         ___awdiv (ARG)
         ___awmod (ARG)
         ___lbdiv (ARG)
     _getTimeStemp
     _localtime
       ___lmul
       _gmtime
         ___aldiv
         ___almod
         ___awmod
         _dylen
           ___lwmod
     _memset
     _setTimeStemp
     _sprintf
       _asctime (ARG)
         ___awdiv
         ___awmod
         ___wmul
         _localtime (ARG)
           ___lmul
           _gmtime
             ___aldiv
             ___almod
             ___awmod
             _dylen
               ___lwmod
         _put2d (ARG)
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lbdiv (ARG)
       _localtime (ARG)
         ___lmul
         _gmtime
           ___aldiv
           ___almod
           ___awmod
           _dylen
             ___lwmod
     _strncmp
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
     i2_putUartStrings
       i2_EUSART2_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      68       8       40.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     28      F4       6       95.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     53      9B       4       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     255       9        0.0%
DATA                 0      0     255      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Aug 10 23:51:31 2017

                            main@Data_Out 01F3                            ??_getTimeStemp 0005  
        __end_of_TMR2_SetInterruptHandler 243C                                         _t 013C  
                          main@Data_Input 01F2                           main@Data_Forced 01EB  
                            ___awdiv@sign 0006                             array2char@b2b 01CF  
                __end_ofi2_putUartStrings 1DD0                       ___wmul@multiplicand 0003  
                         _timer0ReloadVal 016E                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                        main@Data_Blocked 01EA                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l400 0760  
                                     l401 0770                                       l402 0780  
                                     l403 0790                                       l331 011E  
                                     l404 07A0                                       l351 0194  
                                     l343 0158                                       l335 012E  
                                     l361 02DE                                       l353 0198  
                                     l345 015C                                       l362 034C  
                                     l354 0224                                       l347 0176  
                                     l339 013E                                       l380 056C  
                                     l373 0492                                       l349 017A  
                                     l390 06B4                                       l366 03B8  
                                     l358 02A8                                       l462 15FE  
                                     l383 05DA                                       l376 0500  
                                     l369 0426                                       l394 0720  
                                     l387 0646                                       l901 2114  
                                     l397 0730                                       l902 2138  
                                     l398 0740                                       l903 2136  
                                     l399 0750                                       l672 23E6  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                              ___awmod@sign 0006  
                         _TMR2_Initialize 22A2                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                              _TXSTA2bits 000F72                     combineIO_KG_TEST@UART 01E3  
                        main@Data_Out_old 01F0                              main@Uart_New 01EC  
                                    l1040 1AA4                                      l1041 1A62  
                                    l3946 2104                                      STR_1 7FB1  
                                    STR_3 7F7B                                      STR_5 7F7B  
                                    STR_7 7FBA                                      STR_9 7F84  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u5000 0542  
                                    u5010 0544                                      u5020 054E  
                                    u5110 060E                                      u5030 057A  
                                    u5200 0694                                      u5120 061C  
                                    u5040 0588                                      u5210 06CE  
                                    u5130 061E                                      u5050 058A  
                                    u5140 0628                                      u4500 01C0  
                                    u4405 1F08                                      u5230 06E8  
                                    u5150 0654                                      u5118 0612  
                                    u5070 05AE                                      u5038 057E  
                                    u4510 01CE                                      u4415 1F14  
                                    u4407 1F0A                                      u5240 06F6  
                                    u5160 0662                                      u5080 05BA  
                                    u4600 027E                                      u4417 1F16  
                                    u4345 1EC0                                      u5250 06F8  
                                    u5218 06D2                                      u5170 0664  
                                    u5090 05F4                                      u4610 0280  
                                    u4530 01F8                                      u4450 0152  
                                    u4355 1ECC                                      u4347 1EC2  
                                    u5260 0702                                      u4620 028A  
                                    u4540 0204                                      u4516 01D0  
                                    u4508 01C4                                      u4460 0170  
                                    u4365 1ED8                                      u4357 1ECE  
                                    u5238 06EC                                      u5190 0688  
                                    u5158 0658                                      u5078 05B2  
                                    u4710 0320                                      u4550 0232  
                                    u4470 018E                                      u4375 1EE4  
                                    u4367 1EDA                                      u4800 03D4  
                                    u4720 032C                                      u4560 0244  
                                    u4480 01AE                                      u4385 1EF0  
                                    u4377 1EE6                                      u5098 05F8  
                                    u4810 03D6                                      u4730 0366  
                                    u4570 0252                                      u4538 01FC  
                                    u4395 1EFC                                      u4387 1EF2  
                                    u4900 0474                                      u4397 1EFE  
                                    i2l30 2140                                      u5198 068C  
                                    u4910 04A0                                      u4830 03FA  
                                    u4750 0380                                      u4718 0324  
                                    u4670 02EC                                      u4590 0270  
                                    u4558 0236                                      i2l32 2144  
                                    i2l40 19C0                                      u4920 04AE  
                                    u4840 0406                                      u4760 038E  
                                    u4680 02FA                                      u4576 0254  
                                    u4568 0248                                      i2l33 2148  
                                    _PIR1 000F9E                                      i2l34 214C  
                                    i2l42 19CC                                      u3890 1A9A  
                                    u4930 04B0                                      u4850 0440  
                                    u4770 0390                                      u4738 036A  
                                    u4690 02FC                                      u4498 01B2  
                                    _PIR2 000FA1                                      i2l35 2150  
                                    i2l43 19D8                                      _PIR3 000FA4  
                                    i2l44 19E4                                      u4780 039A  
                                    i2l29 2154                                      i2l45 19F0  
                                    i2l46 19FC                                      u4950 04D4  
                                    u4918 04A4                                      u4870 045A  
                                    u4838 03FE                                      u4790 03C6  
                                    u4758 0384                                      u4678 02F0  
                                    u4598 0274                                      i2l39 1A20  
                                    i2l47 1A08                                      i2l48 1A14  
                                    u4960 04E0                                      u4880 0468  
                                    u3897 1A90                                      u4970 051A  
                                    u4890 046A                                      u4858 0444  
                                    u4990 0534                                      u4958 04D8  
                                    u4878 045E                                      u4798 03CA  
                                    u4978 051E                                      u4998 0538  
                 uart_receiv_isr@buff_len 00CB                                      _TMR2 000FBC  
                                    _WNOP 245C                                      _WPUB 000F61  
       combineIO_KG_TEST@Input_Old_Stored 0173                             _EUSART2_Write 2100  
                                    _main 1562                           _TMR0_StartTimer 2464  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005F                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00D8                           array2char@array 01CC  
                           __CFG_IESO$OFF 000000              __end_of_EUSART2_Transmit_ISR 224E  
              __size_of_combineIO_KG_TEST 06D2                           ?_putUartStrings 01CD  
                            ___param_bank 000000                    combineIO_KG_TEST@INPUT 01D9  
                         __end_of_InitApp 245C                  __size_ofi2_EUSART2_Write 003A  
                 __end_of_TMR0_Initialize 2078                         combineIO_TEST@out 005B  
          ??_TMR0_DefaultInterruptHandler 0001                                     ?_WNOP 0001  
                     i2putUartStrings@len 0004                          pushOutput@change 01CC  
                            _BAUDCON2bits 000F70            __size_of_OSCILLATOR_Initialize 0012  
           __end_of_OSCILLATOR_Initialize 23EC                    combineIO_KG_TEST@tUart 01E5  
                         __end_of___aldiv 1864                           __end_of___almod 1910  
                                   ?_main 0001                           __end_of___awdiv 1B74  
                         __end_of___lbdiv 21EC                                     STR_11 7FA8  
                                   STR_13 7F72                                     STR_21 7F57  
                                   STR_30 7FD0                                     STR_31 7FCA  
                                   STR_15 7F9F                                     STR_23 7F96  
                                   STR_32 7FEE                                     STR_33 7FD6  
                                   STR_17 7F69                                     STR_25 7F60  
                                   STR_26 7FE2                                     STR_34 7F4A  
                                   STR_27 7FF9                                     STR_35 7FE8  
                                   STR_19 7F8D                                     STR_28 7FDC  
                                   STR_36 7FC3                           __end_of___awmod 1E40  
                                   STR_29 7FF4                                     STR_37 7F34  
                                   STR_38 7F0F                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                                     _T2CON 000FBA  
                          __CFG_DEBUG$OFF 000000                              ?_readPortPin 0002  
                         __end_of___lwmod 2100                                     i2l202 1978  
                                   i2l210 195C                                     i2l211 1968  
                                   i2l203 1914                                     i2l212 1974  
                                   i2l205 1920                                     i2l206 192C  
                                   i2l207 1938                                     i2l208 1944  
                                   i2l209 1950                                     i2l280 1CDE  
                                   i2l272 1C8E                                     i2l601 08B2  
                                   i2l274 1C98                                     i2l603 08E4  
                                   i2l276 1CB6                                     i2l604 090A  
                                   i2l541 119E                                     i2l278 1CC0  
                                   i2l542 1148                                     i2l606 0A14  
                                   i2l702 005E                                     i2l552 11F2  
                                   i2l704 006E                                     i2l537 1102  
                                   i2l625 0BC6                                     i2l706 0080  
                                   i2l548 11BE                                     i2l708 008C  
                                   i2l901 218A                                     i2l629 0C3C  
                                   i2l902 21AE                                     i2l903 21AC  
                                   i2l907 224A                                     i2l908 2246  
                                   i2l599 0846                           ___awdiv@counter 0005  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                     ___lmul@multiplicand 0005                 ?_TMR0_SetInterruptHandler 01CC  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                         ?_button_input_isr 0001  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                           __end_of_asctime 0E6A  
                        __end_of_TMR0_ISR 2422                          __end_of_TMR2_ISR 235C  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                                   _dylen 1F18                           __end_of_isalpha 22A2  
                      ??_button_input_isr 0006                           __end_of_isdigit 237A  
                                   _put2d 1E40                        __CFG_MCLRE$EXTMCLR 000000  
                         __end_of_isspace 22EE                           __end_of_moninit 7F0F  
                          ?_EUSART2_Write 0001                  uart_receiv_isr@emty_buff 0060  
                         __end_of_isupper 2398                                     pclath 000FFA  
                                   tablat 000FF5                         ??_uart_receiv_isr 0035  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   status 000FD8                                     wtemp6 0060  
                         __end_of_sprintf 1798                        main@Data_Input_old 01EE  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 2460  
                         __end_of_strncmp 1BF2                           __end_of_toupper 23DA  
                         ___lbdiv@divisor 0001                            __CFG_FOSC$HSHP 000000  
                         ___lbdiv@counter 0003                            __CFG_PBADEN$ON 000000  
              combineIO_KG_TEST@tUart_New 01E7                              __end_of_WNOP 2460  
                         __initialization 1F7C               __size_of_combineIO_KG_Timer 007A  
                 combineIO_KG_TEST@FORCED 01DC                              __end_of_main 16A4  
                        __end_of_InitPort 1D5E                   __end_of_TMR2_Initialize 22C8  
             ?_INTERRUPT_InterruptManager 0001                                    ??_WNOP 01CC  
                _TMR2_SetInterruptHandler 2432                                    ??_main 01E8  
                           __activetblptr 000002                           _outBufferGlobal 01B8  
               combineIO_KG_TEST@UART_NEW 01D8                          ??_timer_mult_isr 0001  
                    i2putUartStrings@text 0002                    main@UART_Input_compare 01E9  
                          main@Uart_Input 01F1                   combineIO_KG_TEST@tInput 01DF  
                    __size_of_getInputPin 00A4                   __end_of_TMR0_StartTimer 2468  
              __end_of_EUSART2_Initialize 2220                  _eusart2TxBufferRemaining 0056  
                    __end_of_getTimeStemp 2410                                    ?_dylen 0006  
                                  ?_put2d 0009                          ___awdiv@dividend 0001  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                                    i2l1120 17B4  
                                  i2l1040 1D9C                                    i2l1121 17CC  
                                  i2l1041 1D68                                    i2l1123 17FA  
                                  i2l1051 16AE                                    i2l1124 17EE  
                                  i2l1140 18DA                                    i2l1052 16C8  
                                  i2l1141 18E8                                    i2l1133 1880  
                                  i2l1053 1752                                    i2l1142 18FE  
                                  i2l1134 1894                                    i2l1062 1772  
                                  i2l1127 182E                                    i2l1128 183C  
                                  i2l1136 18B2                                    i2l1056 16CE  
                                  i2l1129 1852                                    i2l1137 18A6  
                                  i2l1250 1B5C                                    i2l1242 1B04  
                                  i2l1058 172A                                    i2l1251 1B6A  
                                  i2l1243 1B14                                    i2l1155 1E9A  
                                  i2l1059 16F8                                    i2l1076 1FEA  
                                  i2l1245 1B32                                    i2l1077 1FFE  
                                  i2l1246 1B2A                                    i2l1262 1E1E  
                                  i2l1263 1E28                                    i2l1255 1DE4  
                                  i2l1264 1E36                                    i2l1256 1DF0  
                                  i2l1440 21E8                                    i2l1520 20CC  
                                  i2l1249 1B52                                    i2l1258 1E06  
                                  i2l1282 1F72                                    i2l1259 1DFE  
                                  i2l1435 21CA                                    i2l1523 20EC  
                                  i2l1436 21C4                                    i2l1524 20F6  
                                  i2l1293 0FE8                                    i2l1533 2268  
                                  i2l1294 0FCA                                    i2l1534 2258  
                                  i2l1439 21E0                                    i2l1519 20D4  
                                  i2l1296 1046                                    i2l1297 1032  
                                  i2l1706 23D6                                    i2l1660 1B76  
                                  i2l1732 229A                                    i2l1661 1BD0  
                                  i2l1742 22E6                                    i2l4126 217A  
                          __CFG_WDTEN$OFF 000000                                    i2l1680 12CA  
                                  i2l1737 2372                                    i2l4250 2258  
                                  i2l1682 131E                                    i2l1659 1BD8  
                                  i2l1747 2390                                    i2l1691 1354  
                                  i2l1694 1362                                    i2l1678 12B2  
                                  i2l1695 13CC                                    i2l1688 132E  
                                  i2l1689 133E                                    i2l4258 1B76  
                                  i2l1698 1406                                    i2l4196 1112  
                                  i2l4782 08E4                                    i2l4766 0846  
                                  i2l4776 08B2                                    _RCREG1 000FAE  
                                  _RCREG2 000F74                                    _RCSTA2 000F71  
                                  _OSCCON 000FD3                                    _PLLRDY 007E97  
                                  _SPBRG2 000F75                                    _TXREG2 000F73  
                                  _TXSTA2 000F72                                 ??_InitApp 01CC  
                          __CFG_XINST$OFF 000000                         uart_receiv_isr@aa 00A5  
                                  ___lmul 1FDA                                 ??___aldiv 0009  
                               ??___almod 0009                                    ___wmul 22EE  
                               ??___awdiv 0005                                 ??___lbdiv 0002  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0005  
                               ??___lwmod 0005                                    _gmtime 0E6A  
                        ?_TMR0_Initialize 0001                          __end_of_readPort 2178  
                                  _memset 224E                                    clear_0 1FA2  
                                  clear_1 1FAE                                    clear_2 1FBA  
                                  clear_3 1FC6                          ___awdiv@quotient 0007  
                         ___awmod@divisor 0003                           ___awmod@counter 0005  
                               ??_asctime 0024                                    _strtol 1276  
                       ??i2_EUSART2_Write 0001                                 ??_isalpha 0004  
                               ??_isdigit 0001                          setTimeStemp@time 0001  
                        __end_of_timeInit 23C6                                    put2d@i 000B  
                        __end_of_time_isr 2432                              __mediumconst 7EEE  
                               ??_isspace 0001                                    tblptrh 000FF7  
                               ??_isupper 0001                                    tblptrl 000FF6  
                                  tblptru 000FF8                      _EUSART2_Transmit_ISR 2220  
                   __end_of_TMR0_CallBack 233A                   __end_of_TMR2_StartTimer 2464  
                         ??_EUSART2_Write 01CC  TMR2_SetInterruptHandler@InterruptHandler 01CC  
TMR0_SetInterruptHandler@InterruptHandler 01CC                     _IN_ChanelOutputBuffer 00B3  
                               ??_sprintf 002F                                 ??_strncmp 0007  
                               ??_toupper 0001                          ___lbdiv@dividend 0002  
                             localtime@tp 0018             __size_of_INTERRUPT_Initialize 0004  
                         _eusart2RxBuffer 014E                         _SYSTEM_Initialize 2398  
               combineIO_KG_TEST@tChanged 01E6                           _eusart2TxBuffer 0200  
                              __accesstop 0060                   __end_of__initialization 1FCC  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
             combineIO_KG_TEST@tTimerUart 01E2                  combineIO_KG_TEST@BLOCKED 01DB  
                          __pcstackCOMRAM 0001                     uart_receiv_isr@number 00A9  
                            __pidataBANK0 2450                       ??_SYSTEM_Initialize 01D0  
                               ?_TMR0_ISR 0001                                 ?_TMR2_ISR 0001  
                           __end_of_dylen 1F7C                             __end_of_put2d 1EAE  
                        ?_TMR2_Initialize 0001                         ?i2_putUartStrings 0002  
                        ___lbdiv@quotient 0004                        ??i2_putUartStrings 0006  
                   ?_EUSART2_Transmit_ISR 0001                      __size_of_readPortPin 00A2  
                        ?_TMR0_StartTimer 0001                                   ??_dylen 0008  
               __end_of_SYSTEM_Initialize 23B2                                   ??_put2d 000E  
                           _eusart2RxHead 0055                       combineIO_TEST@count 005A  
                           _eusart2TxHead 0058                                __pbssBANK0 00B3  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                           _eusart2RxTail 0054                             _eusart2TxTail 0057  
                         __CFG_PLLCFG$OFF 000000                                 ?_InitPort 0001  
                        ??_putUartStrings 01D1                        __size_of_localtime 007E  
                      __CFG_CCP2MX$PORTC1 000000           uart_receiv_isr@BEFEHL_SET_GREEN 009F  
         uart_receiv_isr@BEFEHL_SET_WHITE 009C          __end_of_TMR0_SetInterruptHandler 2446  
                                 ?___lmul 0001                                   ?___wmul 0001  
                              ??_TMR0_ISR 0001                                ??_TMR2_ISR 0009  
                      __CFG_CCP3MX$PORTB5 000000                  combineIO_KG_TEST@tOutput 0172  
                           ?_setTimeStemp 0001                                   ?_gmtime 000F  
                                 ?_memset 0001                            ___lmul@product 0009  
                          _IN_PulsCounter 0059                                   ?_strtol 000D  
                   __size_of_getTimeStemp 0012                                _array2char 1418  
                         _uart_receiv_isr 07AE                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                                   _SPBRGH2 000F76  
                        ?_TMR2_StartTimer 0001                         putUartStrings@len 01CF  
                           pushOutput@OUT 01CD                                ??_InitPort 01CC  
                  _timerInputBufferGlobal 0114                                 ?_readPort 0001  
                                 _InitApp 2456                           __CFG_PWRTEN$OFF 000000  
               __size_of_button_input_isr 01EC                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 01CE  
                               ?_timeInit 0001                                 ?_time_isr 0001  
                      uart_receiv_isr@ETX 00AE                        uart_receiv_isr@STX 00AD  
                                 ___aldiv 1798                                   ___almod 1864  
                                 ___awdiv 1AF0                                   ___lbdiv 21B2  
                         __size_of___lmul 0056                              _asctime$3948 0024  
                                 ___awmod 1DD0                        uart_receiv_isr@len 00CD  
                         __size_of___wmul 0026                              _getTimeStemp 23FE  
                          ??_setTimeStemp 0005                                   ___lwmod 20BE  
                                 __pcinit 1F7C                           __size_of_gmtime 0220  
                         __size_of_memset 002C                                   __ramtop 0600  
                   _timerUartBufferGlobal 0100                                   __ptext0 1562  
                                 __ptext1 23B2                                   __ptext2 1EAE  
                                 __ptext3 00DC                                   __ptext4 1A56  
                                 __ptext5 2100                                   __ptext6 1418  
                                 __ptext7 245C                                   __ptext8 2398  
                                 __ptext9 22A2                                   _asctime 0C40  
                               _T0CONbits 000FD5                           __size_of_strtol 01A2  
                            readPort@Port 0001                     _OSCILLATOR_Initialize 23DA  
                  ??_EUSART2_Transmit_ISR 0001                                 _T2CONbits 000FBA  
                                 _isalpha 227A                                   _isdigit 235C  
                        ___awmod@dividend 0001                          ___aldiv@dividend 0001  
                       __end_of_localtime 1C70                  ??_PIN_MANAGER_Initialize 01CC  
                                 _isspace 22C8          combineIO_KG_TEST@Uart_Old_Stored 0174  
                                 _moninit 7F03                                   _isupper 237A  
                         readPortPin@Port 0003              __end_ofuart_receiv_isr@F7286 7F03  
                         readPortPin@data 0004                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 16A4                     i2EUSART2_Write@txData 0001  
                                 _strncmp 1B74                                   _toupper 23C6  
                    end_of_initialization 1FCC                                   dylen@yr 0006  
                                 memset@c 0003                                   memset@n 0005  
                                 memset@p 0007                             __Lmediumconst 7EEE  
                              ??_readPort 0001                __end_of_combineIO_KG_Timer 1CEA  
                                 put2d@cl 000C                                   put2d@cp 0009  
                                 put2d@ct 000D                        _EUSART2_Initialize 21EC  
                              ??_timeInit 01CC                           i2_EUSART2_Write 2178  
                              ??_time_isr 0001                          ___aldiv@quotient 000B  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                 __end_of_uart_receiv_isr 0C40                       ?_EUSART2_Initialize 0001  
                                 strtol@a 0018                                   strtol@c 001C  
                                 strtol@s 000D                  _TMR0_SetInterruptHandler 243C  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                               _PORTCbits 000F82                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                             ??_getInputPin 0005  
                             ?_array2char 01CC                                asctime@buf 0175  
                  uart_receiv_isr@aa_1749 00A3                                asctime@tim 0022  
                               _TRISAbits 000F92                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                            strtol@endptr 000F                                _pushOutput 1EAE  
                    ??_EUSART2_Initialize 01CC              combineIO_KG_TEST@tTimerInput 01E4  
                       i2putUartStrings@i 000B                    uart_receiv_isr@in_buff 00CF  
            __end_of_INTERRUPT_Initialize 246C      __end_of_TMR2_DefaultInterruptHandler 246E  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 246C  
                          __end_of___lmul 2030                            __end_of___wmul 2314  
                       __size_of_TMR0_ISR 0012                         __size_of_TMR2_ISR 0022  
                          __end_of_gmtime 108A                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset 227A                       _netBufferGlobal_new 0190  
                     _outBufferGlobal_new 0128                            __end_of_strtol 1418  
                     start_initialization 1F7C                  __size_of_TMR0_Initialize 0048  
         __size_of_PIN_MANAGER_Initialize 0046                       __end_of_getInputPin 19B4  
                   __end_of_EUSART2_Write 213C                      __end_of_setTimeStemp 23FE  
               __size_ofi2_putUartStrings 0072              combineIO_KG@Input_Old_Stored 005D  
                 __end_ofi2_EUSART2_Write 21B2                   __size_of_timer_mult_isr 000A  
                         __channel_pulses 00BB                         __size_of_InitPort 0074  
                        _button_input_isr 108A                       __size_of_array2char 014A  
                                ??___lmul 0009                                  ??___wmul 0005  
                    main@Data_Out_compare 01E8                    __size_of_TMR0_CallBack 0026  
                    uart_receiv_isr@F7300 0240                      uart_receiv_isr@F7286 7EEF  
                    uart_receiv_isr@F7296 00F8                      uart_receiv_isr@F7298 00F5  
                             __pdataBANK0 00F5                          ?_uart_receiv_isr 0001  
                                ??_gmtime 0011                                  ??_memset 0007  
           ?_TMR2_DefaultInterruptHandler 0001                             ??_readPortPin 0003  
                                ??_strtol 0013                                localtime@t 001E  
                          _eusart2RxCount 0053                               __pbssCOMRAM 004F  
                           __pcstackBANK0 0060                             __pcstackBANK1 01CC  
                __size_of_TMR2_Initialize 0026                              _isalpha$3650 0005  
                            _isdigit$3653 0002                               ?_pushOutput 01CC  
                     EUSART2_Write@txData 01CC                               sprintf@flag 002F  
                _IN_ChanelCyclesCounterUp 0166                     _TMR0_InterruptHandler 0170  
                                ?_InitApp 0001                  __size_of_TMR0_StartTimer 0004  
                       __size_of_readPort 003C                    _PIN_MANAGER_Initialize 2078  
                               __pintcode 0008                             __pmediumconst 7EEE  
                                ?___aldiv 0001                                  ?___almod 0001  
                                ?___awdiv 0001                                  ?___lbdiv 0001  
                                ?___awmod 0001                         __size_of_timeInit 0014  
                                ?___lwmod 0001                         __size_of_time_isr 0010  
            ??_INTERRUPT_InterruptManager 003D                          ___almod@dividend 0001  
                        __CFG_PRICLKEN$ON 000000                                  ?_asctime 0022  
                                _BAUDCON2 000F70                                  ?_isalpha 0001  
                                ?_isdigit 0001                               _getInputPin 1910  
                      _IN_ChanelAktivated 0156                                  ?_isspace 0001  
                                ?_isupper 0001                         button_input_isr@x 0007  
                     __end_of_readPortPin 1A56                                  ?_sprintf 0029  
                           _TMR0_CallBack 2314                            __size_of_dylen 0064  
                                ?_strncmp 0001                                  ?_toupper 0001  
                          __size_of_put2d 006E                                 _localtime 1BF2  
                    _INTERRUPT_Initialize 2468                           ___aldiv@divisor 0005  
                       ??_TMR0_Initialize 01CE                            readPortPin@Pin 0002  
                         ___aldiv@counter 0009                            ___wmul@product 0005  
                        ?i2_EUSART2_Write 0001                                  _LATEbits 000F8D  
                         _netBufferGlobal 01A4                                  _IPR1bits 000F9F  
                                _PIE1bits 000F9D                                  _IPR3bits 000FA5  
                                _PIE3bits 000FA3                  __size_of_TMR2_StartTimer 0004  
     __size_of_INTERRUPT_InterruptManager 00D0                                  i2u330_40 1A04  
                                i2u331_40 1A10                                  i2u323_40 20D8  
                                i2u332_40 1A1C                                  i2u404_40 11FA  
                                i2u412_40 1720                                  i2u412_47 1716  
                                i2u333_40 1C84                                  i2u325_40 19C8  
                                i2u413_40 174A                                  i2u421_40 12F4  
              ??_TMR0_SetInterruptHandler 01CE                                  i2u413_47 1740  
                                i2u334_40 1CAC                                  i2u326_40 19D4  
                                i2u335_40 1CD4                                  i2u327_40 19E0  
                                i2u351_40 1E0A                                  i2u415_40 178A  
                                i2u423_40 1304                                  i2u431_48 2324  
                                i2u328_40 19EC                                  i2u408_40 1BA2  
                                i2u432_40 1D94                                  i2u432_47 1D8A  
                                i2u329_40 19F8                                  i2u345_40 18B6  
                                _PIR1bits 000F9E                                  i2u418_40 12BA  
                                i2u371_40 1B36                                  i2u339_40 17FE  
                                i2u356_40 1F68                                  i2u380_40 228C  
                                i2u541_40 095A                                  _PIR3bits 000FA4  
                                i2u358_40 21CE                                  i2u535_40 07BC  
                                i2u560_48 2348                                  i2u545_40 097E  
                                i2u378_40 22E2                                  i2u546_40 0988  
                                i2u538_40 08C8                                  i2u555_41 0B1A  
                                i2u547_48 098A                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR0_ISR 2410  
                                _TMR2_ISR 233A                                 _time_zone 0051  
                 __size_of_putUartStrings 009A                       __size_of_pushOutput 006A  
                               _timestamp 00C7                   combineIO_TEST@INPUT_OLD 005C  
                               asctime@cp 0027                        _combineIO_KG_Timer 1C70  
                       ___wmul@multiplier 0001                              ??_array2char 01CE  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
                      putUartStrings@text 01CD                 ?_TMR2_SetInterruptHandler 01CC  
                   __size_of_setTimeStemp 0012             __size_of_EUSART2_Transmit_ISR 002E  
                     ?_combineIO_KG_Timer 0001                              _isspace$3656 0002  
                          ?_TMR0_CallBack 0001                            pushOutput@tOut 01CE  
                       ___lmul@multiplier 0001                               _INTCON2bits 000FF1  
               uart_receiv_isr@buff_ended 00AF                                 copy_data0 1F90  
                   ?_INTERRUPT_Initialize 0001                                ?_localtime 0018  
                        i2_putUartStrings 1D5E                            _timer_mult_isr 2446  
                                _InitPort 1CEA            combineIO_KG_TEST@tUart_Changed 01E0  
                       ??_TMR2_Initialize 01CE                          __size_of_InitApp 0006  
                                __Hrparam 0000                                 gmtime@tim 00E3  
                    ??_combineIO_KG_Timer 0001                                  __Lrparam 0000  
                      __end_of_array2char 1562                _IN_ChanelCyclesCounterDown 015E  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 01CC                         ??_TMR0_StartTimer 01CC  
                        __size_of___aldiv 00CC                          __size_of___almod 00AC  
                        __size_of___awdiv 0084                          __size_of___lbdiv 003A  
                        __size_of___awmod 0070                              _setTimeStemp 23EC  
                        __size_of___lwmod 0042                       uart_receiv_isr@buff 00B1  
                     uart_receiv_isr@text 0074                             getInputPin@in 0005  
                             _readPortPin 19B4                          __size_of_asctime 022A  
                            _isupper$3659 0002                  __end_of_button_input_isr 1276  
                        __size_of_isalpha 0028                          __size_of_isdigit 001E  
                        __size_of_isspace 0026                                  __ptext10 2460  
                                __ptext11 2432                                  __ptext20 1CEA  
                                __ptext12 2030                                  __ptext13 2464  
                                __ptext30 237A                                  __ptext22 07AE  
                                __ptext14 243C                                  __ptext31 1B74  
                                __ptext23 1D5E                                  __ptext15 2078  
                                __ptext40 1798                                  __ptext32 16A4  
                                __ptext24 2178                                  __ptext16 23DA  
                                __ptext41 1FDA                                  __ptext33 23EC  
                                __ptext25 1276                                  __ptext17 2468  
                                __ptext50 246C                                  __ptext42 23FE  
                                __ptext34 224E                                  __ptext26 23C6  
                                __ptext18 21EC                                  __ptext51 108A  
                                __ptext43 0C40                                  __ptext35 1BF2  
                                __ptext27 22C8                                  __ptext19 2456  
                                __ptext60 2422                                  __ptext52 1910  
                                __ptext44 1E40                                  __ptext36 0E6A  
                                __ptext28 235C                                  __ptext61 2220  
                                __ptext53 19B4                                  __ptext45 21B2  
                                __ptext37 1F18                                  __ptext29 227A  
                                __ptext62 0000                                  __ptext54 213C  
                                __ptext46 1DD0                                  __ptext38 20BE  
                                __ptext55 2410                                  __ptext47 22EE  
                                __ptext39 1864                                  __ptext56 2314  
                                __ptext48 1AF0                                  __ptext57 246E  
                                __ptext49 233A                                  __ptext58 1C70  
                                __ptext59 2446                          __size_of_isupper 001E  
                  __end_of_timer_mult_isr 2450                           ___almod@divisor 0005  
                        __size_of_sprintf 00F4                           putUartStrings@i 01D6  
                         ___almod@counter 0009                          __size_of_strncmp 007E  
                        __size_of_toupper 0014               __size_of_EUSART2_Initialize 0034  
                           __size_of_WNOP 0004                                  _readPort 213C  
                           __size_of_main 0142                                strncmp@len 0005  
    __end_of_TMR0_DefaultInterruptHandler 2470     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 246E                                  _timeInit 23B2  
                                _time_isr 2422                         _combineIO_KG_TEST 00DC  
         combineIO_KG_TEST@tInput_Changed 01E1                                  _timezone 00C3  
                                int$flags 005F                                strtol@base 0011  
                                asctime@s 0025                  uart_receiv_isr@SEPERATOR 00A2  
                              strtol@sign 0017                         ??_TMR2_StartTimer 01CC  
      __end_of_INTERRUPT_InterruptManager 00D8                _INTERRUPT_InterruptManager 0008  
                      ?_combineIO_KG_TEST 01D8                        main@UART_Input_old 01EF  
                              _INTCONbits 000FF2                       ??_combineIO_KG_TEST 01DD  
                         ??_TMR0_CallBack 0001                                  gmtime@tc 0014  
                                gmtime@tp 000F                                  isalpha@c 0006  
                                isdigit@c 0003                    ??_INTERRUPT_Initialize 01CC  
                                memset@p1 0001                              ??_pushOutput 01CD  
                             ??_localtime 001A                           ?_timer_mult_isr 0001  
                                intlevel2 0000                                 sprintf@ap 0030  
                               sprintf@cp 0033                                 sprintf@sp 0029  
                        ___lwmod@dividend 0001                                  isspace@c 0003  
                 ?_PIN_MANAGER_Initialize 0001                                _RCSTA2bits 000F71  
                                isupper@c 0003                                 strncmp@s1 0001  
                               strncmp@s2 0003                                _OSCCONbits 000FD3  
               __end_of_combineIO_KG_TEST 07AE             ?_TMR0_DefaultInterruptHandler 0001  
          combineIO_KG_TEST@INPUT_CHANGED 01DA                    main@Data_Input_compare 01ED  
                           ?_getTimeStemp 0001                            _putUartStrings 1A56  
                      __end_of_pushOutput 1F18                    __size_of_EUSART2_Write 003C  
                                sprintf@c 0032                                  sprintf@f 002B  
                            ?_getInputPin 0001                           ___lwmod@divisor 0003  
                         _TMR0_Initialize 2030                           ___lwmod@counter 0005  
                                toupper@c 0001                  __size_of_uart_receiv_isr 0492  
                            ___aldiv@sign 000A                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 20BE                              ___almod@sign 000A  
                   _TMR2_InterruptHandler 004F               combineIO_KG@Uart_Old_Stored 005E  
                  __end_of_putUartStrings 1AF0  
